
det_ed.f

	REAL(KIND=LDP), PARAMETER :: HDKT=4.7994145_LDP
	REAL(KIND=LDP), PARAMETER :: HDKT=4.7994145D0

	REAL(KIND=LDP), PARAMETER :: EPS=1.0E-05_LDP
	REAL(KIND=LDP), PARAMETER :: EPS=1.0D-05

	PI=ACOS(-1.0_LDP)
	PI=ACOS(-1.0D0)

	ED_OLD=0.0_LDP
	ED_OLD=0.0D0

	POPION_OLD=0.0_LDP
	POPION_OLD=0.0D0

	FSAHA=0.0_LDP
	FSAHA=0.0D0

          XKBT = BOLTZMANN_CONSTANT() * T(L) * 1.0E4_LDP
          XKBT = BOLTZMANN_CONSTANT() * T(L) * 1.0D4

          T1 = (2.0_LDP*PI*ELECTRON_MASS()*XKBT/HSQR)**1.5
          T1 = (2.0D0*PI*ELECTRON_MASS()*XKBT/HSQR)**1.5

	    DO WHILE( ABS(1.0_LDP-ED_OLD(L)/ED(L)) .GT. EPS .OR.
	    DO WHILE( ABS(1.0D0-ED_OLD(L)/ED(L)) .GT. EPS .OR.

	1             ABS(1.0_LDP-POPION_OLD(L)/POPION(L)) .GT. EPS )
	1             ABS(1.0D0-POPION_OLD(L)/POPION(L)) .GT. EPS )

              XKBT = BOLTZMANN_CONSTANT() * T(L) * 1.0E4_LDP
              XKBT = BOLTZMANN_CONSTANT() * T(L) * 1.0D4

              T1 = (2.0_LDP*PI*ELECTRON_MASS()*XKBT/HSQR)**1.5
              T1 = (2.0D0*PI*ELECTRON_MASS()*XKBT/HSQR)**1.5

                  XGE = 2.0_LDP
                  XGE = 2.0D0

              XERR = 2.0_LDP * EPS
              XERR = 2.0D0 * EPS

                T3 = 0.0_LDP
                T3 = 0.0D0

                    T1 = 1.0_LDP
                    T1 = 1.0D0

                    T2 = 1.0_LDP
                    T2 = 1.0D0

                    XZ(ISTART) = 1.0_LDP / T2
                    XZ(ISTART) = 1.0D0 / T2

                XERR = ABS(1.0_LDP-XED_OLD/XEDW)
                XERR = ABS(1.0D0-XED_OLD/XEDW)

	  POPION=0.0_LDP
	  POPION=0.0D0

	      IF(ATM(ID)%ZXzV .GT. 1.01_LDP)THEN
	      IF(ATM(ID)%ZXzV .GT. 1.01D0)THEN

	      T1 = 0.0_LDP
	      T1 = 0.0D0

	      ATM(ID)%XzVLTE(:,L) = 0.0_LDP
	      ATM(ID)%XzVLTE(:,L) = 0.0D0


det_r_grid_v1.f

	REAL(KIND=LDP), PARAMETER :: V_SCL_FAC=0.67_LDP
	REAL(KIND=LDP), PARAMETER :: V_SCL_FAC=0.67D0

	REAL(KIND=LDP), PARAMETER :: dLOG_TAU=0.25_LDP
	REAL(KIND=LDP), PARAMETER :: dLOG_TAU=0.25D0

	  REV_TAU(2)=REV_TAU(1)+dLOG_TAU/9.0_LDP
	  REV_TAU(2)=REV_TAU(1)+dLOG_TAU/9.0D0

	  REV_TAU(3)=REV_TAU(1)+dLOG_TAU/3.0_LDP
	  REV_TAU(3)=REV_TAU(1)+dLOG_TAU/3.0D0

	  REV_V(I)=(1.0_LDP-T1)*V(1)+T1*V(J)
	  REV_V(I)=(1.0D0-T1)*V(1)+T1*V(J)

	  REV_V(I)=(1.0_LDP-T1)*V(1)+T1*V(J)
	  REV_V(I)=(1.0D0-T1)*V(1)+T1*V(J)

	  REV_V(I)=(1.0_LDP-T1)*V(1)+T1*V(J)
	  REV_V(I)=(1.0D0-T1)*V(1)+T1*V(J)

	    REV_TAU(I)=REV_TAU(I-1)+0.6_LDP*T1
	    REV_TAU(I)=REV_TAU(I-1)+0.6*T1

	    REV_TAU(I)=REV_TAU(I-2)+0.9_LDP*T1
	    REV_TAU(I)=REV_TAU(I-2)+0.9*T1

	    REV_V(I)=(1.0_LDP-T1)*V(J-1)+T1*V(J)
	    REV_V(I)=(1.0D0-T1)*V(J-1)+T1*V(J)

	    IF(REV_V(I) .GT. 0.1_LDP .AND. REV_V(I) .LT. 0.67_LDP*REV_V(I-1))THEN
	    IF(REV_V(I) .GT. 0.1D0 .AND. REV_V(I) .LT. 0.67D0*REV_V(I-1))THEN

	      DO WHILE (0.67_LDP*REV_V(I-1) .LT. V(J))
	      DO WHILE (0.67D0*REV_V(I-1) .LT. V(J))

	      T1=(0.67_LDP*REV_V(I-1)-V(J-1))/(V(J)-V(J-1))
	      T1=(0.67D0*REV_V(I-1)-V(J-1))/(V(J)-V(J-1))

	      REV_TAU(I)=(1.0_LDP-T1)*LOG_TAU(J-1)+T1*LOG_TAU(J)
	      REV_TAU(I)=(1.0D0-T1)*LOG_TAU(J-1)+T1*LOG_TAU(J)

	      REV_V(I)=0.67_LDP*REV_V(I-1)
	      REV_V(I)=0.67D0*REV_V(I-1)

	  REV_R(I)=1+((I-1.0_LDP)*(ND_TMP-1.0_LDP) )/(NEW_ND-1.0_LDP)
	  REV_R(I)=1+((I-1.0D0)*(ND_TMP-1.0D0) )/(NEW_ND-1.0D0)


det_r_grid_v2.f

	  ELSE IF(OBND_PARS(2) .LE. 1.0_LDP)THEN
	  ELSE IF(OBND_PARS(2) .LE. 1.0)THEN

	    IF(OBND_PARS(K) .LT. 1.0_LDP .OR. OBND_PARS(K) .LE. OBND_PARS(K+1))THEN
	    IF(OBND_PARS(K) .LT. 1.0 .OR. OBND_PARS(K) .LE. OBND_PARS(K+1))THEN

	  IF(REV_TAU(I) .GE. LOG_TAU_MAX-0.5_LDP*dLOG_TAU)THEN
	  IF(REV_TAU(I) .GE. LOG_TAU_MAX-0.5*dLOG_TAU)THEN

	    REV_V(I)=(1.0_LDP-T1)*V(J-1)+T1*V(J)
	    REV_V(I)=(1.0D0-T1)*V(J-1)+T1*V(J)

	    IF(REV_V(I-1) .GT. 0.1_LDP .AND. REV_V(I) .LT. V_SCL_FAC*REV_V(I-1))THEN
	    IF(REV_V(I-1) .GT. 0.1D0 .AND. REV_V(I) .LT. V_SCL_FAC*REV_V(I-1))THEN

	      REV_TAU(I)=(1.0_LDP-T1)*LOG_TAU(J-1)+T1*LOG_TAU(J)
	      REV_TAU(I)=(1.0D0-T1)*LOG_TAU(J-1)+T1*LOG_TAU(J)

	T1=10.0_LDP; T1=LOG(10.0_LDP)
	T1=10.0D0; T1=LOG(10.0D0)

	  REV_R(I)=1+((I-1.0_LDP)*(ND_TMP-1.0_LDP) )/(NS-1.0_LDP)
	  REV_R(I)=1+((I-1.0D0)*(ND_TMP-1.0D0) )/(NS-1.0D0)

	  REV_TAU(2)=REV_TAU(1)+dLOG_TAU/9.0_LDP
	  REV_TAU(2)=REV_TAU(1)+dLOG_TAU/9.0D0

	  REV_TAU(3)=REV_TAU(1)+dLOG_TAU/3.0_LDP
	  REV_TAU(3)=REV_TAU(1)+dLOG_TAU/3.0D0

	REV_TAU(NS)=REV_TAU(NS-1)+0.6_LDP*dLOG_TAU
	REV_TAU(NS)=REV_TAU(NS-1)+0.6D0*dLOG_TAU

	REV_TAU(NS+1)=REV_TAU(NS-1)+0.9_LDP*dLOG_TAU
	REV_TAU(NS+1)=REV_TAU(NS-1)+0.9D0*dLOG_TAU

	T1=10.0_LDP; T1=LOG(10.0_LDP)
	T1=10.0D0; T1=LOG(10.0D0)


det_r_grid_v3.f

	  ELSE IF(OBND_PARS(2) .LE. 1.0_LDP)THEN
	  ELSE IF(OBND_PARS(2) .LE. 1.0)THEN

	    IF(OBND_PARS(K) .LT. 1.0_LDP .OR. OBND_PARS(K) .LE. OBND_PARS(K+1))THEN
	    IF(OBND_PARS(K) .LT. 1.0 .OR. OBND_PARS(K) .LE. OBND_PARS(K+1))THEN

	  IF(REV_TAU(I) .GE. LOG_TAU_MAX-0.5_LDP*dLOG_TAU)THEN
	  IF(REV_TAU(I) .GE. LOG_TAU_MAX-0.5*dLOG_TAU)THEN

	    REV_V(I)=(1.0_LDP-T1)*V(J-1)+T1*V(J)
	    REV_V(I)=(1.0D0-T1)*V(J-1)+T1*V(J)

	    IF(REV_V(I-1) .GT. 0.1_LDP .AND. REV_V(I) .LT. V_SCL_FAC*REV_V(I-1))THEN
	    IF(REV_V(I-1) .GT. 0.1D0 .AND. REV_V(I) .LT. V_SCL_FAC*REV_V(I-1))THEN

	      REV_TAU(I)=(1.0_LDP-T1)*LOG_TAU(J-1)+T1*LOG_TAU(J)
	      REV_TAU(I)=(1.0D0-T1)*LOG_TAU(J-1)+T1*LOG_TAU(J)

	    REV_R(I)=(1.0_LDP-T1)*R(J-1)+T1*R(J)
	    REV_R(I)=(1.0D0-T1)*R(J-1)+T1*R(J)

	    IF(REV_R(I-1) .GT. 0.1_LDP .AND. REV_R(I) .LT. R_SCL_FAC*REV_R(I-1))THEN
	    IF(REV_R(I-1) .GT. 0.1D0 .AND. REV_R(I) .LT. R_SCL_FAC*REV_R(I-1))THEN

	      REV_TAU(I)=(1.0_LDP-T1)*LOG_TAU(J-1)+T1*LOG_TAU(J)
	      REV_TAU(I)=(1.0D0-T1)*LOG_TAU(J-1)+T1*LOG_TAU(J)

	T1=10.0_LDP; T1=LOG(10.0_LDP)
	T1=10.0D0; T1=LOG(10.0D0)

	  REV_R(I)=1+((I-1.0_LDP)*(ND_TMP-1.0_LDP) )/(NS-1.0_LDP)
	  REV_R(I)=1+((I-1.0D0)*(ND_TMP-1.0D0) )/(NS-1.0D0)

	  REV_TAU(2)=REV_TAU(1)+dLOG_TAU/9.0_LDP
	  REV_TAU(2)=REV_TAU(1)+dLOG_TAU/9.0D0

	  REV_TAU(3)=REV_TAU(1)+dLOG_TAU/3.0_LDP
	  REV_TAU(3)=REV_TAU(1)+dLOG_TAU/3.0D0

	REV_TAU(NS)=REV_TAU(NS-1)+0.6_LDP*dLOG_TAU
	REV_TAU(NS)=REV_TAU(NS-1)+0.6D0*dLOG_TAU

	REV_TAU(NS+1)=REV_TAU(NS-1)+0.9_LDP*dLOG_TAU
	REV_TAU(NS+1)=REV_TAU(NS-1)+0.9D0*dLOG_TAU

	T1=10.0_LDP; T1=LOG(10.0_LDP)
	T1=10.0D0; T1=LOG(10.0D0)


genopaeta_v8.f

	    CHI(K)=CHI(K)+TCHI1*ALPHA*(1.0_LDP-EMHNUKT(K))
	    CHI(K)=CHI(K)+TCHI1*ALPHA*(1.0D0-EMHNUKT(K))

	    IF(DIST(ION_LEV,K) .NE. 0.0_LDP .AND. DI(1,K) .NE. 0)THEN
	    IF(DIST(ION_LEV,K) .NE. 0.0D0 .AND. DI(1,K) .NE. 0)THEN

	       COR_FAC=0.0_LDP
	       COR_FAC=0.0D0

	NO_NON_ZERO_PHOT=COUNT(ALPHA_VEC .GT. 0.0_LDP)
	NO_NON_ZERO_PHOT=COUNT(ALPHA_VEC .GT. 0.0D0)

	DIS_CONST(1:N)=-1.0_LDP
	DIS_CONST(1:N)=-1.0D0

	      NEFF=SQRT(3.289395_LDP*ZION*ZION/(EDGE(I)-NU))
	      NEFF=SQRT(3.289395*ZION*ZION/(EDGE(I)-NU))

	        T1=MIN(1.0_LDP,16.0_LDP*NEFF/(1+NEFF)/(1+NEFF)/3.0_LDP)
	        T1=MIN(1.0D0,16.0D0*NEFF/(1+NEFF)/(1+NEFF)/3.0D0)

	        DIS_CONST(I)=( T1*ZION_CUBED/(NEFF**4) )**1.5_LDP
	        DIS_CONST(I)=( T1*ZION_CUBED/(NEFF**4) )**1.5D0

	    YDIS(K)=1.091_LDP*(X_LEV_DIS(K)+4.0_LDP*(ZION-1)*A_LEV_DIS(K))*
	    YDIS(K)=1.091*(X_LEV_DIS(K)+4.0D0*(ZION-1)*A_LEV_DIS(K))*

	    IF(NU .GE. EDGE(I) .AND. ALPHA_VEC(I) .GT. 0.0_LDP)THEN
	    IF(NU .GE. EDGE(I) .AND. ALPHA_VEC(I) .GT. 0.0D0)THEN

	        T1=7.782_LDP+XDIS(K)*DIS_CONST(I)
	        T1=7.782+XDIS(K)*DIS_CONST(I)

	    TMP_CHI(1:N)=0.0_LDP
	    TMP_CHI(1:N)=0.0D0

	    TMP_ETA(1:N)=0.0_LDP
	    TMP_ETA(1:N)=0.0D0

	      IF(NU .GE. EDGE(I) .AND. ALPHA_VEC(I) .GT. 0.0_LDP)THEN
	      IF(NU .GE. EDGE(I) .AND. ALPHA_VEC(I) .GT. 0.0D0)THEN

	        T1=7.782_LDP+XDIS(K)*DIS_CONST(I)
	        T1=7.782+XDIS(K)*DIS_CONST(I)


get_lte_ross_v2.f

	D1=T1*LOG(KAP(I_T-1,I_D-1))+(1.0_LDP-T1)*LOG(KAP(I_T,I_D-1))
	D1=T1*LOG(KAP(I_T-1,I_D-1))+(1.0D0-T1)*LOG(KAP(I_T,I_D-1))

	D2=T1*LOG(KAP(I_T-1,I_D))+(1.0_LDP-T1)*LOG(KAP(I_T,I_D))
	D2=T1*LOG(KAP(I_T-1,I_D))+(1.0D0-T1)*LOG(KAP(I_T,I_D))

	KAP_VAL=EXP(T2*D1+(1.0_LDP-T2)*D2)
	KAP_VAL=EXP(T2*D1+(1.0D0-T2)*D2)

	D1=T1*LOG(KES(I_T-1,I_D-1))+(1.0_LDP-T1)*LOG(KES(I_T,I_D-1))
	D1=T1*LOG(KES(I_T-1,I_D-1))+(1.0D0-T1)*LOG(KES(I_T,I_D-1))

	D2=T1*LOG(KES(I_T-1,I_D))+(1.0_LDP-T1)*LOG(KES(I_T,I_D))
	D2=T1*LOG(KES(I_T-1,I_D))+(1.0D0-T1)*LOG(KES(I_T,I_D))

	KAP_ES=EXP(T2*D1+(1.0_LDP-T2)*D2)
	KAP_ES=EXP(T2*D1+(1.0D0-T2)*D2)

	D1=T1*LOG(ED(I_T-1,I_D-1))+(1.0_LDP-T1)*LOG(ED(I_T,I_D-1))
	D1=T1*LOG(ED(I_T-1,I_D-1))+(1.0D0-T1)*LOG(ED(I_T,I_D-1))

	D2=T1*LOG(ED(I_T-1,I_D))+(1.0_LDP-T1)*LOG(ED(I_T,I_D))
	D2=T1*LOG(ED(I_T-1,I_D))+(1.0D0-T1)*LOG(ED(I_T,I_D))

	LTE_ED=EXP(T2*D1+(1.0_LDP-T2)*D2)
	LTE_ED=EXP(T2*D1+(1.0D0-T2)*D2)


lte.f

	CHIBF=2.815E-06_LDP
	CHIBF=2.815D-06

	CHIFF=3.69E-29_LDP
	CHIFF=3.69D-29

	HDKT=4.7994145_LDP
	HDKT=4.7994145D0

	TWOHCSQ=0.0147452575_LDP
	TWOHCSQ=0.0147452575D0

	OPLIN=2.6540081E+08_LDP
	OPLIN=2.6540081D+08

	EMLIN=5.27296E-03_LDP
	EMLIN=5.27296D-03

	AT_NO(1)=1.0_LDP;		    AT_MASS(ID)=1.0_LDP
	AT_NO(1)=1.0D0;		    AT_MASS(ID)=1.0D0

	SOL_ABUND_HSCL(ID)=12.0_LDP
	SOL_ABUND_HSCL(ID)=12.0D0

	AT_NO(ID)=2.0_LDP; 	    AT_MASS(ID)=4.0_LDP		!Helium
	AT_NO(ID)=2.0D0; 	    AT_MASS(ID)=4.0D0		!Helium

	SOL_ABUND_HSCL(ID)=11.0_LDP
	SOL_ABUND_HSCL(ID)=11.0D0

	AT_NO(ID)=6.0_LDP;	    AT_MASS(ID)=12.0_LDP		!Carbon
	AT_NO(ID)=6.0D0;	    AT_MASS(ID)=12.0D0		!Carbon

	SOL_ABUND_HSCL(ID)=8.56_LDP
	SOL_ABUND_HSCL(ID)=8.56D0

	AT_NO(ID)=7.0_LDP;	    AT_MASS(ID)=14.0_LDP		!Nitrogen
	AT_NO(ID)=7.0D0;	    AT_MASS(ID)=14.0D0		!Nitrogen

	SOL_ABUND_HSCL(ID)=8.05_LDP
	SOL_ABUND_HSCL(ID)=8.05D0

	AT_NO(ID)=8.0_LDP; 	    AT_MASS(ID)=16.0_LDP		!Oxygen
	AT_NO(ID)=8.0D0; 	    AT_MASS(ID)=16.0D0		!Oxygen

	SOL_ABUND_HSCL(ID)=8.93_LDP
	SOL_ABUND_HSCL(ID)=8.93D0

	AT_NO(ID)=9.0_LDP;            AT_MASS(ID)=19.00_LDP         !Fluorine
	AT_NO(ID)=9.0D0;            AT_MASS(ID)=19.00D0         !Fluorine

	SOL_ABUND_HSCL(ID)=4.56_LDP
	SOL_ABUND_HSCL(ID)=4.56D0

	AT_NO(ID)=10.0_LDP;	    AT_MASS(ID)=20.2_LDP		!Neon
	AT_NO(ID)=10.0D0;	    AT_MASS(ID)=20.2D0		!Neon

	SOL_ABUND_HSCL(ID)=8.09_LDP
	SOL_ABUND_HSCL(ID)=8.09D0

	AT_NO(ID)=11.0_LDP;	    AT_MASS(ID)=23.0_LDP		!Sodium
	AT_NO(ID)=11.0D0;	    AT_MASS(ID)=23.0D0		!Sodium

	SOL_ABUND_HSCL(ID)=6.33_LDP
	SOL_ABUND_HSCL(ID)=6.33D0

	AT_NO(ID)=12.0_LDP;	    AT_MASS(ID)=24.3_LDP		!Magnesium
	AT_NO(ID)=12.0D0;	    AT_MASS(ID)=24.3D0		!Magnesium

	SOL_ABUND_HSCL(ID)=7.58_LDP
	SOL_ABUND_HSCL(ID)=7.58D0

	AT_NO(ID)=13.0_LDP;	    AT_MASS(ID)=27.0_LDP		!Aluminium
	AT_NO(ID)=13.0D0;	    AT_MASS(ID)=27.0D0		!Aluminium

	SOL_ABUND_HSCL(ID)=6.47_LDP
	SOL_ABUND_HSCL(ID)=6.47D0

	AT_NO(ID)=14.0_LDP;	    AT_MASS(ID)=28.1_LDP		!Silicon
	AT_NO(ID)=14.0D0;	    AT_MASS(ID)=28.1D0		!Silicon

	SOL_ABUND_HSCL(ID)=7.55_LDP
	SOL_ABUND_HSCL(ID)=7.55D0

	AT_NO(ID)=15.0_LDP;	    AT_MASS(ID)=31.0_LDP		!Phosphorous
	AT_NO(ID)=15.0D0;	    AT_MASS(ID)=31.0D0		!Phosphorous

	SOL_ABUND_HSCL(ID)=5.45_LDP
	SOL_ABUND_HSCL(ID)=5.45D0

	AT_NO(ID)=16.0_LDP;	    AT_MASS(ID)=32.1_LDP		!Sulpher
	AT_NO(ID)=16.0D0;	    AT_MASS(ID)=32.1D0		!Sulpher

	SOL_ABUND_HSCL(ID)=7.21_LDP
	SOL_ABUND_HSCL(ID)=7.21D0

	AT_NO(ID)=17.0_LDP;	    AT_MASS(ID)=35.5_LDP		!Chlorine
	AT_NO(ID)=17.0D0;	    AT_MASS(ID)=35.5D0		!Chlorine

	SOL_ABUND_HSCL(ID)=5.5_LDP
	SOL_ABUND_HSCL(ID)=5.5D0

	AT_NO(ID)=18.0_LDP;	    AT_MASS(ID)=39.9_LDP		!Argon
	AT_NO(ID)=18.0D0;	    AT_MASS(ID)=39.9D0		!Argon

	SOL_ABUND_HSCL(ID)=6.56_LDP
	SOL_ABUND_HSCL(ID)=6.56D0

	AT_NO(ID)=19.0_LDP;	    AT_MASS(ID)=39.1_LDP		!Potassium
	AT_NO(ID)=19.0D0;	    AT_MASS(ID)=39.1D0		!Potassium

	SOL_ABUND_HSCL(ID)=5.12_LDP
	SOL_ABUND_HSCL(ID)=5.12D0

	AT_NO(ID)=20.0_LDP;	    AT_MASS(ID)=40.1_LDP		!Calcium
	AT_NO(ID)=20.0D0;	    AT_MASS(ID)=40.1D0		!Calcium

	SOL_ABUND_HSCL(ID)=6.36_LDP
	SOL_ABUND_HSCL(ID)=6.36D0

	AT_NO(ID)=21.0_LDP;           AT_MASS(ID)=44.96_LDP         !Scandium
	AT_NO(ID)=21.0D0;           AT_MASS(ID)=44.96D0         !Scandium

	SOL_ABUND_HSCL(ID)=3.10_LDP
	SOL_ABUND_HSCL(ID)=3.10D0

	AT_NO(ID)=22.0_LDP;	    AT_MASS(ID)=47.88_LDP		!Titanium
	AT_NO(ID)=22.0D0;	    AT_MASS(ID)=47.88D0		!Titanium

	SOL_ABUND_HSCL(ID)=4.99_LDP
	SOL_ABUND_HSCL(ID)=4.99D0

	AT_NO(ID)=23.0_LDP;           AT_MASS(ID)=50.94_LDP         !Vandium
	AT_NO(ID)=23.0D0;           AT_MASS(ID)=50.94D0         !Vandium

	SOL_ABUND_HSCL(ID)=4.00_LDP
	SOL_ABUND_HSCL(ID)=4.00D0

	AT_NO(ID)=24.0_LDP;	    AT_MASS(ID)=52.0_LDP		!Chromium
	AT_NO(ID)=24.0D0;	    AT_MASS(ID)=52.0D0		!Chromium

	SOL_ABUND_HSCL(ID)=5.67_LDP
	SOL_ABUND_HSCL(ID)=5.67D0

	AT_NO(ID)=25.0_LDP;	    AT_MASS(ID)=54.9_LDP		!Maganese
	AT_NO(ID)=25.0D0;	    AT_MASS(ID)=54.9D0		!Maganese

	SOL_ABUND_HSCL(ID)=5.39_LDP
	SOL_ABUND_HSCL(ID)=5.39D0

	AT_NO(ID)=26.0_LDP;	    AT_MASS(ID)=55.8_LDP		!Iron
	AT_NO(ID)=26.0D0;	    AT_MASS(ID)=55.8D0		!Iron

	SOL_ABUND_HSCL(ID)=7.54_LDP
	SOL_ABUND_HSCL(ID)=7.54D0

	AT_NO(ID)=27.0_LDP;	    AT_MASS(ID)=58.9_LDP		!Cobalt
	AT_NO(ID)=27.0D0;	    AT_MASS(ID)=58.9D0		!Cobalt

	SOL_ABUND_HSCL(ID)=4.92_LDP
	SOL_ABUND_HSCL(ID)=4.92D0

	AT_NO(ID)=28.0_LDP;	    AT_MASS(ID)=58.7_LDP		!Nickel
	AT_NO(ID)=28.0D0;	    AT_MASS(ID)=58.7D0		!Nickel

	SOL_ABUND_HSCL(ID)=6.25_LDP
	SOL_ABUND_HSCL(ID)=6.25D0

	AT_NO(ID)=56.0_LDP;           AT_MASS(ID)=137.33_LDP        !Barium
	AT_NO(ID)=56.0D0;           AT_MASS(ID)=137.33D0        !Barium

	SOL_ABUND_HSCL(ID)=2.13_LDP
	SOL_ABUND_HSCL(ID)=2.13D0

	T1=0.0_LDP
	T1=0.0D0

	  SOL_MASS_FRAC(ID)=10.0_LDP**(SOL_ABUND_HSCL(ID)-12.0_LDP)
	  SOL_MASS_FRAC(ID)=10.0D0**(SOL_ABUND_HSCL(ID)-12.0D0)

	AT_ABUND(:)=0.0_LDP
	AT_ABUND(:)=0.0D0

	FLUX_MEAN(:)=0.0_LDP
	FLUX_MEAN(:)=0.0D0

	ROSS_MEAN(:)=0.0_LDP
	ROSS_MEAN(:)=0.0D0

	ALLOCATE (POP_SPECIES(ND,NUM_SPECIES)); POP_SPECIES=0.0_LDP
	ALLOCATE (POP_SPECIES(ND,NUM_SPECIES)); POP_SPECIES=0.0D0

	ALLOCATE (GAM_SPECIES(ND,NUM_SPECIES)); GAM_SPECIES=0.0_LDP
	ALLOCATE (GAM_SPECIES(ND,NUM_SPECIES)); GAM_SPECIES=0.0D0

	  IF(IOS .EQ. 0)ALLOCATE (ATM(ID)%DXzV_F(ND),STAT=IOS)       ; ATM(ID)%DXzV_F(:)=0.0_LDP
	  IF(IOS .EQ. 0)ALLOCATE (ATM(ID)%DXzV_F(ND),STAT=IOS)       ; ATM(ID)%DXzV_F(:)=0.0D0

	  IF(IOS .EQ. 0)ALLOCATE (ATM(ID)%DXzV(ND),STAT=IOS)         ; ATM(ID)%DXzV(:)=0.0_LDP
	  IF(IOS .EQ. 0)ALLOCATE (ATM(ID)%DXzV(ND),STAT=IOS)         ; ATM(ID)%DXzV(:)=0.0D0


lte_pop_sl.f

	    HNST_S(L,K)=0.0_LDP
	    HNST_S(L,K)=0.0D0

	    dlnHNST_S_dlnT(L,K)=0.0_LDP
	    dlnHNST_S_dlnT(L,K)=0.0D0

	    IF(HNST_S(L,K) .NE. 0.0_LDP)dlnHNST_S_dlnT(L,K)=-1.5_LDP -
	    IF(HNST_S(L,K) .NE. 0.0D0)dlnHNST_S_dlnT(L,K)=-1.5D0 -


ltepop_wld_v1.f

	RGU=LOG(2.07078E-22_LDP)
	RGU=LOG(2.07078D-22)

	  Y=ED(K)*DIC2(K)*( T(K)**(-1.5_LDP) )/GION_C2
	  Y=ED(K)*DIC2(K)*( T(K)**(-1.5) )/GION_C2

	    C2LTE(:,K)=0.0_LDP
	    C2LTE(:,K)=0.0D0


lte_sub.f

	DATA LAM_FLUX_MEAN_BAND_END/100.0_LDP,150.0_LDP,200.0_LDP,227.83_LDP,258.90_LDP,300.0_LDP,504.25_LDP,911.75_LDP,
	DATA LAM_FLUX_MEAN_BAND_END/100.0D0,150.0D0,200.0D0,227.83D0,258.90D0,300.0D0,504.25D0,911.75D0,

	1                         1200.0_LDP,1500.0_LDP,2000.0_LDP,1.0E+08_LDP/
	1                         1200.0D0,1500.0D0,2000.0D0,1.0D+08/

	DATA TAU_EDGE/13.16_LDP,11.60_LDP,5.95_LDP,3.29_LDP,0.83_LDP/
	DATA TAU_EDGE/13.16D0,11.60D0,5.95D0,3.29D0,0.83D0/

	MAXCH_SUM=0.0_LDP
	MAXCH_SUM=0.0D0

	MAXCH=100._LDP
	MAXCH=100.D0

	RMDOT=RMDOT*3.02286E+23_LDP
	RMDOT=RMDOT*3.02286E+23

	T1=10.0_LDP/(NLF-1)
	T1=10.0/(NLF-1)

	  PF(ML)=5.0_LDP-T1*(ML-1)
	  PF(ML)=5.0D0-T1*(ML-1)

	        T2=0.0_LDP
	        T2=0.0D0

	  Z_POP(I)=0.0_LDP
	  Z_POP(I)=0.0D0

	AMASS_ALL(1:NT)=0.0_LDP
	AMASS_ALL(1:NT)=0.0D0

	  R(ND-I+1)=1.0_LDP+(I-1)*0.01_LDP
	  R(ND-I+1)=1.0D0+(I-1)*0.01D0

	  V(I)=1.0_LDP
	  V(I)=1.0D0

	  SIGMA(I)=0.0_LDP
	  SIGMA(I)=0.0D0

	T1=4.286299E-05_LDP*SQRT( TDOP/AMASS_DOP + (VTURB/12.85_LDP)**2 )
	T1=4.286299D-05*SQRT( TDOP/AMASS_DOP + (VTURB/12.85)**2 )

	  ERF(I)=-0.5_LDP*S15ADF(PF(I),J)
	  ERF(I)=-0.5D0*S15ADF(PF(I),J)

        VDOP_VEC(1:ND)=12.85_LDP*SQRT( TDOP/AMASS_DOP + (VTURB/12.85_LDP)**2 )
        VDOP_VEC(1:ND)=12.85D0*SQRT( TDOP/AMASS_DOP + (VTURB/12.85D0)**2 )

	AVE_ENERGY(:)=0.0_LDP
	AVE_ENERGY(:)=0.0D0

	  TA(1:ND)=1.0_LDP	!TEXT not required, T currently zero
	  TA(1:ND)=1.0D0	!TEXT not required, T currently zero

          VDOP_VEC_EXT(1:NDEXT)=12.85_LDP*SQRT( TDOP/AMASS_DOP + (VTURB/12.85_LDP)**2 )
          VDOP_VEC_EXT(1:NDEXT)=12.85D0*SQRT( TDOP/AMASS_DOP + (VTURB/12.85D0)**2 )

	    POPION(J)=0.0_LDP
	    POPION(J)=0.0D0

	DTDR=0.0_LDP
	DTDR=0.0D0

	  RJ(1:ND)=0.0_LDP
	  RJ(1:ND)=0.0D0

	  INT_dBdT=0.0_LDP
	  INT_dBdT=0.0D0

	  ROSS_MEAN=0.0_LDP
	  ROSS_MEAN=0.0D0

	  CONT_FREQ=0.0_LDP
	  CONT_FREQ=0.0D0

	      T2=T1*EMHNUKT(L)/(  ( (1.0_LDP-EMHNUKT(L))*T(L) )**2  )
	      T2=T1*EMHNUKT(L)/(  ( (1.0D0-EMHNUKT(L))*T(L) )**2  )

	  T1=1.0E-12_LDP
	  T1=1.0D-12

	      IF(ROSS_MEAN(L) .NE.  ROSS_MEAN(L))ROSS_MEAN(L)=6.65E-15_LDP*ED(L)
	      IF(ROSS_MEAN(L) .NE.  ROSS_MEAN(L))ROSS_MEAN(L)=6.65D-15*ED(L)

	  POPION(J)=0.0_LDP
	  POPION(J)=0.0D0

	  T1=RMDOT/3.02286E+23_LDP
	  T1=RMDOT/3.02286D+23

	  TA(1:ND)=0.0_LDP ; DO I=2,ND ; TA(I) = TA(I-1)+DTAU(I-1) ; END DO
	  TA(1:ND)=0.0D0 ; DO I=2,ND ; TA(I) = TA(I-1)+DTAU(I-1) ; END DO

	  TB(1)=MIN(2.0_LDP/3.0_LDP,TA(ND))  ; TB(2)=MIN(10.0_LDP,TA(ND))
	  TB(1)=MIN(2.0D0/3.0D0,TA(ND))  ; TB(2)=MIN(10.0D0,TA(ND))

	  TB(3)=MIN(20.0_LDP,TA(ND))
	  TB(3)=MIN(20.0D0,TA(ND))

	  T1=1.0E+10_LDP*RP/RAD_SUN(); CALL WR_VAL_INFO(STRING,NEXT_LOC,'R*/Rsun',T1)
	  T1=1.0D+10*RP/RAD_SUN(); CALL WR_VAL_INFO(STRING,NEXT_LOC,'R*/Rsun',T1)

	  T1=TEFF_SUN()*(LUM/T1**2)**0.25_LDP
	  T1=TEFF_SUN()*(LUM/T1**2)**0.25

	  IF(TA(ND) .GT. 20.0_LDP)THEN
	  IF(TA(ND) .GT. 20.0D0)THEN

	    T1=1.0E+10_LDP*TC(3)/RAD_SUN()
	    T1=1.0D+10*TC(3)/RAD_SUN()

	    T1=TEFF_SUN()*(LUM/T1**2)**0.25_LDP
	    T1=TEFF_SUN()*(LUM/T1**2)**0.25

	  IF(TA(ND) .GT. 10.0_LDP)THEN
	  IF(TA(ND) .GT. 10.0D0)THEN

	    T1=1.0E+10_LDP*TC(2)/RAD_SUN()
	    T1=1.0D+10*TC(2)/RAD_SUN()

	    T1=TEFF_SUN()*(LUM/T1**2)**0.25_LDP
	    T1=TEFF_SUN()*(LUM/T1**2)**0.25

	  IF(TA(ND) .GT. 0.67_LDP)THEN
	  IF(TA(ND) .GT. 0.67D0)THEN

	    T1=1.0E+10_LDP*TC(1)/RAD_SUN()
	    T1=1.0D+10*TC(1)/RAD_SUN()

	    T1=TEFF_SUN()*(LUM/T1**2)**0.25_LDP
	    T1=TEFF_SUN()*(LUM/T1**2)**0.25

	  T1=4.9376E+07_LDP*(RMDOT/3.02286E+23_LDP)*V(1)/LUM
	  T1=4.9376D+07*(RMDOT/3.02286D+23)*V(1)/LUM

	  T2=8.235E+03_LDP*(RMDOT/3.02286E+23_LDP)*V(1)*V(1)/LUM
	  T2=8.235D+03*(RMDOT/3.02286D+23)*V(1)*V(1)/LUM

	      POPION(J)=0.0_LDP
	      POPION(J)=0.0D0

	  GAM_SPECIES(1:ND,ISPEC)=0.0_LDP
	  GAM_SPECIES(1:ND,ISPEC)=0.0D0


set_line_opac.f

          NUM_OF_WEAK_LINES=0.0_LDP
          NUM_OF_WEAK_LINES=0.0D0

	          T1=2.99792458E+05_LDP*(FL/NU(NUP)-1.0_LDP)
	          T1=2.99792458D+05*(FL/NU(NUP)-1.0D0)

	          T2=2.99792458E+05_LDP*(1.0_LDP-FL/NU(NL))
	          T2=2.99792458D+05*(1.0D0-FL/NU(NL))

	    L_STAR_RATIO(K,SIM_INDX)=1.0_LDP
	    L_STAR_RATIO(K,SIM_INDX)=1.0D0

	    U_STAR_RATIO(K,SIM_INDX)=1.0_LDP
	    U_STAR_RATIO(K,SIM_INDX)=1.0D0

	1         (-1.5_LDP-HDKT*ATM(ID)%EDGEXzV_F(MNL_F)/T(K)-ATM(ID)%dlnXzVLTE_dlnT(MNL,K))/T(K)
	1         (-1.5D0-HDKT*ATM(ID)%EDGEXzV_F(MNL_F)/T(K)-ATM(ID)%dlnXzVLTE_dlnT(MNL,K))/T(K)

	1         (-1.5_LDP-HDKT*ATM(ID)%EDGEXzV_F(MNUP_F)/T(K)-ATM(ID)%dlnXzVLTE_dlnT(MNUP,K))/T(K)
	1         (-1.5D0-HDKT*ATM(ID)%EDGEXzV_F(MNUP_F)/T(K)-ATM(ID)%dlnXzVLTE_dlnT(MNUP,K))/T(K)

	      dU_RAT_dT(K,SIM_INDX)=0.0_LDP
	      dU_RAT_dT(K,SIM_INDX)=0.0D0

	      dL_RAT_dT(K,SIM_INDX)=0.0_LDP
	      dL_RAT_dT(K,SIM_INDX)=0.0D0

	  T3=1.0_LDP
	  T3=1.0D0

	    IF(ABS(T3-1.0_LDP) .GT. SCL_LINE_HT_FAC)T3=1.0_LDP
	    IF(ABS(T3-1.0D0) .GT. SCL_LINE_HT_FAC)T3=1.0D0

	      CHIL_MAT(I,SIM_INDX)=0.01_LDP*T1*POPS(NL,I)*L_STAR_RATIO(I,SIM_INDX)
	      CHIL_MAT(I,SIM_INDX)=0.01D0*T1*POPS(NL,I)*L_STAR_RATIO(I,SIM_INDX)

	  T1=1.0E-15_LDP/1.77245385095516_LDP		!1.0D-15/SQRT(PI)
	  T1=1.0D-15/1.77245385095516D0		!1.0D-15/SQRT(PI)

	      NU_DOP=FL_SIM(SIM_INDX)*12.85_LDP*SQRT( TDOP/AMASS_SIM(SIM_INDX) + (VTURB/12.85_LDP)**2 )/2.998E+05_LDP
	      NU_DOP=FL_SIM(SIM_INDX)*12.85D0*SQRT( TDOP/AMASS_SIM(SIM_INDX) + (VTURB/12.85D0)**2 )/2.998D+05

	      LINE_PROF_SIM(ND,SIM_INDX)=0.0_LDP
	      LINE_PROF_SIM(ND,SIM_INDX)=0.0D0

	  TB(1:ND)=0.0_LDP; TC(1:ND)=0.0_LDP
	  TB(1:ND)=0.0D0; TC(1:ND)=0.0D0

	    ED_MOD(I)=MIN(15.0_LDP,ED_MOD(I))
	    ED_MOD(I)=MIN(15.0D0,ED_MOD(I))

	      ID=VEC_ID(J); T1=ATM(ID)%ZXzV+1; T3=0.0_LDP
	      ID=VEC_ID(J); T1=ATM(ID)%ZXzV+1; T3=0.0D0

	      LINE_PROF_SIM(1:ND,SIM_INDX)=0.0_LDP
	      LINE_PROF_SIM(1:ND,SIM_INDX)=0.0D0

	  T1=(NU(1)-NU(2))*0.5E+15_LDP
	  T1=(NU(1)-NU(2))*0.5D+15

	  T1=(NU(NCF-1)-NU(NCF))*0.5E+15_LDP
	  T1=(NU(NCF-1)-NU(NCF))*0.5D+15

	  T1=(NU(FREQ_INDX-1)-NU(FREQ_INDX+1))*0.5E+15_LDP
	  T1=(NU(FREQ_INDX-1)-NU(FREQ_INDX+1))*0.5D+15


set_lte_est.f

	DELTA_T=0.0_LDP
	DELTA_T=0.0D0

	DELTA_ED=0.0_LDP
	DELTA_ED=0.0D0

	Z_POP(1:NT)=0.0_LDP
	Z_POP(1:NT)=0.0D0

	  POPION(J)=0.0_LDP
	  POPION(J)=0.0D0


wind_hyd.f

	BC=1.0E+04_LDP*BOLTZMANN_CONSTANT()   	!erg/10^4 K
	BC=1.0D+04*BOLTZMANN_CONSTANT()   	!erg/10^4 K

	GRAV_CON=1.0E-20_LDP*GRAVITATIONAL_CONSTANT()*MASS_SUN()
	GRAV_CON=1.0D-20*GRAVITATIONAL_CONSTANT()*MASS_SUN()

	SIGMA_TH=6.65E-15_LDP			!cm^{-2} x 10^10
	SIGMA_TH=6.65D-15			!cm^{-2} x 10^10

	MASS_LOSS_SCALE_FACTOR=3.02286E+23_LDP
	MASS_LOSS_SCALE_FACTOR=3.02286D+23

	OLD_TAU_MAX=100.0_LDP
	OLD_TAU_MAX=100.0D0

	RBOUND=0.0_LDP
	RBOUND=0.0D0

	dLOG_TAU=0.25_LDP
	dLOG_TAU=0.25D0

	V_SCL_FAC=0.67E00_LDP
	V_SCL_FAC=0.67D00

	OBND_PARS(:)=0.0_LDP
	OBND_PARS(:)=0.0D0

	GAM_LIM=0.98_LDP
	GAM_LIM=0.98D0

	  OLD_ESEC(1:OLD_ND)=6.65E-15_LDP*OLD_ED(1:OLD_ND)
	  OLD_ESEC(1:OLD_ND)=6.65D-15*OLD_ED(1:OLD_ND)

	  OLD_KAP_ROSS=1.0E-10_LDP*OLD_ROSS_MEAN/OLD_MASS_DENSITY
	  OLD_KAP_ROSS=1.0D-10*OLD_ROSS_MEAN/OLD_MASS_DENSITY

	  OLD_KAP_FLUX=1.0E-10_LDP*OLD_FLUX_MEAN/OLD_MASS_DENSITY
	  OLD_KAP_FLUX=1.0D-10*OLD_FLUX_MEAN/OLD_MASS_DENSITY

	  OLD_KAP_ESEC=1.0E-10_LDP*OLD_ESEC/OLD_MASS_DENSITY
	  OLD_KAP_ESEC=1.0D-10*OLD_ESEC/OLD_MASS_DENSITY

	  T1=2.0_LDP/3.0_LDP
	  T1=2.0D0/3.0D0

	    OLD_REF_RADIUS=(1.0_LDP-T1)*OLD_R(I)+T1*OLD_R(I+1)
	    OLD_REF_RADIUS=(1.0D0-T1)*OLD_R(I)+T1*OLD_R(I+1)

	    GAM_EDD=1.0E+06_LDP*SIGMA_TH*STEFAN_BC*(TEFF**4)/MU_ATOM/C_CMS/(10**LOGG)/AMU
	    GAM_EDD=1.0D+06*SIGMA_TH*STEFAN_BC*(TEFF**4)/MU_ATOM/C_CMS/(10**LOGG)/AMU

	    T1=OLD_REF_RADIUS/6.9599_LDP
	    T1=OLD_REF_RADIUS/6.9599D0

	    OLD_TEFF=0.5770_LDP*(RLUM/T1/T1)**0.25_LDP           !in 10^4 K
	    OLD_TEFF=0.5770D0*(RLUM/T1/T1)**0.25           !in 10^4 K

	    OLD_SF(1:OLD_ND)=OLD_T(1:OLD_ND)/OLD_TEFF/(OLD_TAU(1:OLD_ND)+0.67_LDP)**0.25_LDP
	    OLD_SF(1:OLD_ND)=OLD_T(1:OLD_ND)/OLD_TEFF/(OLD_TAU(1:OLD_ND)+0.67D0)**0.25D0

	DO WHILE(ABS(REFERENCE_RADIUS/PREV_REF_RADIUS-1.0_LDP) .GT. 1.0E-05_LDP)
	DO WHILE(ABS(REFERENCE_RADIUS/PREV_REF_RADIUS-1.0) .GT. 1.0D-05)

	  GAM_EDD=1.0E+06_LDP*SIGMA_TH*STEFAN_BC*(TEFF**4)/MU_ATOM/C_CMS/(10**LOGG)/AMU
	  GAM_EDD=1.0D+06*SIGMA_TH*STEFAN_BC*(TEFF**4)/MU_ATOM/C_CMS/(10**LOGG)/AMU

	        P(I)=BC*T(I)*POP_ATOM(I)*(1.0_LDP+OLD_ED(I)/OLD_POP_ATOM(I))
	        P(I)=BC*T(I)*POP_ATOM(I)*(1.0D0+OLD_ED(I)/OLD_POP_ATOM(I))

	      T1=1.0E-10_LDP*BC*TEFF*(1+ED_ON_NA_EST)/( (10.0_LDP**LOGG)*(1.0_LDP-GAM_FULL)*MU_ATOM*AMU )
	      T1=1.0D-10*BC*TEFF*(1+ED_ON_NA_EST)/( (10.0**LOGG)*(1.0D0-GAM_FULL)*MU_ATOM*AMU )

	      T2=CONNECTION_VEL*(1.0_LDP/T1-2.0_LDP/CONNECTION_RADIUS)
	      T2=CONNECTION_VEL*(1.0D0/T1-2.0D0/CONNECTION_RADIUS)

	        P(I)=BC*T(I)*POP_ATOM(I)*(1.0_LDP+ED(I)/POP_ATOM(I))
	        P(I)=BC*T(I)*POP_ATOM(I)*(1.0D0+ED(I)/POP_ATOM(I))

	      T(1)=0.75_LDP*TEFF
	      T(1)=0.75D0*TEFF

	      P(1)=BC*T(1)*POP_ATOM(1)*(1.0_LDP+ED_ON_NA(1))
	      P(1)=BC*T(1)*POP_ATOM(1)*(1.0D0+ED_ON_NA(1))

	      T1=1.0E-10_LDP*BC*TEFF*(1+ED_ON_NA_EST)/( (10.0_LDP**LOGG)*(1.0_LDP-GAM_FULL)*MU_ATOM*AMU )
	      T1=1.0D-10*BC*TEFF*(1+ED_ON_NA_EST)/( (10.0**LOGG)*(1.0D0-GAM_FULL)*MU_ATOM*AMU )

	      T2=CONNECTION_VEL*(1.0_LDP/T1-2.0_LDP/CONNECTION_RADIUS)
	      T2=CONNECTION_VEL*(1.0D0/T1-2.0D0/CONNECTION_RADIUS)

	        P(I)=BC*T(I)*POP_ATOM(I)*(1.0_LDP+ED(I)/POP_ATOM(I))
	        P(I)=BC*T(I)*POP_ATOM(I)*(1.0D0+ED(I)/POP_ATOM(I))

	      P(1)=BC*T(1)*POP_ATOM(1)*(1.0_LDP+OLD_ED(1)/OLD_POP_ATOM(1))
	      P(1)=BC*T(1)*POP_ATOM(1)*(1.0D0+OLD_ED(1)/OLD_POP_ATOM(1))

	      IF(RBOUND .EQ. 0.0_LDP)RBOUND=OLD_R(1)
	      IF(RBOUND .EQ. 0.0D0)RBOUND=OLD_R(1)

	      T(1)=0.75_LDP*TEFF
	      T(1)=0.75D0*TEFF

	      P(1)=BC*T(1)*POP_ATOM(1)*(1.0_LDP+ED_ON_NA(1))
	      P(1)=BC*T(1)*POP_ATOM(1)*(1.0D0+ED_ON_NA(1))

	      SCL_HT=(10**LOGG)*(1.0_LDP-GAM_FULL)*MU_ATOM*AMU/BC/(1.0_LDP+ED_ON_NA(1))/T(1)
	      SCL_HT=(10**LOGG)*(1.0D0-GAM_FULL)*MU_ATOM*AMU/BC/(1.0D0+ED_ON_NA(1))/T(1)

	      SCL_HT=1.0E-10_LDP/SCL_HT
	      SCL_HT=1.0D-10/SCL_HT

	      IF(RBOUND .EQ. 0.0_LDP)RBOUND=REFERENCE_RADIUS+12*SCL_HT
	      IF(RBOUND .EQ. 0.0D0)RBOUND=REFERENCE_RADIUS+12*SCL_HT

	      TAU(1)=R(1)*SCL_HT*6.65E-15_LDP*POP_ATOM(1)*ED_ON_NA(1)*(KAP_ROSS/KAP_ES)
	      TAU(1)=R(1)*SCL_HT*6.65D-15*POP_ATOM(1)*ED_ON_NA(1)*(KAP_ROSS/KAP_ES)

	  SOUND_SPEED=1.0E+10_LDP
	  SOUND_SPEED=1.0D+10

	    SOUND_SPEED=1.0E+04_LDP*(1.0_LDP+ED_ON_NA(I))*BOLTZMANN_CONSTANT()*T(I)/MU_ATOM/ATOMIC_MASS_UNIT()
	    SOUND_SPEED=1.0D+04*(1.0D0+ED_ON_NA(I))*BOLTZMANN_CONSTANT()*T(I)/MU_ATOM/ATOMIC_MASS_UNIT()

	    SOUND_SPEED=1.0E-05_LDP*SQRT(SOUND_SPEED)
	    SOUND_SPEED=1.0D-05*SQRT(SOUND_SPEED)

	  DO WHILE( TAU(I) .LT. MAX(100.0_LDP,OLD_TAU_MAX) )
	  DO WHILE( TAU(I) .LT. MAX(100.0D0,OLD_TAU_MAX) )

	    SCL_HT=(10**LOGG)*(1.0_LDP-GAM_EDD)*MU_ATOM*AMU/BC/(1.0_LDP+ED_ON_NA(I-1))/T(I-1)
	    SCL_HT=(10**LOGG)*(1.0D0-GAM_EDD)*MU_ATOM*AMU/BC/(1.0D0+ED_ON_NA(I-1))/T(I-1)

	    SCL_HT=1.0E-10_LDP/SCL_HT
	    SCL_HT=1.0D-10/SCL_HT

	    H=SCL_HT/10.0_LDP
	    H=SCL_HT/10.0D0

	    R_EST=R(I-1)-0.5_LDP*H
	    R_EST=R(I-1)-0.5D0*H

	    R_EST=R(I-1)-0.5_LDP*H
	    R_EST=R(I-1)-0.5D0*H

	    TAU(I)=TAU(I-1)+(dTAU1+2*dTAU2+2*dTAU3+dTAU4)/6.0_LDP
	    TAU(I)=TAU(I-1)+(dTAU1+2*dTAU2+2*dTAU3+dTAU4)/6.0D0

	    P(I)=P(I-1)+(dP1+2*dP2+2*dP3+dP4)/6.0_LDP
	    P(I)=P(I-1)+(dP1+2*dP2+2*dP3+dP4)/6.0D0

	    POP_ATOM(I)=P(I)/BC/T(I)/(1.0_LDP+ED_ON_NA(I))
	    POP_ATOM(I)=P(I)/BC/T(I)/(1.0D0+ED_ON_NA(I))

	    dPdR_VEC(I)=1.0E-10_LDP*COEF(I,3)/POP_ATOM(I)/AMU/MU_ATOM
	    dPdR_VEC(I)=1.0D-10*COEF(I,3)/POP_ATOM(I)/AMU/MU_ATOM

	    T1=1.0E+10_LDP*POP_ATOM(I)*AMU*MU_ATOM
	    T1=1.0D+10*POP_ATOM(I)*AMU*MU_ATOM

	  T1=2.0_LDP/3.0_LDP
	  T1=2.0D0/3.0D0

	  T2=(1.0_LDP-T1)*R(I)+T1*R(I+1)
	  T2=(1.0D0-T1)*R(I)+T1*R(I+1)

	  REV_SIGMA(I)=REV_R(I)*COEF(I,3)/REV_V(I)-1.0_LDP
	  REV_SIGMA(I)=REV_R(I)*COEF(I,3)/REV_V(I)-1.0D0

	  T1=(10.0_LDP**LOGG)*(1.0_LDP-GAM_FULL)
	  T1=(10.0**LOGG)*(1.0D0-GAM_FULL)

	  T1=(10.0_LDP**LOGG)*(1.0_LDP-GAM_FULL)*(REFERENCE_RADIUS/R_EST)**2
	  T1=(10.0**LOGG)*(1.0D0-GAM_FULL)*(REFERENCE_RADIUS/R_EST)**2

	dPdR=1.0E+10_LDP*T1*MU_ATOM*AMU*P/BC/TEMP/(1+ED_ON_NA)/(1.0_LDP-T3)
	dPdR=1.0D+10*T1*MU_ATOM*AMU*P/BC/TEMP/(1+ED_ON_NA)/(1.0D0-T3)

	  TEMP=TEFF*(TAU+0.67_LDP)**0.25_LDP
	  TEMP=TEFF*(TAU+0.67D0)**0.25D0

	  TEMP=TEFF*OLD_SF(OLD_ND)*(TAU+0.67_LDP)**0.25_LDP
	  TEMP=TEFF*OLD_SF(OLD_ND)*(TAU+0.67D0)**0.25D0

	  SF=(1.0_LDP-T1)*OLD_SF(INDX-1)+T1*OLD_SF(INDX)
	  SF=(1.0D0-T1)*OLD_SF(INDX-1)+T1*OLD_SF(INDX)

	  TEMP=SF*TEFF*(TAU+0.67_LDP)**0.25_LDP
	  TEMP=SF*TEFF*(TAU+0.67D0)**0.25D0

	  FM=(1.0_LDP-T1)*OLD_KAP_FLUX(INDX-1)+T1*OLD_KAP_FLUX(INDX)
	  FM=(1.0D0-T1)*OLD_KAP_FLUX(INDX-1)+T1*OLD_KAP_FLUX(INDX)

	  RM=(1.0_LDP-T1)*OLD_KAP_ROSS(INDX-1)+T1*OLD_KAP_ROSS(INDX)
	  RM=(1.0D0-T1)*OLD_KAP_ROSS(INDX-1)+T1*OLD_KAP_ROSS(INDX)

	  ES=(1.0_LDP-T1)*OLD_KAP_ESEC(INDX-1)+T1*OLD_KAP_ESEC(INDX)
	  ES=(1.0D0-T1)*OLD_KAP_ESEC(INDX-1)+T1*OLD_KAP_ESEC(INDX)

          ED_EST=(1.0_LDP-T1)*OLD_ED(INDX-1)+T1*OLD_ED(INDX)
          ED_EST=(1.0D0-T1)*OLD_ED(INDX-1)+T1*OLD_ED(INDX)

          OLD_ATOM= (1.0_LDP-T1)*OLD_POP_ATOM(INDX-1)+T1*OLD_POP_ATOM(INDX)
          OLD_ATOM= (1.0D0-T1)*OLD_POP_ATOM(INDX-1)+T1*OLD_POP_ATOM(INDX)

          OLD_TEMP= (1.0_LDP-T1)*OLD_T(INDX-1)+T1*OLD_T(INDX)
          OLD_TEMP= (1.0D0-T1)*OLD_T(INDX-1)+T1*OLD_T(INDX)

	  IF(ATOM_EST .GT. 1.0E+09_LDP)THEN
	  IF(ATOM_EST .GT. 1.0D+09)THEN


wind_vel_law_v1.f

	  RO = R_TRANS * (1.0_LDP - (2.0_LDP*V_TRANS/VINF)**(1.0_LDP/BETA) )
	  RO = R_TRANS * (1.0D0 - (2.0D0*V_TRANS/VINF)**(1.0D0/BETA) )

	  SCALE_HEIGHT =  0.5_LDP*R_TRANS / (T1 - BETA*RO/(R_TRANS-RO) )
	  SCALE_HEIGHT =  0.5D0*R_TRANS / (T1 - BETA*RO/(R_TRANS-RO) )

	  SIGMA(I)=R_TRANS*dVdR_TRANS/V_TRANS-1.0_LDP
	  SIGMA(I)=R_TRANS*dVdR_TRANS/V_TRANS-1.0D0

	        R(I)=R(I-1)+0.6_LDP*dR
	        R(I)=R(I-1)+0.6D0*dR

	        R(I)=R(I-1)+0.27_LDP*dR
	        R(I)=R(I-1)+0.27D0*dR

	      T1=(SIGMA(I-1)+1.0_LDP)*V(I-1)/R(I-1)
	      T1=(SIGMA(I-1)+1.0D0)*V(I-1)/R(I-1)

	      dR=MIN(0.3_LDP*R(I-1),0.3_LDP*V(I-1)/T1)
	      dR=MIN(0.3D0*R(I-1),0.3D0*V(I-1)/T1)

	        R(I)=(RMAX+R(I-1))/2.0_LDP
	        R(I)=(RMAX+R(I-1))/2.0D0

            T2=1.0_LDP-T1
            T2=1.0D0-T1

            BOT = 1.0_LDP + exp( (R_TRANS-R(I))/SCALE_HEIGHT )
            BOT = 1.0D0 + exp( (R_TRANS-R(I))/SCALE_HEIGHT )

            dTOPdR = VINF * BETA * T1 / R(I) * T2**(BETA - 1.0_LDP)
            dTOPdR = VINF * BETA * T1 / R(I) * T2**(BETA - 1.0D0)

            SIGMA(I)=R(I)*dVdR/V(I)-1.0_LDP
            SIGMA(I)=R(I)*dVdR/V(I)-1.0D0

	  SCALE_HEIGHT = V_TRANS / (2.0_LDP * DVDR_TRANS)
	  SCALE_HEIGHT = V_TRANS / (2.0D0 * DVDR_TRANS)

	  SIGMA(I)=R_TRANS*dVdR_TRANS/V_TRANS-1.0_LDP
	  SIGMA(I)=R_TRANS*dVdR_TRANS/V_TRANS-1.0D0

	        R(I)=R(I-1)+0.6_LDP*dR
	        R(I)=R(I-1)+0.6D0*dR

	        R(I)=R(I-1)+0.27_LDP*dR
	        R(I)=R(I-1)+0.27D0*dR

	      T1=(SIGMA(I-1)+1.0_LDP)*V(I-1)/R(I-1)
	      T1=(SIGMA(I-1)+1.0D0)*V(I-1)/R(I-1)

	      dR=MIN(0.4_LDP*R(I-1),0.3_LDP*V(I-1)/T1)
	      dR=MIN(0.4D0*R(I-1),0.3D0*V(I-1)/T1)

	        R(I)=(RMAX+R(I-1))/2.0_LDP
	        R(I)=(RMAX+R(I-1))/2.0D0

	    T2=1.0_LDP-T1
	    T2=1.0D0-T1

	    TOP = 2.0_LDP*V_TRANS + (VINF-2.0_LDP*V_TRANS) * T2**BETA
	    TOP = 2.0D0*V_TRANS + (VINF-2.0D0*V_TRANS) * T2**BETA

	    BOT = 1.0_LDP + exp( (R_TRANS-R(I))/SCALE_HEIGHT )
	    BOT = 1.0D0 + exp( (R_TRANS-R(I))/SCALE_HEIGHT )

	    dTOPdR = (VINF - 2.0_LDP*V_TRANS) * BETA * T1 / R(I) * T2**(BETA - 1.0_LDP)
	    dTOPdR = (VINF - 2.0D0*V_TRANS) * BETA * T1 / R(I) * T2**(BETA - 1.0D0)

            SIGMA(I)=R(I)*dVdR/V(I)-1.0_LDP
            SIGMA(I)=R(I)*dVdR/V(I)-1.0D0


wind_vel_law_v2.f

	  RO = R_TRANS * (1.0_LDP - (2.0_LDP*V_TRANS/VINF)**(1.0_LDP/BETA) )
	  RO = R_TRANS * (1.0D0 - (2.0D0*V_TRANS/VINF)**(1.0D0/BETA) )

	  SCALE_HEIGHT =  0.5_LDP*R_TRANS / (T1 - BETA*RO/(R_TRANS-RO) )
	  SCALE_HEIGHT =  0.5D0*R_TRANS / (T1 - BETA*RO/(R_TRANS-RO) )

	  SIGMA(I)=R_TRANS*dVdR_TRANS/V_TRANS-1.0_LDP
	  SIGMA(I)=R_TRANS*dVdR_TRANS/V_TRANS-1.0D0

	        R(I)=R(I-1)+0.6_LDP*dR
	        R(I)=R(I-1)+0.6D0*dR

	        R(I)=R(I-1)+0.27_LDP*dR
	        R(I)=R(I-1)+0.27D0*dR

	      T1=(SIGMA(I-1)+1.0_LDP)*V(I-1)/R(I-1)
	      T1=(SIGMA(I-1)+1.0D0)*V(I-1)/R(I-1)

	      dR=MIN(0.3_LDP*R(I-1),0.3_LDP*V(I-1)/T1)
	      dR=MIN(0.3D0*R(I-1),0.3D0*V(I-1)/T1)

	        R(I)=(RMAX+R(I-1))/2.0_LDP
	        R(I)=(RMAX+R(I-1))/2.0D0

            T2=1.0_LDP-T1
            T2=1.0D0-T1

            BOT = 1.0_LDP + exp( (R_TRANS-R(I))/SCALE_HEIGHT )
            BOT = 1.0D0 + exp( (R_TRANS-R(I))/SCALE_HEIGHT )

            dTOPdR = VINF * BETA * T1 / R(I) * T2**(BETA - 1.0_LDP)
            dTOPdR = VINF * BETA * T1 / R(I) * T2**(BETA - 1.0D0)

            SIGMA(I)=R(I)*dVdR/V(I)-1.0_LDP
            SIGMA(I)=R(I)*dVdR/V(I)-1.0D0

	  SCALE_HEIGHT = V_TRANS / (2.0_LDP * DVDR_TRANS)
	  SCALE_HEIGHT = V_TRANS / (2.0D0 * DVDR_TRANS)

	  SIGMA(I)=R_TRANS*dVdR_TRANS/V_TRANS-1.0_LDP
	  SIGMA(I)=R_TRANS*dVdR_TRANS/V_TRANS-1.0D0

	  ALPHA=2.0_LDP
	  ALPHA=2.0D0

	  IF(VEL_TYPE .EQ. 3)ALPHA=3.0_LDP
	  IF(VEL_TYPE .EQ. 3)ALPHA=3.0D0

	        R(I)=R(I-1)+0.6_LDP*dR
	        R(I)=R(I-1)+0.6D0*dR

	        R(I)=R(I-1)+0.27_LDP*dR
	        R(I)=R(I-1)+0.27D0*dR

	      T1=(SIGMA(I-1)+1.0_LDP)*V(I-1)/R(I-1)
	      T1=(SIGMA(I-1)+1.0D0)*V(I-1)/R(I-1)

	      dR=MIN(0.4_LDP*R(I-1),0.3_LDP*V(I-1)/T1)
	      dR=MIN(0.4D0*R(I-1),0.3D0*V(I-1)/T1)

	        R(I)=(RMAX+R(I-1))/2.0_LDP
	        R(I)=(RMAX+R(I-1))/2.0D0

	    T2=1.0_LDP-T1
	    T2=1.0D0-T1

	    BOT = 1.0_LDP + (ALPHA-1.0_LDP)*exp( (R_TRANS-R(I))/SCALE_HEIGHT )
	    BOT = 1.0D0 + (ALPHA-1.0D0)*exp( (R_TRANS-R(I))/SCALE_HEIGHT )

	    dTOPdR = (VINF - ALPHA*V_TRANS) * BETA * T1 / R(I) * T2**(T3-1.0_LDP) +
	    dTOPdR = (VINF - ALPHA*V_TRANS) * BETA * T1 / R(I) * T2**(T3-1.0D0) +

	1                  T1*TOP*(BETA2-BETA)*(1.0_LDP+LOG(T2))/R(I)
	1                  T1*TOP*(BETA2-BETA)*(1.0D0+LOG(T2))/R(I)

	    dBOTdR=  (ALPHA-1.0_LDP)*exp( (R_TRANS-R(I))/SCALE_HEIGHT ) / SCALE_HEIGHT
	    dBOTdR=  (ALPHA-1.0D0)*exp( (R_TRANS-R(I))/SCALE_HEIGHT ) / SCALE_HEIGHT

            SIGMA(I)=R(I)*dVdR/V(I)-1.0_LDP
            SIGMA(I)=R(I)*dVdR/V(I)-1.0D0


wind_vel_law_v3.f

	  RO = R_TRANS * (1.0_LDP - (2.0_LDP*V_TRANS/VINF)**(1.0_LDP/BETA) )
	  RO = R_TRANS * (1.0D0 - (2.0D0*V_TRANS/VINF)**(1.0D0/BETA) )

	  SCALE_HEIGHT =  0.5_LDP*R_TRANS / (T1 - BETA*RO/(R_TRANS-RO) )
	  SCALE_HEIGHT =  0.5D0*R_TRANS / (T1 - BETA*RO/(R_TRANS-RO) )

	  SIGMA(I)=R_TRANS*dVdR_TRANS/V_TRANS-1.0_LDP
	  SIGMA(I)=R_TRANS*dVdR_TRANS/V_TRANS-1.0D0

	        R(I)=R(I-1)+0.6_LDP*dR
	        R(I)=R(I-1)+0.6D0*dR

	        R(I)=R(I-1)+0.27_LDP*dR
	        R(I)=R(I-1)+0.27D0*dR

	      T1=(SIGMA(I-1)+1.0_LDP)*V(I-1)/R(I-1)
	      T1=(SIGMA(I-1)+1.0D0)*V(I-1)/R(I-1)

	      dR=MIN(0.3_LDP*R(I-1),0.3_LDP*V(I-1)/T1)
	      dR=MIN(0.3D0*R(I-1),0.3D0*V(I-1)/T1)

	        R(I)=(RMAX+R(I-1))/2.0_LDP
	        R(I)=(RMAX+R(I-1))/2.0D0

            T2=1.0_LDP-T1
            T2=1.0D0-T1

            BOT = 1.0_LDP + exp( (R_TRANS-R(I))/SCALE_HEIGHT )
            BOT = 1.0D0 + exp( (R_TRANS-R(I))/SCALE_HEIGHT )

            dTOPdR = VINF * BETA * T1 / R(I) * T2**(BETA - 1.0_LDP)
            dTOPdR = VINF * BETA * T1 / R(I) * T2**(BETA - 1.0D0)

            SIGMA(I)=R(I)*dVdR/V(I)-1.0_LDP
            SIGMA(I)=R(I)*dVdR/V(I)-1.0D0

	  SCALE_HEIGHT = V_TRANS / (2.0_LDP * DVDR_TRANS)
	  SCALE_HEIGHT = V_TRANS / (2.0D0 * DVDR_TRANS)

	  SIGMA(I)=R_TRANS*dVdR_TRANS/V_TRANS-1.0_LDP
	  SIGMA(I)=R_TRANS*dVdR_TRANS/V_TRANS-1.0D0

	  ALPHA=2.0_LDP
	  ALPHA=2.0D0

	  IF(VEL_TYPE .EQ. 3)ALPHA=3.0_LDP
	  IF(VEL_TYPE .EQ. 3)ALPHA=3.0D0

	        R(I)=R(I-1)+0.6_LDP*dR
	        R(I)=R(I-1)+0.6D0*dR

	        R(I)=R(I-1)+0.27_LDP*dR
	        R(I)=R(I-1)+0.27D0*dR

	      T1=(SIGMA(I-1)+1.0_LDP)*V(I-1)/R(I-1)
	      T1=(SIGMA(I-1)+1.0D0)*V(I-1)/R(I-1)

	      dR=MIN(0.4_LDP*R(I-1),0.3_LDP*V(I-1)/T1)
	      dR=MIN(0.4D0*R(I-1),0.3D0*V(I-1)/T1)

	        R(I)=(RMAX+R(I-1))/2.0_LDP
	        R(I)=(RMAX+R(I-1))/2.0D0

	    T2=1.0_LDP-T1
	    T2=1.0D0-T1

	    BOT = 1.0_LDP + (ALPHA-1.0_LDP)*exp( (R_TRANS-R(I))/SCALE_HEIGHT )
	    BOT = 1.0D0 + (ALPHA-1.0D0)*exp( (R_TRANS-R(I))/SCALE_HEIGHT )

	    dTOPdR = (VINF - ALPHA*V_TRANS) * BETA * T1 / R(I) * T2**(T3-1.0_LDP) +
	    dTOPdR = (VINF - ALPHA*V_TRANS) * BETA * T1 / R(I) * T2**(T3-1.0D0) +

	1                  T1*TOP*(BETA2-BETA)*(1.0_LDP+LOG(T2))/R(I)
	1                  T1*TOP*(BETA2-BETA)*(1.0D0+LOG(T2))/R(I)

	    dBOTdR=  (ALPHA-1.0_LDP)*exp( (R_TRANS-R(I))/SCALE_HEIGHT ) / SCALE_HEIGHT
	    dBOTdR=  (ALPHA-1.0D0)*exp( (R_TRANS-R(I))/SCALE_HEIGHT ) / SCALE_HEIGHT

            SIGMA(I)=R(I)*dVdR/V(I)-1.0_LDP
            SIGMA(I)=R(I)*dVdR/V(I)-1.0D0

	  RO = R_TRANS * (1.0_LDP - (2.0_LDP*V_TRANS/SM_VINF)**(1.0_LDP/BETA) )
	  RO = R_TRANS * (1.0D0 - (2.0D0*V_TRANS/SM_VINF)**(1.0D0/BETA) )

	  SCALE_HEIGHT =  0.5_LDP*R_TRANS / (T1 - BETA*RO/(R_TRANS-RO) )
	  SCALE_HEIGHT =  0.5D0*R_TRANS / (T1 - BETA*RO/(R_TRANS-RO) )

	  SIGMA(I)=R_TRANS*dVdR_TRANS/V_TRANS-1.0_LDP
	  SIGMA(I)=R_TRANS*dVdR_TRANS/V_TRANS-1.0D0

	        R(I)=R(I-1)+0.6_LDP*dR
	        R(I)=R(I-1)+0.6D0*dR

	        R(I)=R(I-1)+0.27_LDP*dR
	        R(I)=R(I-1)+0.27D0*dR

	      T1=(SIGMA(I-1)+1.0_LDP)*V(I-1)/R(I-1)
	      T1=(SIGMA(I-1)+1.0D0)*V(I-1)/R(I-1)

	      dR=MIN(0.3_LDP*R(I-1),0.3_LDP*V(I-1)/T1)
	      dR=MIN(0.3D0*R(I-1),0.3D0*V(I-1)/T1)

	        R(I)=(RMAX+R(I-1))/2.0_LDP
	        R(I)=(RMAX+R(I-1))/2.0D0

            T2=1.0_LDP-T1
            T2=1.0D0-T1

            dTOPdR = SM_VINF * BETA * T1 / R(I) * T2**(BETA - 1.0_LDP)
            dTOPdR = SM_VINF * BETA * T1 / R(I) * T2**(BETA - 1.0D0)

              T2=1.0_LDP-T1
              T2=1.0D0-T1

              dTOPdR = dTOPdR + VEXT*BETA2 * T1/R(I)*T2**(BETA2 - 1.0_LDP)
              dTOPdR = dTOPdR + VEXT*BETA2 * T1/R(I)*T2**(BETA2 - 1.0D0)

	    BOT = 1.0_LDP + exp( (R_TRANS-R(I))/SCALE_HEIGHT )
	    BOT = 1.0D0 + exp( (R_TRANS-R(I))/SCALE_HEIGHT )

            SIGMA(I)=R(I)*dVdR/V(I)-1.0_LDP
            SIGMA(I)=R(I)*dVdR/V(I)-1.0D0


writedc_v2.f

	1                        :/,(1X,4E15.5_LDP))'
	1                        :/,(1X,4E15.5))'

	1                        :/,(1X,6E15.5_LDP))'
	1                        :/,(1X,6E15.5))'

	1            3E15.5_LDP,:/,1X,3E15.5_LDP,/:,(1X,6E15.5_LDP))'
	1            3E15.5,:/,1X,3E15.5,/:,(1X,6E15.5))'

	        T1=0.0_LDP
	        T1=0.0D0

	        T2=0.0_LDP
	        T2=0.0D0

	        IF(T2 .NE. 0.0_LDP)THEN
	        IF(T2 .NE. 0.0D0)THEN

	          T1=0.0_LDP
	          T1=0.0D0

	        IF(T3 .EQ. 0.0_LDP)THEN
	        IF(T3 .EQ. 0.0D0)THEN

	        T1=0.0_LDP
	        T1=0.0D0

	        T2=0.0_LDP
	        T2=0.0D0

