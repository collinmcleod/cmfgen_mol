
add_par_to_full.f

	      BA_PAR(I,J,L)=0.0_LDP
	      BA_PAR(I,J,L)=0.0D0


adjust_line_freq.f

	ANG_TO_HZ=1.0E-07_LDP*SPEED_OF_LIGHT()
	ANG_TO_HZ=1.0D-07*SPEED_OF_LIGHT()


adjust_line_freq_v2.f

	ANG_TO_HZ=1.0E-07_LDP*SPEED_OF_LIGHT()
	ANG_TO_HZ=1.0D-07*SPEED_OF_LIGHT()


ave_flips.f

	R=1.0_LDP
	R=1.0D0

	    IF(T1*T2 .GE. 0.0_LDP)GOTO 100
	    IF(T1*T2 .GE. 0.0D0)GOTO 100

	  IF(T1*T2 .GE. 0.0_LDP .AND. ABS(T1) .LT. ABS(T2) )GOTO 100
	  IF(T1*T2 .GE. 0.0D0 .AND. ABS(T1) .LT. ABS(T2) )GOTO 100

	  NEW_POPS(I)=POPS(I)-T1*R/(1.0_LDP+R)
	  NEW_POPS(I)=POPS(I)-T1*R/(1.0D0+R)


baion_update_v4.f


ba_replace.f

	FAC=1.0E+05_LDP
	FAC=1.0D+05

 	  T1=0.0_LDP
 	  T1=0.0D0


ba_update_v4.f

	IF(dJ_CHK_FAC .LT. 1.0E-10_LDP .OR. dJ_CHK_FAC .GT. 0.1_LDP)THEN
	IF(dJ_CHK_FAC .LT. 1.0D-10 .OR. dJ_CHK_FAC .GT. 0.1)THEN

                   IF( COMP_VEC(J) .GE. 0.0_LDP )THEN
                   IF( COMP_VEC(J) .GE. 0.0D0 )THEN

                  IF( COMP_VEC(J) .GE. 0.0_LDP)THEN
                  IF( COMP_VEC(J) .GE. 0.0D0)THEN

                   IF( COMP_VEC(J) .GE. 0.0_LDP )THEN
                   IF( COMP_VEC(J) .GE. 0.0D0 )THEN

                  IF( COMP_VEC(J) .GE. 0.0_LDP)THEN
                  IF( COMP_VEC(J) .GE. 0.0D0)THEN


blkband.f

	PARAMETER (DP_NEG_ONE=-1.0_LDP)
	PARAMETER (DP_NEG_ONE=-1.0D0)

	PARAMETER (DP_ONE=1.0_LDP)
	PARAMETER (DP_ONE=1.0D0)


check_line_overlap.f

	RES_ZONE=0.0_LDP
	RES_ZONE=0.0D0

	  RES_ZONE=0.0_LDP
	  RES_ZONE=0.0D0


check_spec_conv.f

	DATA LAM_LIMS/0,10.0_LDP,100.0_LDP,228.0_LDP,911.0_LDP,3600.0_LDP,10000.0_LDP,1.0E+05_LDP,1.0E+10_LDP/
	DATA LAM_LIMS/0,10.0D0,100.0D0,228.0D0,911.0D0,3600.0D0,10000.0D0,1.0D+05,1.0D+10/

	DATA HIST_LIMS/1.0E-04_LDP,1.0E-03_LDP,1.0E-02_LDP,1.0E-01_LDP,1.0_LDP,10.0_LDP,100.0_LDP,1000.0_LDP/
	DATA HIST_LIMS/1.0D-04,1.0D-03,1.0D-02,1.0D-01,1.0,10.0D0,100.0D0,1000.0D0/

	  MAX_FRAC_CHNG=0.0_LDP
	  MAX_FRAC_CHNG=0.0D0

	C_KMS=1.0E-05_LDP*SPEED_OF_LIGHT()
	C_KMS=1.0D-05*SPEED_OF_LIGHT()

	MAX_FRAC_CHNG(1)=0.0_LDP
	MAX_FRAC_CHNG(1)=0.0D0

	  IF(T1 .NE. 0.0_LDP)THEN
	  IF(T1 .NE. 0.0D0)THEN

	    WRK_VEC(I)=1.0E+07_LDP*WRK_VEC(I)
	    WRK_VEC(I)=1.0D+07*WRK_VEC(I)

	    WRK_VEC(I)=1.0E-20_LDP
	    WRK_VEC(I)=1.0D-20

	  IF(WRK_VEC(I) .LT. 1.0E-20_LDP)WRK_VEC(I)=1.0E-20_LDP
	  IF(WRK_VEC(I) .LT. 1.0D-20)WRK_VEC(I)=1.0D-20

	  LAM=0.01_LDP*C_KMS/OBS_FREQ(I)
	  LAM=0.01D0*C_KMS/OBS_FREQ(I)

	IF( MAXVAL(MAX_FRAC_CHNG) .LT. 0.002_LDP)SPECTRUM_CONVERGED=.TRUE.
	IF( MAXVAL(MAX_FRAC_CHNG) .LT. 0.002)SPECTRUM_CONVERGED=.TRUE.


chk_col_name.f


chk_eq_num.f


cmf_form_sol.f

	PARAMETER (EXT_FAC=10.0_LDP)
	PARAMETER (EXT_FAC=10.0D0)

	  C_KMS=1.0E-05_LDP*SPEED_OF_LIGHT( )
	  C_KMS=1.0D-05*SPEED_OF_LIGHT( )

	    IF(ROH_ALPHA .LT. 2._LDP)ROH_ALPHA=2.0
	    IF(ROH_ALPHA .LT. 2.)ROH_ALPHA=2.0

	  LOG_SIGMA(1:ND)=LOG( (SIGMA(1:ND)+1.0_LDP) )
	  LOG_SIGMA(1:ND)=LOG( (SIGMA(1:ND)+1.0D0) )

	  BETA=(SIGMA(1)+1.0_LDP)*(R(1)/R(ND)-1.0_LDP)
	  BETA=(SIGMA(1)+1.0D0)*(R(1)/R(ND)-1.0D0)

	          V_RAY(I)=VINF*(1.0_LDP-R(ND)/R_RAY(I,LS))**BETA
	          V_RAY(I)=VINF*(1.0D0-R(ND)/R_RAY(I,LS))**BETA

	          SIGMA_RAY(I)=BETA/(R_RAY(I,LS)/R(ND)-1.0_LDP)-1.0_LDP
	          SIGMA_RAY(I)=BETA/(R_RAY(I,LS)/R(ND)-1.0D0)-1.0D0

	          V_RAY(I)=VINF*(1.0_LDP-R(ND)/R_RAY(I,LS))**BETA
	          V_RAY(I)=VINF*(1.0D0-R(ND)/R_RAY(I,LS))**BETA

	          SIGMA_RAY(I)=BETA/(R_RAY(I,LS)/R(ND)-1.0_LDP)-1.0_LDP
	          SIGMA_RAY(I)=BETA/(R_RAY(I,LS)/R(ND)-1.0D0)-1.0D0

	1         ETA_COEF(L,3))*T1+ETA_COEF(L,4) )-1.0_LDP
	1         ETA_COEF(L,3))*T1+ETA_COEF(L,4) )-1.0D0

	      GAM(I,LS)=3.33564E-06_LDP*V_RAY(I)/R_RAY(I,LS)*
	      GAM(I,LS)=3.33564D-06*V_RAY(I)/R_RAY(I,LS)*

	1                   (  1.0_LDP+SIGMA_RAY(I)*(MU**2)  )
	1                   (  1.0D0+SIGMA_RAY(I)*(MU**2)  )

	      GAMH(I,LS)=(V_RAY(I+1)+V_RAY(I))*3.33564E-06_LDP*
	      GAMH(I,LS)=(V_RAY(I+1)+V_RAY(I))*3.33564D-06*

	1                   (  1.0_LDP+0.5_LDP*(MU**2)*
	1                   (  1.0D0+0.5D0*(MU**2)*

	    GAM(NI,LS)=3.33564E-06_LDP*V_RAY(NI)*
	    GAM(NI,LS)=3.33564D-06*V_RAY(NI)*

	1              ( 1.0_LDP+SIGMA_RAY(NI)*(MU**2) )/R_RAY(NI,LS)
	1              ( 1.0D0+SIGMA_RAY(NI)*(MU**2) )/R_RAY(NI,LS)

	    MU_AT_RMAX(LS)=SQRT(1.0_LDP-(P_EXT(LS)/R_EXT(1))**2)
	    MU_AT_RMAX(LS)=SQRT(1.0D0-(P_EXT(LS)/R_EXT(1))**2)

	  IF(P_EXT(NP_EXT) .EQ. R_EXT(1))MU_AT_RMAX(NP_EXT)=0.0_LDP
	  IF(P_EXT(NP_EXT) .EQ. R_EXT(1))MU_AT_RMAX(NP_EXT)=0.0D0

	  AV_PREV(:,:)=0.0_LDP
	  AV_PREV(:,:)=0.0D0

	  CV_PREV(:,:)=0.0_LDP
	  CV_PREV(:,:)=0.0D0

	IPLUS_P(1:NP_OBS_MAX)=0.0_LDP
	IPLUS_P(1:NP_OBS_MAX)=0.0D0

	  IF( T1 .GT. 1.05_LDP*FRAC_DOP*V_DOP .AND. T1 .LT. 1.05_LDP*dV_CMF_PROF)THEN
	  IF( T1 .GT. 1.05*FRAC_DOP*V_DOP .AND. T1 .LT. 1.05*dV_CMF_PROF)THEN

	     N_FREQ=NINT(C_KMS*(FL_PREV-FL)/(V_DOP*FRAC_DOP)/FL+0.7_LDP)
	     N_FREQ=NINT(C_KMS*(FL_PREV-FL)/(V_DOP*FRAC_DOP)/FL+0.7)

	    IF(ETA_ALPHA .LT. 3.5_LDP)ETA_ALPHA=3.5
	    IF(ETA_ALPHA .LT. 3.5)ETA_ALPHA=3.5

	      IF(CHI_ALPHA .LT. 2._LDP)CHI_ALPHA=2.0
	      IF(CHI_ALPHA .LT. 2.)CHI_ALPHA=2.0

	1         ( (3.0_LDP*CHI_COEF(L,1)*T1+2.0_LDP*CHI_COEF(L,2))*T1+
	1         ( (3.0D0*CHI_COEF(L,1)*T1+2.0D0*CHI_COEF(L,2))*T1+

	      T2=1.0_LDP-T1
	      T2=1.0D0-T1

	    AV(:)=0.0_LDP
	    AV(:)=0.0D0

	    CV(:)=0.0_LDP
	    CV(:)=0.0D0

	    IBOUND=0.0_LDP
	    IBOUND=0.0D0

	        QH(I)=GAMH(I,LS)*2.0_LDP/((CHI_RAY(I)+CHI_RAY(I+1))*NEW_dLOG_NU)
	        QH(I)=GAMH(I,LS)*2.0D0/((CHI_RAY(I)+CHI_RAY(I+1))*NEW_dLOG_NU)

	      QH(NI)=0.0_LDP
	      QH(NI)=0.0D0

	1        *(1.0_LDP+Q(NI)*(1.0_LDP-CHI_RAY(NI)/OLD_CHI_AT_IN_BND))
	1        *(1.0D0+Q(NI)*(1.0D0-CHI_RAY(NI)/OLD_CHI_AT_IN_BND))

	        DTAU(I)=0.5_LDP*(CHI_RAY(I)+CHI_RAY(I+1))*(Z(I,LS)-Z(I+1,LS))
	        DTAU(I)=0.5D0*(CHI_RAY(I)+CHI_RAY(I+1))*(Z(I,LS)-Z(I+1,LS))

	          DTAU(I)=0.5_LDP*dZ*(CHI_RAY(I)+CHI_RAY(I+1))
	          DTAU(I)=0.5D0*dZ*(CHI_RAY(I)+CHI_RAY(I+1))

	1              dCHIdR(I)*Z(I,LS)/R_RAY(I,LS) )/12.0_LDP
	1              dCHIdR(I)*Z(I,LS)/R_RAY(I,LS) )/12.0D0

	          T1=SIGN( MIN(0.8_LDP*DTAU(I),ABS(T1)),T1 )
	          T1=SIGN( MIN(0.8D0*DTAU(I),ABS(T1)),T1 )

	        AV(I)=0.1_LDP*ABS(AV(I))
	        AV(I)=0.1*ABS(AV(I))

	    IPLUS_P(LS)=2.0_LDP*CV_BOUND          !To compute observed flux
	    IPLUS_P(LS)=2.0D0*CV_BOUND          !To compute observed flux


cmf_form_sol_v2.f

	REAL(KIND=LDP),  PARAMETER :: ONE=1.0_LDP
	REAL(KIND=LDP),  PARAMETER :: ONE=1.0D0

	REAL(KIND=LDP),    PARAMETER :: EXT_FAC=10.0_LDP
	REAL(KIND=LDP),    PARAMETER :: EXT_FAC=10.0D0

	  C_KMS=1.0E-05_LDP*SPEED_OF_LIGHT( )
	  C_KMS=1.0D-05*SPEED_OF_LIGHT( )

	    IF(ROH_ALPHA .LT. 2._LDP)ROH_ALPHA=2.0
	    IF(ROH_ALPHA .LT. 2.)ROH_ALPHA=2.0

	  BETA=(SIGMA(1)+1.0_LDP)*(R(1)/R(ND)-1.0_LDP)
	  BETA=(SIGMA(1)+1.0D0)*(R(1)/R(ND)-1.0D0)

	      T2=T1-DELZ/20.0_LDP
	      T2=T1-DELZ/20.0D0

	      IF(SOLUTION_METHOD .EQ. 'INTEGRAL')T2=T1-DELZ/2.0_LDP
	      IF(SOLUTION_METHOD .EQ. 'INTEGRAL')T2=T1-DELZ/2.0D0

	          V_RAY(I)=VINF*(1.0_LDP-R(ND)/R_RAY(I,LS))**BETA
	          V_RAY(I)=VINF*(1.0D0-R(ND)/R_RAY(I,LS))**BETA

	          SIGMA_RAY(I)=BETA/(R_RAY(I,LS)/R(ND)-1.0_LDP)-1.0_LDP
	          SIGMA_RAY(I)=BETA/(R_RAY(I,LS)/R(ND)-1.0D0)-1.0D0

	          V_RAY(I)=VINF*(1.0_LDP-R(ND)/R_RAY(I,LS))**BETA
	          V_RAY(I)=VINF*(1.0D0-R(ND)/R_RAY(I,LS))**BETA

	          SIGMA_RAY(I)=BETA/(R_RAY(I,LS)/R(ND)-1.0_LDP)-1.0_LDP
	          SIGMA_RAY(I)=BETA/(R_RAY(I,LS)/R(ND)-1.0D0)-1.0D0

	      SIGMA_RAY(I)=CHI_COEF(L,3)+T1*(2.0_LDP*CHI_COEF(L,2)+3.0_LDP*T1*CHI_COEF(L,1))-1.0_LDP
	      SIGMA_RAY(I)=CHI_COEF(L,3)+T1*(2.0D0*CHI_COEF(L,2)+3.0D0*T1*CHI_COEF(L,1))-1.0D0

	      GAM(I,LS)=3.33564E-06_LDP*V_RAY(I)/R_RAY(I,LS)*
	      GAM(I,LS)=3.33564D-06*V_RAY(I)/R_RAY(I,LS)*

	1                   (  1.0_LDP+SIGMA_RAY(I)*(MU**2)  )
	1                   (  1.0D0+SIGMA_RAY(I)*(MU**2)  )

	        T1=3.33564E-06_LDP*V_RAY(I)/R_RAY(I,LS)
	        T1=3.33564D-06*V_RAY(I)/R_RAY(I,LS)

	        GAMH(I,LS)=(V_RAY(I+1)+V_RAY(I))*3.33564E-06_LDP*
	        GAMH(I,LS)=(V_RAY(I+1)+V_RAY(I))*3.33564D-06*

	1                   (  1.0_LDP+0.5_LDP*(MU**2)*
	1                   (  1.0D0+0.5D0*(MU**2)*

	    MU_AT_RMAX(LS)=SQRT(1.0_LDP-(P_EXT(LS)/R_EXT(1))**2)
	    MU_AT_RMAX(LS)=SQRT(1.0D0-(P_EXT(LS)/R_EXT(1))**2)

	  IF(P_EXT(NP_EXT) .EQ. R_EXT(1))MU_AT_RMAX(NP_EXT)=0.0_LDP
	  IF(P_EXT(NP_EXT) .EQ. R_EXT(1))MU_AT_RMAX(NP_EXT)=0.0D0

	    AV_PREV(:,:)=0.0_LDP
	    AV_PREV(:,:)=0.0D0

	    CV_PREV(:,:)=0.0_LDP
	    CV_PREV(:,:)=0.0D0

	    I_P_PREV(:,:)=0.0_LDP
	    I_P_PREV(:,:)=0.0D0

	    I_M_PREV(:,:)=0.0_LDP
	    I_M_PREV(:,:)=0.0D0

	IPLUS_P(1:NP_OBS_MAX)=0.0_LDP
	IPLUS_P(1:NP_OBS_MAX)=0.0D0

	  IF( T1 .GT. 1.05_LDP*FRAC_DOP*V_DOP .AND. T1 .LT. 1.05_LDP*dV_CMF_PROF)THEN
	  IF( T1 .GT. 1.05*FRAC_DOP*V_DOP .AND. T1 .LT. 1.05*dV_CMF_PROF)THEN

	     N_FREQ=NINT(C_KMS*(FL_PREV-FL)/(V_DOP*FRAC_DOP)/FL+0.7_LDP)
	     N_FREQ=NINT(C_KMS*(FL_PREV-FL)/(V_DOP*FRAC_DOP)/FL+0.7)

	    IF(ETA_ALPHA .LT. 3.5_LDP)ETA_ALPHA=3.5
	    IF(ETA_ALPHA .LT. 3.5)ETA_ALPHA=3.5

	      IF(CHI_ALPHA .LT. 2._LDP)CHI_ALPHA=2.0
	      IF(CHI_ALPHA .LT. 2.)CHI_ALPHA=2.0

	1         ( (3.0_LDP*CHI_COEF(L,1)*T1+2.0_LDP*CHI_COEF(L,2))*T1+
	1         ( (3.0D0*CHI_COEF(L,1)*T1+2.0D0*CHI_COEF(L,2))*T1+

	      T2=1.0_LDP-T1
	      T2=1.0D0-T1

	          DTAU(I)=0.5_LDP*(CHI_RAY(I)+CHI_RAY(I+1))*(Z(I,LS)-Z(I+1,LS))
	          DTAU(I)=0.5D0*(CHI_RAY(I)+CHI_RAY(I+1))*(Z(I,LS)-Z(I+1,LS))

	            DTAU(I)=0.5_LDP*dZ*(CHI_RAY(I)+CHI_RAY(I+1))
	            DTAU(I)=0.5D0*dZ*(CHI_RAY(I)+CHI_RAY(I+1))

	1              dCHIdR(I)*Z(I,LS)/R_RAY(I,LS) )/12.0_LDP
	1              dCHIdR(I)*Z(I,LS)/R_RAY(I,LS) )/12.0D0

	            T1=SIGN( MIN(0.8_LDP*DTAU(I),ABS(T1)),T1 )
	            T1=SIGN( MIN(0.8D0*DTAU(I),ABS(T1)),T1 )

	      AV(:)=0.0_LDP
	      AV(:)=0.0D0

	      CV(:)=0.0_LDP
	      CV(:)=0.0D0

	      IBOUND=0.0_LDP
	      IBOUND=0.0D0

	        QH(I)=GAMH(I,LS)*2.0_LDP/((CHI_RAY(I)+CHI_RAY(I+1))*NEW_dLOG_NU)
	        QH(I)=GAMH(I,LS)*2.0D0/((CHI_RAY(I)+CHI_RAY(I+1))*NEW_dLOG_NU)

	        QH(NI)=0.0_LDP
	        QH(NI)=0.0D0

	1        *(1.0_LDP+Q(NI)*(1.0_LDP-CHI_RAY(NI)/OLD_CHI_AT_IN_BND))
	1        *(1.0D0+Q(NI)*(1.0D0-CHI_RAY(NI)/OLD_CHI_AT_IN_BND))

	          AV(I)=0.1_LDP*ABS(AV(I))
	          AV(I)=0.1*ABS(AV(I))

	      IPLUS_P(LS)=2.0_LDP*CV_BOUND          !To compute observed flux
	      IPLUS_P(LS)=2.0D0*CV_BOUND          !To compute observed flux

	        Q(1:NI)=0.0_LDP
	        Q(1:NI)=0.0D0

	          DTAU(I)=0.5_LDP*(CHI_RAY(I)+CHI_RAY(I+1))*(Z(I,LS)-Z(I+1,LS))
	          DTAU(I)=0.5D0*(CHI_RAY(I)+CHI_RAY(I+1))*(Z(I,LS)-Z(I+1,LS))

	            DTAU(I)=0.5_LDP*dZ*(CHI_RAY(I)+CHI_RAY(I+1))
	            DTAU(I)=0.5D0*dZ*(CHI_RAY(I)+CHI_RAY(I+1))

	1              dCHIdR(I)*Z(I,LS)/R_RAY(I,LS) )/12.0_LDP
	1              dCHIdR(I)*Z(I,LS)/R_RAY(I,LS) )/12.0D0

	            T1=SIGN( MIN(0.8_LDP*DTAU(I),ABS(T1)),T1 )
	            T1=SIGN( MIN(0.8D0*DTAU(I),ABS(T1)),T1 )

	        IF(T1 .LT. 1000.0_LDP)THEN
	        IF(T1 .LT. 1000.0D0)THEN

	          EE(I)=0.0_LDP
	          EE(I)=0.0D0

	        IF(T1 .GT. 0.5_LDP)THEN
	        IF(T1 .GT. 0.5)THEN

	          E0(I)=1.0_LDP-EE(I)
	          E0(I)=1.0D0-EE(I)

	          E1(I)=1.0_LDP-E0(I)/T1
	          E1(I)=1.0D0-E0(I)/T1

	          E2(I)=1.0_LDP-2.0_LDP*E1(I)/T1
	          E2(I)=1.0D0-2.0D0*E1(I)/T1

	          E3(I)=1.0_LDP-3.0_LDP*E2(I)/T1
	          E3(I)=1.0D0-3.0D0*E2(I)/T1

	        ELSE IF(T1 .GT. 0.1_LDP)THEN
	        ELSE IF(T1 .GT. 0.1)THEN

	          E3(I)=0.25_LDP*T1*( 1.0_LDP-0.20_LDP*T1*
	          E3(I)=0.25D0*T1*( 1.0D0-0.20*T1*

	1               (1.0_LDP-T1/6.0_LDP*(1.0_LDP-T1/7.0_LDP*
	1               (1.0D0-T1/6.0D0*(1.0D0-T1/7.0D0*

	1               (1.0_LDP-T1/8.0_LDP*(1.0_LDP-T1/9.0_LDP*
	1               (1.0D0-T1/8.0D0*(1.0D0-T1/9.0D0*

	1               (1.0_LDP-T1/10.0_LDP*(1.0_LDP-T1/11.0_LDP*
	1               (1.0D0-T1/10.0D0*(1.0D0-T1/11.0D0*

	1               (1.0_LDP-T1/12.0_LDP*(1.0_LDP-T1/13.0_LDP)))))))) )
	1               (1.0D0-T1/12.0D0*(1.0D0-T1/13.0D0)))))))) )

	          E2(I)=T1*( 1.0_LDP-E3(I) )/3.0_LDP
	          E2(I)=T1*( 1.0D0-E3(I) )/3.0D0

	          E1(I)=T1*( 1.0_LDP-E2(I) )/2.0_LDP
	          E1(I)=T1*( 1.0D0-E2(I) )/2.0D0

	          E0(I)=T1*( 1.0_LDP-E1(I) )
	          E0(I)=T1*( 1.0D0-E1(I) )

	          E3(I)=0.25_LDP*T1*( 1.0_LDP-0.20_LDP*T1*
	          E3(I)=0.25D0*T1*( 1.0D0-0.20*T1*

	1               (1.0_LDP-T1/6.0_LDP*(1.0_LDP-T1/7.0_LDP*
	1               (1.0D0-T1/6.0D0*(1.0D0-T1/7.0D0*

	1               (1.0_LDP-T1/8.0_LDP*(1.0_LDP-T1/9.0_LDP) ))))
	1               (1.0D0-T1/8.0D0*(1.0D0-T1/9.0D0) ))))

	          E2(I)=T1*( 1.0_LDP-E3(I) )/3.0_LDP
	          E2(I)=T1*( 1.0D0-E3(I) )/3.0D0

	          E1(I)=T1*( 1.0_LDP-E2(I) )/2.0_LDP
	          E1(I)=T1*( 1.0D0-E2(I) )/2.0d0

	          E0(I)=T1*( 1.0_LDP-E1(I) )
	          E0(I)=T1*( 1.0D0-E1(I) )

	        A1(I)=E0(I)-3.0_LDP*E2(I)+2.0_LDP*E3(I)
	        A1(I)=E0(I)-3.0D0*E2(I)+2.0D0*E3(I)

	        A2(I)=3.0_LDP*E2(I)-2.0_LDP*E3(I)
	        A2(I)=3.0D0*E2(I)-2.0D0*E3(I)

	        A3(I)=DTAU(I)*(E1(I)-2.0_LDP*E2(I)+E3(I))
	        A3(I)=DTAU(I)*(E1(I)-2.0D0*E2(I)+E3(I))

	1                      MIN(ABS(S(1)),0.5_LDP*ABS(dS(1)))
	1                      MIN(ABS(S(1)),0.5*ABS(dS(1)))

	1               MIN(ABS(S(I-1)),ABS(S(I)),0.5_LDP*ABS(dS(I)))
	1               MIN(ABS(S(I-1)),ABS(S(I)),0.5*ABS(dS(I)))

	1               MIN(ABS(S(NI-1)),0.5_LDP*ABS(dS(NI)))
	1               MIN(ABS(S(NI-1)),0.5*ABS(dS(NI)))

              I_M(1)=0.0_LDP
              I_M(1)=0.0D0

	1                      MIN(ABS(S(1)),0.5_LDP*ABS(dS(1)))
	1                      MIN(ABS(S(1)),0.5*ABS(dS(1)))

	1          MIN(ABS(S(I-1)),ABS(S(I)),0.5_LDP*ABS(dS(I)))
	1          MIN(ABS(S(I-1)),ABS(S(I)),0.5*ABS(dS(I)))

	1            MIN(ABS(S(NI-1)),0.5_LDP*ABS(dS(NI)))
	1            MIN(ABS(S(NI-1)),0.5*ABS(dS(NI)))


cmf_form_sol_v3.f

	REAL(KIND=LDP),  PARAMETER :: ONE=1.0_LDP
	REAL(KIND=LDP),  PARAMETER :: ONE=1.0D0

	REAL(KIND=LDP),    PARAMETER :: EXT_FAC=10.0_LDP
	REAL(KIND=LDP),    PARAMETER :: EXT_FAC=10.0D0

	  C_KMS=1.0E-05_LDP*SPEED_OF_LIGHT( )
	  C_KMS=1.0D-05*SPEED_OF_LIGHT( )

	    IF(ROH_ALPHA .LT. 2._LDP)ROH_ALPHA=2.0
	    IF(ROH_ALPHA .LT. 2.)ROH_ALPHA=2.0

	  BETA=(SIGMA(1)+1.0_LDP)*(R(1)/R(ND)-1.0_LDP)
	  BETA=(SIGMA(1)+1.0D0)*(R(1)/R(ND)-1.0D0)

	      T2=T1-DELZ/20.0_LDP
	      T2=T1-DELZ/20.0D0

	      IF(SOLUTION_METHOD .EQ. 'INTEGRAL')T2=T1-DELZ/2.0_LDP
	      IF(SOLUTION_METHOD .EQ. 'INTEGRAL')T2=T1-DELZ/2.0D0

	          V_RAY(I)=VINF*(1.0_LDP-R(ND)/R_RAY(I,LS))**BETA
	          V_RAY(I)=VINF*(1.0D0-R(ND)/R_RAY(I,LS))**BETA

	          SIGMA_RAY(I)=BETA/(R_RAY(I,LS)/R(ND)-1.0_LDP)-1.0_LDP
	          SIGMA_RAY(I)=BETA/(R_RAY(I,LS)/R(ND)-1.0D0)-1.0D0

	          V_RAY(I)=VINF*(1.0_LDP-R(ND)/R_RAY(I,LS))**BETA
	          V_RAY(I)=VINF*(1.0D0-R(ND)/R_RAY(I,LS))**BETA

	          SIGMA_RAY(I)=BETA/(R_RAY(I,LS)/R(ND)-1.0_LDP)-1.0_LDP
	          SIGMA_RAY(I)=BETA/(R_RAY(I,LS)/R(ND)-1.0D0)-1.0D0

	      SIGMA_RAY(I)=CHI_COEF(L,3)+T1*(2.0_LDP*CHI_COEF(L,2)+3.0_LDP*T1*CHI_COEF(L,1))-1.0_LDP
	      SIGMA_RAY(I)=CHI_COEF(L,3)+T1*(2.0D0*CHI_COEF(L,2)+3.0D0*T1*CHI_COEF(L,1))-1.0D0

	      GAM(I,LS)=3.33564E-06_LDP*V_RAY(I)/R_RAY(I,LS)*
	      GAM(I,LS)=3.33564D-06*V_RAY(I)/R_RAY(I,LS)*

	1                   (  1.0_LDP+SIGMA_RAY(I)*(MU**2)  )
	1                   (  1.0D0+SIGMA_RAY(I)*(MU**2)  )

	        T1=3.33564E-06_LDP*V_RAY(I)/R_RAY(I,LS)
	        T1=3.33564D-06*V_RAY(I)/R_RAY(I,LS)

	        GAMH(I,LS)=(V_RAY(I+1)+V_RAY(I))*3.33564E-06_LDP*
	        GAMH(I,LS)=(V_RAY(I+1)+V_RAY(I))*3.33564D-06*

	1                   (  1.0_LDP+0.5_LDP*(MU**2)*
	1                   (  1.0D0+0.5D0*(MU**2)*

	    MU_AT_RMAX(LS)=SQRT(1.0_LDP-(P_EXT(LS)/R_EXT(1))**2)
	    MU_AT_RMAX(LS)=SQRT(1.0D0-(P_EXT(LS)/R_EXT(1))**2)

	  IF(P_EXT(NP_EXT) .EQ. R_EXT(1))MU_AT_RMAX(NP_EXT)=0.0_LDP
	  IF(P_EXT(NP_EXT) .EQ. R_EXT(1))MU_AT_RMAX(NP_EXT)=0.0D0

	    AV_PREV(:,:)=0.0_LDP
	    AV_PREV(:,:)=0.0D0

	    CV_PREV(:,:)=0.0_LDP
	    CV_PREV(:,:)=0.0D0

	    I_P_PREV(:,:)=0.0_LDP
	    I_P_PREV(:,:)=0.0D0

	    I_M_PREV(:,:)=0.0_LDP
	    I_M_PREV(:,:)=0.0D0

	IPLUS_P(1:NP_OBS_MAX)=0.0_LDP
	IPLUS_P(1:NP_OBS_MAX)=0.0D0

	  IF( T1 .GT. 1.05_LDP*FRAC_DOP*V_DOP .AND. T1 .LT. 1.05_LDP*dV_CMF_PROF)THEN
	  IF( T1 .GT. 1.05*FRAC_DOP*V_DOP .AND. T1 .LT. 1.05*dV_CMF_PROF)THEN

	     N_FREQ=NINT(C_KMS*(FL_PREV-FL)/(V_DOP*FRAC_DOP)/FL+0.7_LDP)
	     N_FREQ=NINT(C_KMS*(FL_PREV-FL)/(V_DOP*FRAC_DOP)/FL+0.7)

	    IF(ETA_ALPHA .LT. 3.5_LDP)ETA_ALPHA=3.5
	    IF(ETA_ALPHA .LT. 3.5)ETA_ALPHA=3.5

	      IF(CHI_ALPHA .LT. 2._LDP)CHI_ALPHA=2.0
	      IF(CHI_ALPHA .LT. 2.)CHI_ALPHA=2.0

	1         ( (3.0_LDP*CHI_COEF(L,1)*T1+2.0_LDP*CHI_COEF(L,2))*T1+
	1         ( (3.0D0*CHI_COEF(L,1)*T1+2.0D0*CHI_COEF(L,2))*T1+

	        T2=1.0_LDP-T1
	        T2=1.0D0-T1

	          DTAU(I)=0.5_LDP*(CHI_RAY(I)+CHI_RAY(I+1))*(Z(I,LS)-Z(I+1,LS))
	          DTAU(I)=0.5D0*(CHI_RAY(I)+CHI_RAY(I+1))*(Z(I,LS)-Z(I+1,LS))

	            DTAU(I)=0.5_LDP*dZ*(CHI_RAY(I)+CHI_RAY(I+1))
	            DTAU(I)=0.5D0*dZ*(CHI_RAY(I)+CHI_RAY(I+1))

	1              dCHIdR(I)*Z(I,LS)/R_RAY(I,LS) )/12.0_LDP
	1              dCHIdR(I)*Z(I,LS)/R_RAY(I,LS) )/12.0D0

	            T1=SIGN( MIN(0.8_LDP*DTAU(I),ABS(T1)),T1 )
	            T1=SIGN( MIN(0.8D0*DTAU(I),ABS(T1)),T1 )

	      AV(:)=0.0_LDP
	      AV(:)=0.0D0

	      CV(:)=0.0_LDP
	      CV(:)=0.0D0

	      IBOUND=0.0_LDP
	      IBOUND=0.0D0

	        QH(I)=GAMH(I,LS)*2.0_LDP/((CHI_RAY(I)+CHI_RAY(I+1))*NEW_dLOG_NU)
	        QH(I)=GAMH(I,LS)*2.0D0/((CHI_RAY(I)+CHI_RAY(I+1))*NEW_dLOG_NU)

	        QH(NI)=0.0_LDP
	        QH(NI)=0.0D0

	1        *(1.0_LDP+Q(NI)*(1.0_LDP-CHI_RAY(NI)/OLD_CHI_AT_IN_BND))
	1        *(1.0D0+Q(NI)*(1.0D0-CHI_RAY(NI)/OLD_CHI_AT_IN_BND))

	          AV(I)=0.1_LDP*ABS(AV(I))
	          AV(I)=0.1*ABS(AV(I))

	      IPLUS_P(LS)=2.0_LDP*CV_BOUND          !To compute observed flux
	      IPLUS_P(LS)=2.0D0*CV_BOUND          !To compute observed flux

	        T2=1.0_LDP-T1
	        T2=1.0D0-T1

	        Q(1:NI)=0.0_LDP
	        Q(1:NI)=0.0D0

	          DTAU(I)=0.5_LDP*(CHI_RAY(I)+CHI_RAY(I+1))*(Z(I,LS)-Z(I+1,LS))
	          DTAU(I)=0.5D0*(CHI_RAY(I)+CHI_RAY(I+1))*(Z(I,LS)-Z(I+1,LS))

	            DTAU(I)=0.5_LDP*dZ*(CHI_RAY(I)+CHI_RAY(I+1))
	            DTAU(I)=0.5D0*dZ*(CHI_RAY(I)+CHI_RAY(I+1))

	1              dCHIdR(I)*Z(I,LS)/R_RAY(I,LS) )/12.0_LDP
	1              dCHIdR(I)*Z(I,LS)/R_RAY(I,LS) )/12.0D0

	            T1=SIGN( MIN(0.8_LDP*DTAU(I),ABS(T1)),T1 )
	            T1=SIGN( MIN(0.8D0*DTAU(I),ABS(T1)),T1 )

	        IF(T1 .LT. 1000.0_LDP)THEN
	        IF(T1 .LT. 1000.0D0)THEN

	          EE(I)=0.0_LDP
	          EE(I)=0.0D0

	        IF(T1 .GT. 0.5_LDP)THEN
	        IF(T1 .GT. 0.5)THEN

	          E0(I)=1.0_LDP-EE(I)
	          E0(I)=1.0D0-EE(I)

	          E1(I)=1.0_LDP-E0(I)/T1
	          E1(I)=1.0D0-E0(I)/T1

	          E2(I)=1.0_LDP-2.0_LDP*E1(I)/T1
	          E2(I)=1.0D0-2.0D0*E1(I)/T1

	          E3(I)=1.0_LDP-3.0_LDP*E2(I)/T1
	          E3(I)=1.0D0-3.0D0*E2(I)/T1

	        ELSE IF(T1 .GT. 0.1_LDP)THEN
	        ELSE IF(T1 .GT. 0.1)THEN

	          E3(I)=0.25_LDP*T1*( 1.0_LDP-0.20_LDP*T1*
	          E3(I)=0.25D0*T1*( 1.0D0-0.20*T1*

	1               (1.0_LDP-T1/6.0_LDP*(1.0_LDP-T1/7.0_LDP*
	1               (1.0D0-T1/6.0D0*(1.0D0-T1/7.0D0*

	1               (1.0_LDP-T1/8.0_LDP*(1.0_LDP-T1/9.0_LDP*
	1               (1.0D0-T1/8.0D0*(1.0D0-T1/9.0D0*

	1               (1.0_LDP-T1/10.0_LDP*(1.0_LDP-T1/11.0_LDP*
	1               (1.0D0-T1/10.0D0*(1.0D0-T1/11.0D0*

	1               (1.0_LDP-T1/12.0_LDP*(1.0_LDP-T1/13.0_LDP)))))))) )
	1               (1.0D0-T1/12.0D0*(1.0D0-T1/13.0D0)))))))) )

	          E2(I)=T1*( 1.0_LDP-E3(I) )/3.0_LDP
	          E2(I)=T1*( 1.0D0-E3(I) )/3.0D0

	          E1(I)=T1*( 1.0_LDP-E2(I) )/2.0_LDP
	          E1(I)=T1*( 1.0D0-E2(I) )/2.0D0

	          E0(I)=T1*( 1.0_LDP-E1(I) )
	          E0(I)=T1*( 1.0D0-E1(I) )

	          E3(I)=0.25_LDP*T1*( 1.0_LDP-0.20_LDP*T1*
	          E3(I)=0.25D0*T1*( 1.0D0-0.20*T1*

	1               (1.0_LDP-T1/6.0_LDP*(1.0_LDP-T1/7.0_LDP*
	1               (1.0D0-T1/6.0D0*(1.0D0-T1/7.0D0*

	1               (1.0_LDP-T1/8.0_LDP*(1.0_LDP-T1/9.0_LDP) ))))
	1               (1.0D0-T1/8.0D0*(1.0D0-T1/9.0D0) ))))

	          E2(I)=T1*( 1.0_LDP-E3(I) )/3.0_LDP
	          E2(I)=T1*( 1.0D0-E3(I) )/3.0D0

	          E1(I)=T1*( 1.0_LDP-E2(I) )/2.0_LDP
	          E1(I)=T1*( 1.0D0-E2(I) )/2.0d0

	          E0(I)=T1*( 1.0_LDP-E1(I) )
	          E0(I)=T1*( 1.0D0-E1(I) )

	        A1(I)=E0(I)-3.0_LDP*E2(I)+2.0_LDP*E3(I)
	        A1(I)=E0(I)-3.0D0*E2(I)+2.0D0*E3(I)

	        A2(I)=3.0_LDP*E2(I)-2.0_LDP*E3(I)
	        A2(I)=3.0D0*E2(I)-2.0D0*E3(I)

	        A3(I)=DTAU(I)*(E1(I)-2.0_LDP*E2(I)+E3(I))
	        A3(I)=DTAU(I)*(E1(I)-2.0D0*E2(I)+E3(I))

	1                      MIN(ABS(S(1)),0.5_LDP*ABS(dS(1)))
	1                      MIN(ABS(S(1)),0.5*ABS(dS(1)))

	1               MIN(ABS(S(I-1)),ABS(S(I)),0.5_LDP*ABS(dS(I)))
	1               MIN(ABS(S(I-1)),ABS(S(I)),0.5*ABS(dS(I)))

	1               MIN(ABS(S(NI-1)),0.5_LDP*ABS(dS(NI)))
	1               MIN(ABS(S(NI-1)),0.5*ABS(dS(NI)))

              I_M(1)=0.0_LDP
              I_M(1)=0.0D0

	1                      MIN(ABS(S(1)),0.5_LDP*ABS(dS(1)))
	1                      MIN(ABS(S(1)),0.5*ABS(dS(1)))

	1          MIN(ABS(S(I-1)),ABS(S(I)),0.5_LDP*ABS(dS(I)))
	1          MIN(ABS(S(I-1)),ABS(S(I)),0.5*ABS(dS(I)))

	1            MIN(ABS(S(NI-1)),0.5_LDP*ABS(dS(NI)))
	1            MIN(ABS(S(NI-1)),0.5*ABS(dS(NI)))


cnvt_fr_dc.f

	    SUM(J)=0.0_LDP
	    SUM(J)=0.0D0


cnvt_fr_dc_v2.f

	    SUM(J)=0.0_LDP
	    SUM(J)=0.0D0


colcool_sl_v3.f

	H=PLANCKS_CONSTANT()*1.0E+15_LDP		!H*1.0E+15  (1.0E+15 due to times frequency)
	H=PLANCKS_CONSTANT()*1.0D+15		!H*1.0E+15  (1.0E+15 due to times frequency)

	TMP_ED=1.0_LDP
	TMP_ED=1.0D0

	  COOL(I)=0.0_LDP
	  COOL(I)=0.0D0

	  CPR(I)=0.0_LDP
	  CPR(I)=0.0D0

	  CRR(I)=0.0_LDP
	  CRR(I)=0.0D0


comp_j_conv.f

	DATA ACOEF/1.690703717290_LDP,-0.690703717290_LDP/
	DATA ACOEF/1.690703717290D0,-0.690703717290D0/

	DATA BCOEF/1.614249968779_LDP,2.154326524957_LDP/
	DATA BCOEF/1.614249968779D0,2.154326524957D0/

	A_STORE(1)=0.0_LDP
	A_STORE(1)=0.0D0

	C_STORE(1)=-2.0_LDP/( LOG(NU(1)/NU(2)) )**2
	C_STORE(1)=-2.0D0/( LOG(NU(1)/NU(2)) )**2

	  DH=0.5_LDP*(D1+D2)
	  DH=0.5D0*(D1+D2)

	  A_STORE(ML)=-1.0_LDP/D1/DH
	  A_STORE(ML)=-1.0D0/D1/DH

	  C_STORE(ML)=-1.0_LDP/D2/DH
	  C_STORE(ML)=-1.0D0/D2/DH

	A_STORE(NCF)=-2.0_LDP/( LOG(NU(NCF-1)/NU(NCF)) )**2
	A_STORE(NCF)=-2.0D0/( LOG(NU(NCF-1)/NU(NCF)) )**2

	C_STORE(NCF)=0.0_LDP
	C_STORE(NCF)=0.0D0

	  BETA=1.84E-03_LDP*SQRT(TEMP(K))
	  BETA=1.84E-03*SQRT(TEMP(K))

	  PLANCK_FN(:)=TWOHCSQ*NU(:)**3/(EXP(HDKT*NU(:)/TEMP(K))-1.0_LDP)
	  PLANCK_FN(:)=TWOHCSQ*NU(:)**3/(EXP(HDKT*NU(:)/TEMP(K))-1.0D0)

	  J_ES(:)=0.0_LDP
	  J_ES(:)=0.0D0

	  PLANCK_ES(:)=0.0_LDP
	  PLANCK_ES(:)=0.0D0

	    H(:)=-1.0_LDP
	    H(:)=-1.0D0

	  DO WHILE(NU(I) .GT. 1.5_LDP*TEMP(K))
	  DO WHILE(NU(I) .GT. 1.5D0*TEMP(K))

            PLANCK_NU(I)=T1*NU(ML-1)+(1.0_LDP-T1)*NU(ML)
            PLANCK_NU(I)=T1*NU(ML-1)+(1.0D0-T1)*NU(ML)

	  T1=1.0_LDP/NU(I-1)-1.0_LDP/PLANCK_NU(I-1)		!Wavelength shift
	  T1=1.0D0/NU(I-1)-1.0D0/PLANCK_NU(I-1)		!Wavelength shift

	    PLANCK_NU(ML)=1.0_LDP/( 1.0_LDP/NU(ML) - T1)
	    PLANCK_NU(ML)=1.0D0/( 1.0D0/NU(ML) - T1)

	    PLANCK_ES(ML)=T1*C(I+1)+(1.0_LDP-T1)*C(I)
	    PLANCK_ES(ML)=T1*C(I+1)+(1.0D0-T1)*C(I)

	    J_ES(ML)=T1*A(I+1)+(1.0_LDP-T1)*A(I)
	    J_ES(ML)=T1*A(I+1)+(1.0D0-T1)*A(I)

	J_STORE(:,1:J_DIM)=0.0_LDP
	J_STORE(:,1:J_DIM)=0.0D0


comp_j_conv_v2.f

	DATA ACOEF/1.690703717290_LDP,-0.690703717290_LDP/
	DATA ACOEF/1.690703717290D0,-0.690703717290D0/

	DATA BCOEF/1.614249968779_LDP,2.154326524957_LDP/
	DATA BCOEF/1.614249968779D0,2.154326524957D0/

	A_STORE(1)=0.0_LDP
	A_STORE(1)=0.0D0

	C_STORE(1)=-2.0_LDP/( LOG(NU(1)/NU(2)) )**2
	C_STORE(1)=-2.0D0/( LOG(NU(1)/NU(2)) )**2

	  DH=0.5_LDP*(D1+D2)
	  DH=0.5D0*(D1+D2)

	  A_STORE(ML)=-1.0_LDP/D1/DH
	  A_STORE(ML)=-1.0D0/D1/DH

	  C_STORE(ML)=-1.0_LDP/D2/DH
	  C_STORE(ML)=-1.0D0/D2/DH

	A_STORE(NCF)=-2.0_LDP/( LOG(NU(NCF-1)/NU(NCF)) )**2
	A_STORE(NCF)=-2.0D0/( LOG(NU(NCF-1)/NU(NCF)) )**2

	C_STORE(NCF)=0.0_LDP
	C_STORE(NCF)=0.0D0

	  BETA=1.84E-03_LDP*SQRT(TEMP(K))
	  BETA=1.84D-03*SQRT(TEMP(K))

	  T3=0.5_LDP*HDKT*NU(1)/TEMP(K)
	  T3=0.5D0*HDKT*NU(1)/TEMP(K)

	  IF(T3 .LT. 1)T3=0.0_LDP
	  IF(T3 .LT. 1)T3=0.0D0

	  IF(T3 .GT. 700.0_LDP)T3=700.0_LDP
	  IF(T3 .GT. 700.0D0)T3=700.0D0

	    PLANCK_FN(ML)=TWOHCSQ*(NU(ML)**3)*T2/ (1.0_LDP-T1)
	    PLANCK_FN(ML)=TWOHCSQ*(NU(ML)**3)*T2/ (1.0D0-T1)

	  J_ES(:)=0.0_LDP
	  J_ES(:)=0.0D0

	  PLANCK_ES(:)=0.0_LDP
	  PLANCK_ES(:)=0.0D0

	    H(:)=-1.0_LDP
	    H(:)=-1.0D0

	  IF( MINVAL(PLANCK_FN) .GT. 0.0_LDP .AND. MINVAL(PLANCK_ES) .GT. 0.0_LDP)THEN
	  IF( MINVAL(PLANCK_FN) .GT. 0.0D0 .AND. MINVAL(PLANCK_ES) .GT. 0.0D0)THEN

	    DO WHILE(NU(I) .GT. 1.5_LDP*TEMP(K))
	    DO WHILE(NU(I) .GT. 1.5D0*TEMP(K))

              PLANCK_NU(I)=T1*NU(ML-1)+(1.0_LDP-T1)*NU(ML)
              PLANCK_NU(I)=T1*NU(ML-1)+(1.0D0-T1)*NU(ML)

	    T1=1.0_LDP/NU(I-1)-1.0_LDP/PLANCK_NU(I-1)		!Wavelength shift
	    T1=1.0D0/NU(I-1)-1.0D0/PLANCK_NU(I-1)		!Wavelength shift

	      PLANCK_NU(ML)=1.0_LDP/( 1.0_LDP/NU(ML) - T1)
	      PLANCK_NU(ML)=1.0D0/( 1.0D0/NU(ML) - T1)

	      PLANCK_ES(ML)=T1*C(I+1)+(1.0_LDP-T1)*C(I)
	      PLANCK_ES(ML)=T1*C(I+1)+(1.0D0-T1)*C(I)

	      J_ES(ML)=T1*A(I+1)+(1.0_LDP-T1)*A(I)
	      J_ES(ML)=T1*A(I+1)+(1.0D0-T1)*A(I)

	  J_STORE(:,1:J_DIM)=0.0_LDP
	  J_STORE(:,1:J_DIM)=0.0D0


comp_lev_dis.f

	  B_LEV_DIS=( 8.589E+14_LDP*(POPION**0.333333_LDP)/ED)**1.5_LDP
	  B_LEV_DIS=( 8.589D+14*(POPION**0.333333D0)/ED)**1.5D0

	  A_LEV_DIS=0.0009_LDP*(ED**0.1667_LDP)/SQRT(T)
	  A_LEV_DIS=0.0009D0*(ED**0.1667D0)/SQRT(T)

	  X_LEV_DIS=(1.0_LDP+A_LEV_DIS)**3.15_LDP
	  X_LEV_DIS=(1.0D0+A_LEV_DIS)**3.15D0

	  B_LEV_DIS=1.0E+30_LDP		!Large number
	  B_LEV_DIS=1.0D+30		!Large number

	  A_LEV_DIS=0.0_LDP
	  A_LEV_DIS=0.0D0

	  X_LEV_DIS=1.0_LDP
	  X_LEV_DIS=1.0D0


comp_obs.f

	PARAMETER (ONE=1.0_LDP)
	PARAMETER (ONE=1.0D0)

	  C_KMS=1.0E-05_LDP*SPEED_OF_LIGHT()
	  C_KMS=1.0D-05*SPEED_OF_LIGHT()

	    FLUX_CONST=2.0E+01_LDP*FUN_PI()*(1.0E+18_LDP*RMAX/PARSEC())**2
	    FLUX_CONST=2.0D+01*FUN_PI()*(1.0D+18*RMAX/PARSEC())**2

	    FLUX_CONST=4.0E+01_LDP*FUN_PI()*(1.0E+18_LDP*RMAX/PARSEC())**2
	    FLUX_CONST=4.0D+01*FUN_PI()*(1.0D+18*RMAX/PARSEC())**2

	  OBS_FLUX(OBS_INDX)=0.0_LDP	!Initialize for integrations over p.
	  OBS_FLUX(OBS_INDX)=0.0D0	!Initialize for integrations over p.

	    CMF_FREQ=OBS_FREQ(OBS_INDX)/(1.0_LDP+MU(LS)*VINF/C_KMS)
	    CMF_FREQ=OBS_FREQ(OBS_INDX)/(1.0D0+MU(LS)*VINF/C_KMS)

	      FLUX=T1*IPLUS_STORE(ML_ST,LS)+(1.0_LDP-T1)*IPLUS_STORE(ML_END,LS)
	      FLUX=T1*IPLUS_STORE(ML_ST,LS)+(1.0D0-T1)*IPLUS_STORE(ML_END,LS)

	1            MIN(ABS(SIM1),ABS(SI),0.5_LDP*ABS(DYI))
	1            MIN(ABS(SIM1),ABS(SI),0.5*ABS(DYI))

	1            MIN(ABS(SI),ABS(SIP1),0.5_LDP*ABS(DYIP1))
	1            MIN(ABS(SI),ABS(SIP1),0.5*ABS(DYIP1))

              A=(DYI+DYIP1-2.0_LDP*SI)/HI/HI
              A=(DYI+DYIP1-2.0*SI)/HI/HI

	      B=(3.0_LDP*SI-2.0_LDP*DYI-DYIP1)/HI
	      B=(3.0*SI-2.0*DYI-DYIP1)/HI


comp_obs_v2.f

	PARAMETER (ONE=1.0_LDP)
	PARAMETER (ONE=1.0D0)

	  C_KMS=1.0E-05_LDP*SPEED_OF_LIGHT()
	  C_KMS=1.0D-05*SPEED_OF_LIGHT()

	    FLUX_CONST=2.0E+01_LDP*FUN_PI()*(1.0E+18_LDP*RMAX/PARSEC())**2
	    FLUX_CONST=2.0D+01*FUN_PI()*(1.0D+18*RMAX/PARSEC())**2

	    FLUX_CONST=4.0E+01_LDP*FUN_PI()*(1.0E+18_LDP*RMAX/PARSEC())**2
	    FLUX_CONST=4.0D+01*FUN_PI()*(1.0D+18*RMAX/PARSEC())**2

            T1=1.0_LDP/SQRT(1.0_LDP-(VINF/C_KMS)**2)				!Gamma
            T1=1.0D0/SQRT(1.0D0-(VINF/C_KMS)**2)				!Gamma

	      FREQ_CONV_FAC(LS)=T1*(1.0_LDP-MU(LS)*VINF/C_KMS)		!Observer's to CMF
	      FREQ_CONV_FAC(LS)=T1*(1.0D0-MU(LS)*VINF/C_KMS)		!Observer's to CMF

              INTEN_CONV_FAC(LS)=1.0_LDP/(FREQ_CONV_FAC(LS)**3)
              INTEN_CONV_FAC(LS)=1.0D0/(FREQ_CONV_FAC(LS)**3)

            T1=1.0_LDP/SQRT(1.0_LDP-(VINF/C_KMS)**2)				!Gamma
            T1=1.0D0/SQRT(1.0D0-(VINF/C_KMS)**2)				!Gamma

	      FREQ_CONV_FAC(LS)=T1*(1.0_LDP-MU(LS)*VINF/C_KMS)			!Observer's to CMF
	      FREQ_CONV_FAC(LS)=T1*(1.0D0-MU(LS)*VINF/C_KMS)			!Observer's to CMF

              INTEN_CONV_FAC(LS)=1.0_LDP
              INTEN_CONV_FAC(LS)=1.0D0

	  IF(NEW_IPLUS(LS) .LE. 0.0_LDP)NEW_IPLUS(LS)=0.0_LDP
	  IF(NEW_IPLUS(LS) .LE. 0.0D0)NEW_IPLUS(LS)=0.0D0

	  OBS_FLUX(OBS_INDX)=0.0_LDP	!Initialize for integrations over p.
	  OBS_FLUX(OBS_INDX)=0.0D0	!Initialize for integrations over p.

	      FLUX=T1*IPLUS_STORE(ML_ST,LS)+(1.0_LDP-T1)*IPLUS_STORE(ML_END,LS)
	      FLUX=T1*IPLUS_STORE(ML_ST,LS)+(1.0D0-T1)*IPLUS_STORE(ML_END,LS)

	1            MIN(ABS(SIM1),ABS(SI),0.5_LDP*ABS(DYI))
	1            MIN(ABS(SIM1),ABS(SI),0.5D0*ABS(DYI))

	1            MIN(ABS(SI),ABS(SIP1),0.5_LDP*ABS(DYIP1))
	1            MIN(ABS(SI),ABS(SIP1),0.5D0*ABS(DYIP1))

              A=(DYI+DYIP1-2.0_LDP*SI)/HI/HI
              A=(DYI+DYIP1-2.0D0*SI)/HI/HI

	      B=(3.0_LDP*SI-2.0_LDP*DYI-DYIP1)/HI
	      B=(3.0D0*SI-2.0D0*DYI-DYIP1)/HI


comp_var_jrec.f

	  JREC(:)=0.0_LDP
	  JREC(:)=0.0D0

	  dJRECdT(:)=0.0_LDP
	  dJRECdT(:)=0.0D0

	  JPHOT(:)=0.0_LDP
	  JPHOT(:)=0.0D0

	  JREC_CR(:)=0.0_LDP
	  JREC_CR(:)=0.0D0

	  JPHOT_CR(:)=0.0_LDP
	  JPHOT_CR(:)=0.0D0

	  BPHOT_CR(:)=0.0_LDP
	  BPHOT_CR(:)=0.0D0

	  BPHOT_CR(I)=BPHOT_CR(I)+T1*FQW*EMHNUKT(I)/(1.0_LDP-EMHNUKT(I))
	  BPHOT_CR(I)=BPHOT_CR(I)+T1*FQW*EMHNUKT(I)/(1.0D0-EMHNUKT(I))


comp_var_jrec_v2.f

	  JREC(:)=0.0_LDP
	  JREC(:)=0.0D0

	  dJRECdT(:)=0.0_LDP
	  dJRECdT(:)=0.0D0

	  JPHOT(:)=0.0_LDP
	  JPHOT(:)=0.0D0

	  JREC_CR(:)=0.0_LDP
	  JREC_CR(:)=0.0D0

	  dJREC_CRdT(:)=0.0_LDP
	  dJREC_CRdT(:)=0.0D0

	  JPHOT_CR(:)=0.0_LDP
	  JPHOT_CR(:)=0.0D0

	  BPHOT_CR(:)=0.0_LDP
	  BPHOT_CR(:)=0.0D0

	  BPHOT_CR(I)=BPHOT_CR(I)+T1*FQW*EMHNUKT(I)/(1.0_LDP-EMHNUKT(I))
	  BPHOT_CR(I)=BPHOT_CR(I)+T1*FQW*EMHNUKT(I)/(1.0D0-EMHNUKT(I))


det_main_cont_freq.f

	C_KMS=SPEED_OF_LIGHT()/1.0E+05_LDP
	C_KMS=SPEED_OF_LIGHT()/1.0D+05

	NU_EVAL(:)=0.0_LDP
	NU_EVAL(:)=0.0D0

	  DO WHILE(NU_EVAL(ML_ST) .NE. 0.0_LDP)
	  DO WHILE(NU_EVAL(ML_ST) .NE. 0.0D0)

	  DO WHILE(NU_EVAL(ML_END) .EQ. 0.0_LDP)
	  DO WHILE(NU_EVAL(ML_END) .EQ. 0.0D0)

	    IF(T1+T2 .GT. 1.25_LDP*VRAT .AND. T1 .GT. 0.75_LDP*VRAT)THEN
	    IF(T1+T2 .GT. 1.25D0*VRAT .AND. T1 .GT. 0.75D0*VRAT)THEN

	   T1=0.0_LDP; T2=0.0_LDP; T3=0.0_LDP; T4=0.0_LDP;
	   T1=0.0D0; T2=0.0D0; T3=0.0D0; T4=0.0D0;


do_de_split.f


dop_pro.f

	PARAMETER (SCL=1.0E-15_LDP/1.77245385095516_LDP)    !1.0D-15/SQRT(PI)
	PARAMETER (SCL=1.0D-15/1.77245385095516D0)    !1.0D-15/SQRT(PI)

	RDELD=2.333015E+04_LDP/SQRT( T/AMASS + (VTURB/12.85_LDP)**2 )
	RDELD=2.333015D+04/SQRT( T/AMASS + (VTURB/12.85D0)**2 )


do_sl_ls_split.f


dp_zero.f

	Z=0.0_LDP
	Z=0.0D0


dspheredchi.f

	W(:,:)=0.0_LDP
	W(:,:)=0.0D0

	  ALPHA=0.5_LDP*(R(I)-R(K))
	  ALPHA=0.5D0*(R(I)-R(K))

	  BETA=ALPHA*(R(I)-R(K))/6.0_LDP
	  BETA=ALPHA*(R(I)-R(K))/6.0D0


edd_j_var_v4.f

	VK(:,:,:)=0.0_LDP
	VK(:,:,:)=0.0D0

	RHS_dHdCHI(:,:)=0.0_LDP
	RHS_dHdCHI(:,:)=0.0D0

	  ES_COH_VEC(1:ND)=0.0_LDP
	  ES_COH_VEC(1:ND)=0.0D0

	  T1=(1.0_LDP+W(I))*(CHI(I)+CHI(I+1))
	  T1=(1.0D0+W(I))*(CHI(I)+CHI(I+1))

	  EPS_FAC(I)=-1.0_LDP/T1
	  EPS_FAC(I)=-1.0D0/T1

	  T1=0.5_LDP*R(I)*R(I)/Q(I)
	  T1=0.5D0*R(I)*R(I)/Q(I)

	1                    0.5_LDP*(1.0_LDP-ES_COH_VEC(I))*R(I)*R(I)/Q(I)
	1                    0.5D0*(1.0D0-ES_COH_VEC(I))*R(I)*R(I)/Q(I)

	1                    0.5_LDP*(1.0_LDP-ES_COH_VEC(I))*R(I)*R(I)/Q(I)
	1                    0.5D0*(1.0D0-ES_COH_VEC(I))*R(I)*R(I)/Q(I)

	  T1=0.5_LDP*R(I)*R(I)/Q(I)
	  T1=0.5D0*R(I)*R(I)/Q(I)

	1               DBB*R(ND)*R(ND)/3.0_LDP/CHI(ND)/CHI(ND)
	1               DBB*R(ND)*R(ND)/3.0D0/CHI(ND)/CHI(ND)


edd_j_var_v5.f

	VK(:,:,:)=0.0_LDP
	VK(:,:,:)=0.0D0

	RHS_dHdCHI(:,:)=0.0_LDP
	RHS_dHdCHI(:,:)=0.0D0

	  T1=(1.0_LDP+W(I))*(CHI(I)+CHI(I+1))
	  T1=(1.0D0+W(I))*(CHI(I)+CHI(I+1))

	  EPS_FAC(I)=-1.0_LDP/T1
	  EPS_FAC(I)=-1.0D0/T1

	  T1=0.5_LDP*R(I)*R(I)/Q(I)
	  T1=0.5D0*R(I)*R(I)/Q(I)

	  dTBdCHI=PSI(I)/(DTAU(J)+DTAU(I))+0.5_LDP*(1.0_LDP-ES_COH_VEC(I))*R(I)*R(I)/Q(I)
	  dTBdCHI=PSI(I)/(DTAU(J)+DTAU(I))+0.5D0*(1.0D0-ES_COH_VEC(I))*R(I)*R(I)/Q(I)

	  T1=0.5_LDP*R(I)*R(I)/Q(I)
	  T1=0.5D0*R(I)*R(I)/Q(I)

	1               DBB*R(ND)*R(ND)/3.0_LDP/CHI(ND)/CHI(ND)
	1               DBB*R(ND)*R(ND)/3.0D0/CHI(ND)/CHI(ND)


edd_j_var_v6.f

	VK(:,:,:)=0.0_LDP
	VK(:,:,:)=0.0D0

	RHS_dHdCHI(:,:)=0.0_LDP
	RHS_dHdCHI(:,:)=0.0D0

	  T1=(1.0_LDP+W(I))*(CHI(I)+CHI(I+1))
	  T1=(1.0D0+W(I))*(CHI(I)+CHI(I+1))

	  EPS_FAC(I)=-1.0_LDP/T1
	  EPS_FAC(I)=-1.0D0/T1

	  T1=0.5_LDP*R(I)*R(I)/Q(I)
	  T1=0.5D0*R(I)*R(I)/Q(I)

	  dTBdCHI=PSI(I)/(DTAU(J)+DTAU(I))+0.5_LDP*(1.0_LDP-ES_COH_VEC(I))*R(I)*R(I)/Q(I)
	  dTBdCHI=PSI(I)/(DTAU(J)+DTAU(I))+0.5D0*(1.0D0-ES_COH_VEC(I))*R(I)*R(I)/Q(I)

	  T1=0.5_LDP*R(I)*R(I)/Q(I)
	  T1=0.5D0*R(I)*R(I)/Q(I)

	  T1=0.5_LDP*(R(2)-R(1))
	  T1=0.5D0*(R(2)-R(1))

	1               DBB*R(ND)*R(ND)/3.0_LDP/CHI(ND)/CHI(ND)
	1               DBB*R(ND)*R(ND)/3.0D0/CHI(ND)/CHI(ND)


eddline_var.f

	VK(:,:,:)=0.0_LDP 	!Dimension ND,ND,NM
	VK(:,:,:)=0.0D0 	!Dimension ND,ND,NM

	RHS_dHdCHI(:,:)=0.0_LDP	!Dimensiond ND-1,ND
	RHS_dHdCHI(:,:)=0.0D0	!Dimensiond ND-1,ND

	  T1=(1.0_LDP+W(I))*(TCHI(I)+TCHI(I+1))
	  T1=(1.0D0+W(I))*(TCHI(I)+TCHI(I+1))

	    dTBdCHI_I=dHLdTAU(I)+0.5_LDP/Q(I)
	    dTBdCHI_I=dHLdTAU(I)+0.5D0/Q(I)

	    dTBdCHI_J=dHUdTAU(J)+0.5_LDP/Q(I)
	    dTBdCHI_J=dHUdTAU(J)+0.5D0/Q(I)

	    T1=0.5_LDP*R(I)*R(I)/Q(I)
	    T1=0.5D0*R(I)*R(I)/Q(I)

	1                 DBB*R(ND)*R(ND)/3.0_LDP/TCHI(ND)/TCHI(ND)
	1                 DBB*R(ND)*R(ND)/3.0D0/TCHI(ND)/TCHI(ND)

	 dTBdCHI_I=dHLdTAU(I)+PSI(I)/(DTAU(J)+DTAU(I))+0.5_LDP/Q(I)
	 dTBdCHI_I=dHLdTAU(I)+PSI(I)/(DTAU(J)+DTAU(I))+0.5D0/Q(I)

	 dTBdCHI_J=dHUdTAU(J)+PSI(I)/(DTAU(J)+DTAU(I))+0.5_LDP/Q(I)
	 dTBdCHI_J=dHUdTAU(J)+PSI(I)/(DTAU(J)+DTAU(I))+0.5D0/Q(I)

	 T1=0.5_LDP*R(I)*R(I)/Q(I)
	 T1=0.5D0*R(I)*R(I)/Q(I)

	1               DBB*R(ND)*R(ND)/3.0_LDP/TCHI(ND)/TCHI(ND)
	1               DBB*R(ND)*R(ND)/3.0D0/TCHI(ND)/TCHI(ND)


elec_prep.f


equal.f

	IF(X .EQ. 0.0_LDP .AND. Y .EQ. 0.0_LDP)THEN
	IF(X .EQ. 0.0D0 .AND. Y .EQ. 0.0D0)THEN

	  IF( (1.0_LDP-X/Y) .LE. Z )EQUAL=.TRUE.
	  IF( (1.0D0-X/Y) .LE. Z )EQUAL=.TRUE.

	  IF( (1.0_LDP-Y/X) .LE. Z )EQUAL=.TRUE.
	  IF( (1.0D0-Y/X) .LE. Z )EQUAL=.TRUE.


esopac.f

	RKI(1:ND)=6.65E-15_LDP*ED(1:ND)
	RKI(1:ND)=6.65D-15*ED(1:ND)


estau.f

	  OPT_DEP(I)=0.0_LDP
	  OPT_DEP(I)=0.0D0

	  DTAU(I)=0.5_LDP*( OPT_DEP(I)+OPT_DEP(I+1) )*( R(I)-R(I+1) )
	  DTAU(I)=0.5D0*( OPT_DEP(I)+OPT_DEP(I+1) )*( R(I)-R(I+1) )


estau_v2.f

	  OPT_DEP(I)=0.0_LDP
	  OPT_DEP(I)=0.0D0

	T1=MAX(T1,2.0_LDP)
	T1=MAX(T1,2.0D0)

	TAU_BND=OPT_DEP(1)*R(1)/(T1-1.0_LDP)
	TAU_BND=OPT_DEP(1)*R(1)/(T1-1.0D0)

	  DTAU(I)=0.5_LDP*( OPT_DEP(I)+OPT_DEP(I+1) )*( R(I)-R(I+1) )
	  DTAU(I)=0.5D0*( OPT_DEP(I)+OPT_DEP(I+1) )*( R(I)-R(I+1) )


eval_adiabatic.f

	  SCALE=1.0E+09_LDP*BOLTZMANN_CONSTANT()/4.0_LDP/PI
	  SCALE=1.0D+09*BOLTZMANN_CONSTANT()/4.0D0/PI

	1                (1.5_LDP*AD_CR_DT(I)+SIGMA(I)+3.0_LDP)/R(I)
	1                (1.5D0*AD_CR_DT(I)+SIGMA(I)+3.0D0)/R(I)

	1                         1.5_LDP*(POPION(1)+ED(1))*SCALE*VEL(1)/
	1                         1.5D0*(POPION(1)+ED(1))*SCALE*VEL(1)/

	1                         1.5_LDP*(POPION(1)+ED(1))*SCALE*VEL(1)*
	1                         1.5D0*(POPION(1)+ED(1))*SCALE*VEL(1)*

	1                           1.5_LDP*(POPION(I)+ED(I))*SCALE*VEL(I)*
	1                           1.5D0*(POPION(I)+ED(I))*SCALE*VEL(I)*

	1                           1.5_LDP*(POPION(I)+ED(I))*SCALE*VEL(I)*
	1                           1.5D0*(POPION(I)+ED(I))*SCALE*VEL(I)*

	    T1=1.5_LDP*POPION(1)*SCALE*VEL(1)/R(1)
	    T1=1.5D0*POPION(1)*SCALE*VEL(1)/R(1)

	SCALE=0.1_LDP*BOLTZMANN_CONSTANT()
	SCALE=0.1D0*BOLTZMANN_CONSTANT()

	1                VEL(I)*T(I)/R(I)*(3.0_LDP+SIGMA(I))
	1                VEL(I)*T(I)/R(I)*(3.0D0+SIGMA(I))

	1                (1.5_LDP*AD_CR_DT(I))
	1                (1.5D0*AD_CR_DT(I))


eval_ed.f

	    CHARGE(I)=0.0_LDP
	    CHARGE(I)=0.0D0

	    dCHARGEdNe(I)=0.0_LDP
	    dCHARGEdNe(I)=0.0D0

	  DION(I)=0.0_LDP
	  DION(I)=0.0D0

	  dDIONdNe(I)=0.0_LDP
	  dDIONdNe(I)=0.0D0

	  LOC_CH(I)=0.0_LDP
	  LOC_CH(I)=0.0D0

	  dLOC_CH_dNe(I)=0.0_LDP
	  dLOC_CH_dNe(I)=0.0D0

            DION(I)=T1*ED(I)*( 1.0_LDP+DION(I) )
            DION(I)=T1*ED(I)*( 1.0D0+DION(I) )

	  DION(I)=DION(I)+1.0_LDP
	  DION(I)=DION(I)+1.0D0


evalse_qwvj_v5.f

	  SUM_SE=0.0_LDP
	  SUM_SE=0.0D0

	  SUM_VJ_R=0.0_LDP
	  SUM_VJ_R=0.0D0

	  SUM_VJ_P=0.0_LDP
	  SUM_VJ_P=0.0D0


evalse_x_qwvj_v3.f

	  SUM_SE=0.0_LDP
	  SUM_SE=0.0D0

	  SUM_VJ_R=0.0_LDP
	  SUM_VJ_R=0.0D0

	  SUM_VJ_P=0.0_LDP
	  SUM_VJ_P=0.0D0


ew_format.f

	IF(LAMBDA .LT. 1.0E+05_LDP)THEN
	IF(LAMBDA .LT. 1.0D+05)THEN

	IF(FLUX .GT. 0.1_LDP .AND. FLUX .LT. 1.0E+04_LDP)THEN
	IF(FLUX .GT. 0.1D0 .AND. FLUX .LT. 1.0D+04)THEN

	IF(ABS(EW) .GT. 0.1_LDP .AND. ABS(EW) .LT. 1.0E+04_LDP)THEN
	IF(ABS(EW) .GT. 0.1D0 .AND. ABS(EW) .LT. 1.0D+04)THEN


ew_format_v2.f

	IF(LAMBDA .LT. 1.0E+05_LDP)THEN
	IF(LAMBDA .LT. 1.0D+05)THEN

	T1=2.997924E+10_LDP/(1.0E-08_LDP*LAMBDA) 	!Frequency(Hz)
	T1=2.997924D+10/(1.0D-08*LAMBDA) 	!Frequency(Hz)

	T1=1.0E-23_LDP*FLUX*T1/LAMBDA               !Flux -- ergs/cm^2/sec/Hz
	T1=1.0D-23*FLUX*T1/LAMBDA               !Flux -- ergs/cm^2/sec/Hz


ew_format_v3.f

	IF(LAMBDA .LT. 1.0E+05_LDP)THEN
	IF(LAMBDA .LT. 1.0D+05)THEN

	T1=2.997924E+10_LDP/(1.0E-08_LDP*LAMBDA) 	!Frequency(Hz)
	T1=2.997924D+10/(1.0D-08*LAMBDA) 	!Frequency(Hz)

	T1=1.0E-23_LDP*FLUX*T1/LAMBDA               !Flux -- ergs/cm^2/sec/Hz
	T1=1.0D-23*FLUX*T1/LAMBDA               !Flux -- ergs/cm^2/sec/Hz


ex_e1x_fun.f

	DATA W/-0.57721566_LDP,0.99999193_LDP,-0.24991055_LDP,
	DATA W/-0.57721566D0,0.99999193D0,-0.24991055D0,

	1       0.05519968_LDP,-0.00976004_LDP,0.00107857_LDP/
	1       0.05519968D0,-0.00976004D0,0.00107857D0/

	DATA A/0.2677737343_LDP,8.6347608925_LDP,18.0590169730_LDP,8.5733287401_LDP/
	DATA A/0.2677737343D0,8.6347608925D0,18.0590169730D0,8.5733287401D0/

	DATA B/3.9584969228_LDP,21.0996530827_LDP,25.6329561486_LDP,9.5733223454_LDP/
	DATA B/3.9584969228D0,21.0996530827D0,25.6329561486D0,9.5733223454D0/

	IF(X .LE. 0.0_LDP)THEN
	IF(X .LE. 0.0D0)THEN

	  NUM=1.0_LDP
	  NUM=1.0D0

	  DENOM=1.0_LDP
	  DENOM=1.0D0


exponx.f

	IF( ABS(X) .LT. 1.0E-03_LDP )THEN
	IF( ABS(X) .LT. 1.0D-03 )THEN

	  EXPONX=1.0_LDP-X*(  0.5_LDP-X/6.0_LDP*( 1.0_LDP-X/4.0_LDP )  )
	  EXPONX=1.0D0-X*(  0.5D0-X/6.0D0*( 1.0D0-X/4.0D0 )  )

	  EXPONX=( 1.0_LDP-EXP(-X) )/X
	  EXPONX=( 1.0D0-EXP(-X) )/X

	  EXPONX=1.0_LDP/X
	  EXPONX=1.0D0/X

	IF( ABS(X) .LT. 1.0E-03_LDP )THEN
	IF( ABS(X) .LT. 1.0D-03 )THEN

	  d_EXPONX_dX=-0.5_LDP+X*( 1.0_LDP-X*(0.375_LDP-0.1_LDP*X) )/3.0_LDP
	  d_EXPONX_dX=-0.5D0+X*( 1.0D0-X*(0.375D0-0.1D0*X) )/3.0D0

	    Y=0.0_LDP
	    Y=0.0D0

	  d_EXPONX_dX=( Y-(1.0_LDP-Y)/X )/X
	  d_EXPONX_dX=( Y-(1.0D0-Y)/X )/X


extend3opac.f

	  CHIEXT(I)=0.0_LDP
	  CHIEXT(I)=0.0D0

	  ETAEXT(I)=0.0_LDP
	  ETAEXT(I)=0.0D0

	  ESECEXT(I)=0.0_LDP
	  ESECEXT(I)=0.0D0


extend_opac.f

	  CHIEXT(I)=0.0_LDP
	  CHIEXT(I)=0.0D0

	  ETAEXT(I)=0.0_LDP
	  ETAEXT(I)=0.0D0

	  ESECEXT(I)=0.0_LDP
	  ESECEXT(I)=0.0D0

	  RJEXT(I)=0.0_LDP
	  RJEXT(I)=0.0D0


extend_vtsigma.f

	  VEXT(I)=0.0_LDP
	  VEXT(I)=0.0D0

	  SIGMAEXT(I)=0.0_LDP
	  SIGMAEXT(I)=0.0D0

	  TEXT(I)=0.0_LDP
	  TEXT(I)=0.0D0

	    T1= SIGMA(J+INDX(I))+1.0_LDP
	    T1= SIGMA(J+INDX(I))+1.0D0

	    IF(T1 .LE. 0.0_LDP)T1=0.0001_LDP
	    IF(T1 .LE. 0.0D0)T1=0.0001D0

	  SIGMAEXT(I)=EXP(SIGMAEXT(I))-1.0_LDP
	  SIGMAEXT(I)=EXP(SIGMAEXT(I))-1.0D0

	  IF(SIGMAEXT(I) .LT. -0.9999_LDP)SIGMAEXT(I)=-0.9999_LDP
	  IF(SIGMAEXT(I) .LT. -0.9999D0)SIGMAEXT(I)=-0.9999D0


fdg_f_to_s_ns_v1.f


fdg_f_to_s_ns_v2.f


fg_comp.f

	TA(:)=0.0_LDP;      TB(:)=0.0_LDP;     TC(:)=0.0_LDP;  AV(:)=0.0_LDP;
	TA(:)=0.0D0;      TB(:)=0.0D0;     TC(:)=0.0D0;  AV(:)=0.0D0;

        CV(:)=0.0_LDP;      DTAU(:)=0.0_LDP;   Z(:)=0.0_LDP
        CV(:)=0.0D0;      DTAU(:)=0.0D0;   Z(:)=0.0D0

	TCHI(:)=0.0_LDP;    XM(:)=0.0_LDP;     SOURCE(:)=0.0_LDP
	TCHI(:)=0.0D0;    XM(:)=0.0D0;     SOURCE(:)=0.0D0

	U(:)=0.0_LDP;       VB(:)=0.0_LDP;     VC(:)=0.0_LDP
	U(:)=0.0D0;       VB(:)=0.0D0;     VC(:)=0.0D0

	GB(:)=0.0_LDP;      H(:)=0.0_LDP;      GAM(:)=0.0_LDP; GAMH(:)=0.0_LDP
	GB(:)=0.0D0;      H(:)=0.0D0;      GAM(:)=0.0D0; GAMH(:)=0.0D0

	Q(:)=0.0_LDP;       QH(:)=0.0_LDP;     JPREV(:)=0.0_LDP
	Q(:)=0.0D0;       QH(:)=0.0D0;     JPREV(:)=0.0D0

	AVCONT(:)=0.0_LDP;  CVCONT(:)=0.0_LDP; dCHIdR(:)=0.0_LDP
	AVCONT(:)=0.0D0;  CVCONT(:)=0.0D0; dCHIdR(:)=0.0D0

	DNU=3.33564E-06_LDP*V(1)*2.0_LDP
	DNU=3.33564D-06*V(1)*2.0D0

	IF( JNU(1,NLF+1) .EQ. 0.0_LDP .AND. JNU(ND,NLF+1) .EQ. 0.0_LDP )THEN
	IF( JNU(1,NLF+1) .EQ. 0.0D0 .AND. JNU(ND,NLF+1) .EQ. 0.0D0 )THEN

	JNU(:,:)=0.0_LDP
	JNU(:,:)=0.0D0

	HNU(:,:)=0.0_LDP
	HNU(:,:)=0.0D0

	KNU(:,:)=0.0_LDP
	KNU(:,:)=0.0D0

	NNU(:,:)=0.0_LDP
	NNU(:,:)=0.0D0

	HBC(:,:)=0.0_LDP
	HBC(:,:)=0.0D0

	NBC(:,:)=0.0_LDP
	NBC(:,:)=0.0D0

	  IN_HBC(ML)=0.0_LDP
	  IN_HBC(ML)=0.0D0

	  AV(1:NI)=0.0_LDP
	  AV(1:NI)=0.0D0

	  CV(1:NI)=0.0_LDP
	  CV(1:NI)=0.0D0

	    IF(P(LS) .GT. 0.0_LDP)THEN
	    IF(P(LS) .GT. 0.0D0)THEN

	      TOR=CHI(1)*R(1)*R(1)*(1.570796_LDP-ACOS(P(LS)/R(1)))/P(LS)
	      TOR=CHI(1)*R(1)*R(1)*(1.570796D0-ACOS(P(LS)/R(1)))/P(LS)

	    IBOUND=ETA(1)*(1.0_LDP-EXP(-TOR))/CHI(1)
	    IBOUND=ETA(1)*(1.0D0-EXP(-TOR))/CHI(1)

	    TOR=0.0_LDP
	    TOR=0.0D0

	    IBOUND=0.0_LDP
	    IBOUND=0.0D0

	      T1=0.0_LDP
	      T1=0.0D0

	1   *(1.0_LDP+Q(NI)*(1.0_LDP-TCHI(NI)/OLDCHI))
	1   *(1.0D0+Q(NI)*(1.0D0-TCHI(NI)/OLDCHI))

	      WERF_EXP=EXP( 1.0E-15_LDP*CHIL(1)/FL/GAM(1)*WERFC(ML) )
	      WERF_EXP=EXP( 1.0D-15*CHIL(1)/FL/GAM(1)*WERFC(ML) )

	        IMINOLD=0.0_LDP
	        IMINOLD=0.0D0

	      IMIN=ETAL(1)/CHIL(1)*(1.0_LDP-WERF_EXP)+IBOUND*WERF_EXP
	      IMIN=ETAL(1)/CHIL(1)*(1.0D0-WERF_EXP)+IBOUND*WERF_EXP

	      IMIN_dSL=(1.0_LDP-WERF_EXP)
	      IMIN_dSL=(1.0D0-WERF_EXP)

	      IMIN_dSL=0.0_LDP
	      IMIN_dSL=0.0D0

	      QH(I)=2.0_LDP*GAMH(I)*( CV(I)-CVCONT(I) )/(CHI(I)+CHI(I+1))
	      QH(I)=2.0D0*GAMH(I)*( CV(I)-CVCONT(I) )/(CHI(I)+CHI(I+1))

	1            (ETAL(1)/CHIL(1)-IBOUND)*(1.0_LDP-WERF_EXP)/CHI(1)
	1            (ETAL(1)/CHIL(1)-IBOUND)*(1.0D0-WERF_EXP)/CHI(1)

	    TA(1)=0.0_LDP
	    TA(1)=0.0D0

	    TC(1)=1.0_LDP/DTAU(1)
	    TC(1)=1.0D0/DTAU(1)

	    TB(1)=-1.0_LDP-TC(1)
	    TB(1)=-1.0D0-TC(1)

	      TC(I)=1.0_LDP/DTAU(I)
	      TC(I)=1.0D0/DTAU(I)

	      TB(I)=-0.5_LDP*(DTAU(I-1)+DTAU(I))-TA(I)-TC(I)
	      TB(I)=-0.5D0*(DTAU(I-1)+DTAU(I))-TA(I)-TC(I)

	      XM(I)=-0.5_LDP*( SOURCE(I)+Q(I) )*( DTAU(I-1)+DTAU(I) )
	      XM(I)=-0.5D0*( SOURCE(I)+Q(I) )*( DTAU(I-1)+DTAU(I) )

	      TB(NI)=-TA(NI)+DTAU(NI-1)*0.5_LDP
	      TB(NI)=-TA(NI)+DTAU(NI-1)*0.5D0

	      XM(NI)=0.5_LDP*DTAU(NI-1)*(SOURCE(NI)+Q(NI))-QH(NI-1)
	      XM(NI)=0.5D0*DTAU(NI-1)*(SOURCE(NI)+Q(NI))-QH(NI-1)

	      TB(NI)=1.0_LDP-TA(NI)
	      TB(NI)=1.0D0-TA(NI)

	    TC(NI)=0.0_LDP
	    TC(NI)=0.0D0

	    IN_HBC(ML)=IN_HBC(ML)/(2.0_LDP*JNU(ND,ML)-IC*DNU)
	    IN_HBC(ML)=IN_HBC(ML)/(2.0D0*JNU(ND,ML)-IC*DNU)

	    IN_HBC(ML)=IN_HBC(ML)/(2.0_LDP*JNU(ND,ML)-IC)
	    IN_HBC(ML)=IN_HBC(ML)/(2.0D0*JNU(ND,ML)-IC)

	  HBLANK=0.0_LDP
	  HBLANK=0.0D0

	  SCALE=0.0_LDP
	  SCALE=0.0D0

  	  SCALE=1.0E+15_LDP*FL*(PF(1)-PF(NLF))/SCALE
  	  SCALE=1.0D+15*FL*(PF(1)-PF(NLF))/SCALE

	  T1=1.0E+15_LDP*FL
	  T1=1.0D+15*FL

	  T1=( (PF(1)-PF(NLF))+DNU )*FL*1.0E+15_LDP
	  T1=( (PF(1)-PF(NLF))+DNU )*FL*1.0D+15

	  EW=2.99794E-12_LDP*( HBLANK-HNU(1,1)*T1 )/HNU(1,1)/FL/FL
	  EW=2.99794D-12*( HBLANK-HNU(1,1)*T1 )/HNU(1,1)/FL/FL

	  CONT_INT=13.19868_LDP*HNU(1,1)*( (R(1)+R(2))**2 )/4.0_LDP
	  CONT_INT=13.19868D0*HNU(1,1)*( (R(1)+R(2))**2 )/4.0D0

	  EW=0.0_LDP
	  EW=0.0D0

	  CONT_INT=0.0_LDP
	  CONT_INT=0.0D0


fg_comp_tst.f

	TA(:)=0.0_LDP;      TB(:)=0.0_LDP;     TC(:)=0.0_LDP;  AV(:)=0.0_LDP;
	TA(:)=0.0D0;      TB(:)=0.0D0;     TC(:)=0.0D0;  AV(:)=0.0D0;

        CV(:)=0.0_LDP;      DTAU(:)=0.0_LDP;   Z(:)=0.0_LDP
        CV(:)=0.0D0;      DTAU(:)=0.0D0;   Z(:)=0.0D0

	TCHI(:)=0.0_LDP;    XM(:)=0.0_LDP;     SOURCE(:)=0.0_LDP
	TCHI(:)=0.0D0;    XM(:)=0.0D0;     SOURCE(:)=0.0D0

	U(:)=0.0_LDP;       VB(:)=0.0_LDP;     VC(:)=0.0_LDP
	U(:)=0.0D0;       VB(:)=0.0D0;     VC(:)=0.0D0

	GB(:)=0.0_LDP;      H(:)=0.0_LDP;      GAM(:)=0.0_LDP; GAMH(:)=0.0_LDP
	GB(:)=0.0D0;      H(:)=0.0D0;      GAM(:)=0.0D0; GAMH(:)=0.0D0

	Q(:)=0.0_LDP;       QH(:)=0.0_LDP;     JPREV(:)=0.0_LDP
	Q(:)=0.0D0;       QH(:)=0.0D0;     JPREV(:)=0.0D0

	AVCONT(:)=0.0_LDP;  CVCONT(:)=0.0_LDP; dCHIdR(:)=0.0_LDP
	AVCONT(:)=0.0D0;  CVCONT(:)=0.0D0; dCHIdR(:)=0.0D0

	DNU=3.33564E-06_LDP*V(1)*2.0_LDP
	DNU=3.33564D-06*V(1)*2.0D0

	JNU(:,:)=0.0_LDP
	JNU(:,:)=0.0D0

	HNU(:,:)=0.0_LDP
	HNU(:,:)=0.0D0

	KNU(:,:)=0.0_LDP
	KNU(:,:)=0.0D0

	NNU(:,:)=0.0_LDP
	NNU(:,:)=0.0D0

	HBC(:,:)=0.0_LDP
	HBC(:,:)=0.0D0

	NBC(:,:)=0.0_LDP
	NBC(:,:)=0.0D0

	  IN_HBC(ML)=0.0_LDP
	  IN_HBC(ML)=0.0D0

	     R_RAY(2)=R(1)-(R(2)-R(1))/3.0_LDP
	     R_RAY(2)=R(1)-(R(2)-R(1))/3.0D0

	     R_RAY(3)=R(1)-(R(2)-R(1))/1.5_LDP
	     R_RAY(3)=R(1)-(R(2)-R(1))/1.5D0

	     V_RAY(2)=V(1)-(V(2)-V(1))/3.0_LDP
	     V_RAY(2)=V(1)-(V(2)-V(1))/3.0D0

	     V_RAY(3)=V(1)-(V(2)-V(1))/1.5_LDP
	     V_RAY(3)=V(1)-(V(2)-V(1))/1.5D0

	     SIGMA_RAY(2)=SIGMA(1)-(SIGMA(2)-SIGMA(1))/3.0_LDP
	     SIGMA_RAY(2)=SIGMA(1)-(SIGMA(2)-SIGMA(1))/3.0D0

	     SIGMA_RAY(3)=SIGMA(1)-(SIGMA(2)-SIGMA(1))/1.5_LDP
	     SIGMA_RAY(3)=SIGMA(1)-(SIGMA(2)-SIGMA(1))/1.5D0

	     ETA_RAY(2)=ETA(1)-(ETA(2)-ETA(1))/3.0_LDP
	     ETA_RAY(2)=ETA(1)-(ETA(2)-ETA(1))/3.0D0

	     ETA_RAY(3)=ETA(1)-(ETA(2)-ETA(1))/1.5_LDP
	     ETA_RAY(3)=ETA(1)-(ETA(2)-ETA(1))/1.5D0

	     CHI_RAY(2)=CHI(1)-(CHI(2)-CHI(1))/3.0_LDP
	     CHI_RAY(2)=CHI(1)-(CHI(2)-CHI(1))/3.0D0

	     CHI_RAY(3)=CHI(1)-(CHI(2)-CHI(1))/1.5_LDP
	     CHI_RAY(3)=CHI(1)-(CHI(2)-CHI(1))/1.5D0

	     ETAL_RAY(2)=ETAL(1)-(ETAL(2)-ETAL(1))/3.0_LDP
	     ETAL_RAY(2)=ETAL(1)-(ETAL(2)-ETAL(1))/3.0D0

	     ETAL_RAY(3)=ETAL(1)-(ETAL(2)-ETAL(1))/1.5_LDP
	     ETAL_RAY(3)=ETAL(1)-(ETAL(2)-ETAL(1))/1.5D0

	     CHIL_RAY(2)=CHIL(1)-(CHIL(2)-CHIL(1))/3.0_LDP
	     CHIL_RAY(2)=CHIL(1)-(CHIL(2)-CHIL(1))/3.0D0

	     CHIL_RAY(3)=CHIL(1)-(CHIL(2)-CHIL(1))/1.5_LDP
	     CHIL_RAY(3)=CHIL(1)-(CHIL(2)-CHIL(1))/1.5D0

	  AV(1:NI)=0.0_LDP
	  AV(1:NI)=0.0D0

	  CV(1:NI)=0.0_LDP
	  CV(1:NI)=0.0D0

	      TOR=CHI(1)*R(1)*R(1)*(1.570796_LDP-ACOS(P(LS)/R(1)))/P(LS)
	      TOR=CHI(1)*R(1)*R(1)*(1.570796-ACOS(P(LS)/R(1)))/P(LS)

	    IBOUND=ETA(1)*(1.0_LDP-EXP(-TOR))/CHI(1)
	    IBOUND=ETA(1)*(1.0D0-EXP(-TOR))/CHI(1)

	    TOR=0.0_LDP
	    TOR=0.0D0

	    IBOUND=0.0_LDP
	    IBOUND=0.0D0

	      T1=0.0_LDP
	      T1=0.0D0

	1   *(1.0_LDP+Q(NI)*(1.0_LDP-TCHI(NI)/OLDCHI))
	1   *(1.0D0+Q(NI)*(1.0D0-TCHI(NI)/OLDCHI))

	      WERF_EXP=EXP( 1.0E-15_LDP*CHIL(1)/FL/GAM(1)*WERFC(ML) )
	      WERF_EXP=EXP( 1.0D-15*CHIL(1)/FL/GAM(1)*WERFC(ML) )

	        IMINOLD=0.0_LDP
	        IMINOLD=0.0D0

	      IMIN=ETAL(1)/CHIL(1)*(1.0_LDP-WERF_EXP)+IBOUND*WERF_EXP
	      IMIN=ETAL(1)/CHIL(1)*(1.0D0-WERF_EXP)+IBOUND*WERF_EXP

	      IMIN_dSL=(1.0_LDP-WERF_EXP)
	      IMIN_dSL=(1.0D0-WERF_EXP)

	      IMIN_dSL=0.0_LDP
	      IMIN_dSL=0.0D0

	      QH(I)=2.0_LDP*GAMH(I)*( CV(I)-CVCONT(I) )/(CHI(I)+CHI(I+1))
	      QH(I)=2.0D0*GAMH(I)*( CV(I)-CVCONT(I) )/(CHI(I)+CHI(I+1))

	1            (ETAL(1)/CHIL(1)-IBOUND)*(1.0_LDP-WERF_EXP)/CHI(1)
	1            (ETAL(1)/CHIL(1)-IBOUND)*(1.0D0-WERF_EXP)/CHI(1)

	    TA(1)=0.0_LDP
	    TA(1)=0.0D0

	    TC(1)=1._LDP/DTAU(1)
	    TC(1)=1./DTAU(1)

	    TB(1)=-1.0_LDP-TC(1)
	    TB(1)=-1.0D0-TC(1)

	      TC(I)=1.0_LDP/DTAU(I)
	      TC(I)=1.0D0/DTAU(I)

	      TB(I)=-0.5_LDP*(DTAU(I-1)+DTAU(I))-TA(I)-TC(I)
	      TB(I)=-0.5D0*(DTAU(I-1)+DTAU(I))-TA(I)-TC(I)

	      XM(I)=-0.5_LDP*( SOURCE(I)+Q(I) )*( DTAU(I-1)+DTAU(I) )
	      XM(I)=-0.5D0*( SOURCE(I)+Q(I) )*( DTAU(I-1)+DTAU(I) )

	      TB(NI)=-TA(NI)+DTAU(NI-1)*0.5_LDP
	      TB(NI)=-TA(NI)+DTAU(NI-1)*0.5D0

	      XM(NI)=0.5_LDP*DTAU(NI-1)*(SOURCE(NI)+Q(NI))-QH(NI-1)
	      XM(NI)=0.5D0*DTAU(NI-1)*(SOURCE(NI)+Q(NI))-QH(NI-1)

	  IBOUND=0.0_LDP
	  IBOUND=0.0D0

	  IF(THK_CONT)IBOUND=ETA(1)*(1.0_LDP-EXP(-CHI(1)*R(1)*1.570796_LDP ))/CHI(1)
	  IF(THK_CONT)IBOUND=ETA(1)*(1.0D0-EXP(-CHI(1)*R(1)*1.570796 ))/CHI(1)

	      WERF_EXP=EXP( 1.0E-15_LDP*CHIL(1)/FL/GAM(1)*WERFC(ML) )
	      WERF_EXP=EXP( 1.0D-15*CHIL(1)/FL/GAM(1)*WERFC(ML) )

	        IMINOLD=0.0_LDP
	        IMINOLD=0.0D0

	      IMIN=ETAL(1)/CHIL(1)*(1.0_LDP-WERF_EXP)+IBOUND*WERF_EXP
	      IMIN=ETAL(1)/CHIL(1)*(1.0D0-WERF_EXP)+IBOUND*WERF_EXP

	      IMIN_dSL=(1.0_LDP-WERF_EXP)
	      IMIN_dSL=(1.0D0-WERF_EXP)

	      IMIN_dSL=0.0_LDP
	      IMIN_dSL=0.0D0

	    IN_HBC(ML)=IN_HBC(ML)/(2.0_LDP*JNU(ND,ML)-IC*DNU)
	    IN_HBC(ML)=IN_HBC(ML)/(2.0D0*JNU(ND,ML)-IC*DNU)

	    IN_HBC(ML)=IN_HBC(ML)/(2.0_LDP*JNU(ND,ML)-IC)
	    IN_HBC(ML)=IN_HBC(ML)/(2.0D0*JNU(ND,ML)-IC)

	  HBLANK=0.0_LDP
	  HBLANK=0.0D0

	  SCALE=0.0_LDP
	  SCALE=0.0D0

  	  SCALE=1.0E+15_LDP*FL*(PF(1)-PF(NLF))/SCALE
  	  SCALE=1.0D+15*FL*(PF(1)-PF(NLF))/SCALE

	  T1=1.0E+15_LDP*FL
	  T1=1.0D+15*FL

	  T1=( (PF(1)-PF(NLF))+DNU )*FL*1.0E+15_LDP
	  T1=( (PF(1)-PF(NLF))+DNU )*FL*1.0D+15

	  EW=2.99794E-12_LDP*( HBLANK-HNU(1,1)*T1 )/HNU(1,1)/FL/FL
	  EW=2.99794D-12*( HBLANK-HNU(1,1)*T1 )/HNU(1,1)/FL/FL

	  CONT_INT=13.19868_LDP*HNU(1,1)*( (R(1)+R(2))**2 )/4.0_LDP
	  CONT_INT=13.19868D0*HNU(1,1)*( (R(1)+R(2))**2 )/4.0D0

	  EW=0.0_LDP
	  EW=0.0D0

	  CONT_INT=0.0_LDP
	  CONT_INT=0.0D0


fg_j_cmf_v10.f

	DATA VDOP_FRAC_SAV/-1001.0_LDP/ 	!Absurd value.
	DATA VDOP_FRAC_SAV/-1001.0D0/ 	!Absurd value.

	DATA PREVIOUS_FREQ/0.0_LDP/
	DATA PREVIOUS_FREQ/0.0D0/

	    IF(V(ND) .LT. 10.0_LDP .AND. R(1)/R(ND) .GE. 9.99_LDP)THEN
	    IF(V(ND) .LT. 10.0D0 .AND. R(1)/R(ND) .GE. 9.99D0)THEN

	      RMAX=10.0_LDP*R(1)		!Stellar wind
	      RMAX=10.0D0*R(1)		!Stellar wind

	    ELSE IF(V(ND) .GT. 10.0_LDP .OR. V(1) .GT. 2.0E+04_LDP)THEN
	    ELSE IF(V(ND) .GT. 10.0D0 .OR. V(1) .GT. 2.0D+04)THEN

	      RMAX=1.5_LDP*R(1)		!SN model
	      RMAX=1.5D0*R(1)		!SN model

	      RMAX=MIN(10.0_LDP,SQRT(R(1)/R(ND)))*R(1)
	      RMAX=MIN(10.0D0,SQRT(R(1)/R(ND)))*R(1)

	    R_EXT(2)=R_EXT(1)-0.1_LDP*(R_EXT(1)-R_EXT(4))
	    R_EXT(2)=R_EXT(1)-0.1*(R_EXT(1)-R_EXT(4))

	    R_EXT(3)=R_EXT(1)-0.4_LDP*(R_EXT(1)-R_EXT(4))
	    R_EXT(3)=R_EXT(1)-0.4*(R_EXT(1)-R_EXT(4))

	    BETA=(SIGMA(1)+1.0_LDP)*(R(1)/R(ND)-1.0_LDP)
	    BETA=(SIGMA(1)+1.0D0)*(R(1)/R(ND)-1.0D0)

	      V_EXT(I)=VINF*(1.0_LDP-R_EXT(ND_EXT)/R_EXT(I))**BETA
	      V_EXT(I)=VINF*(1.0D0-R_EXT(ND_EXT)/R_EXT(I))**BETA

	      SIGMA_EXT(I)=BETA/(R_EXT(I)/R_EXT(ND_EXT)-1.0_LDP)-1.0_LDP
	      SIGMA_EXT(I)=BETA/(R_EXT(I)/R_EXT(ND_EXT)-1.0D0)-1.0D0

	        Z_EXT(I)=0.0_LDP
	        Z_EXT(I)=0.0D0

	      IF(.NOT. THK .AND. NI_SMALL .EQ. 2)T1=MAX(2.01_LDP,T1)
	      IF(.NOT. THK .AND. NI_SMALL .EQ. 2)T1=MAX(2.01D0,T1)

	        Z_EXT(I)=0.0_LDP
	        Z_EXT(I)=0.0D0

	      IF(.NOT. THK .AND. NI_SMALL .EQ. 2)T1=MAX(2.01_LDP,T1)
	      IF(.NOT. THK .AND. NI_SMALL .EQ. 2)T1=MAX(2.01D0,T1)

	          T1=0.5_LDP*(R(I)+R(I+1))
	          T1=0.5D0*(R(I)+R(I+1))

	          T1=0.5_LDP*(R(I)+R(I+1))
	          T1=0.5D0*(R(I)+R(I+1))

	          IF(T1 .LE. 0.5_LDP*(R_RAY(K,LS)+R_RAY(K+1,LS)) .AND. T1 .GE. 0.5_LDP*(R_RAY(K+1,LS)+R_RAY(K+2,LS)) )THEN
	          IF(T1 .LE. 0.5D0*(R_RAY(K,LS)+R_RAY(K+1,LS)) .AND. T1 .GE. 0.5D0*(R_RAY(K+1,LS)+R_RAY(K+2,LS)) )THEN

	  FG_ERR_ON_FREQ(:)=0.0_LDP
	  FG_ERR_ON_FREQ(:)=0.0D0

	    AV_PREV(:,:)=0.0_LDP
	    AV_PREV(:,:)=0.0D0

	    CV_PREV(:,:)=0.0_LDP
	    CV_PREV(:,:)=0.0D0

	    I_P_PREV(:,:)=0.0_LDP
	    I_P_PREV(:,:)=0.0D0

	    I_M_PREV(:,:)=0.0_LDP
	    I_M_PREV(:,:)=0.0D0

	      MU_VAL(LS)=0.0_LDP
	      MU_VAL(LS)=0.0D0

	    IPLUS_P(LS)=0.0_LDP
	    IPLUS_P(LS)=0.0D0

	      T1=3.33564E-06_LDP*V_RAY(I)/R_RAY(I,LS)
	      T1=3.33564D-06*V_RAY(I)/R_RAY(I,LS)

	      GAM(I,LS)=T1*( 1.0_LDP+SIGMA_RAY(I)*(MU**2) )
	      GAM(I,LS)=T1*( 1.0D0+SIGMA_RAY(I)*(MU**2) )

	        T1=3.33564E-06_LDP*V_RAY(I)/R_RAY(I,LS)
	        T1=3.33564D-06*V_RAY(I)/R_RAY(I,LS)

	        GAMH(I,LS)=(V_RAY(I+1)+V_RAY(I))*3.33564E-06_LDP*
	        GAMH(I,LS)=(V_RAY(I+1)+V_RAY(I))*3.33564D-06*

	1                   (  1.0_LDP+0.5_LDP*(MU**2)*
	1                   (  1.0D0+0.5D0*(MU**2)*

	  HN_VAL=0.0_LDP
	  HN_VAL=0.0D0

	    IF(ESEC_POW .LT. 2._LDP)ESEC_POW=2
	    IF(ESEC_POW .LT. 2.)ESEC_POW=2

	    IF(ALPHA .LT. 2._LDP)ALPHA=2.0
	    IF(ALPHA .LT. 2.)ALPHA=2.0

	    IF(ESEC_POW .LT. 2._LDP)ESEC_POW=2
	    IF(ESEC_POW .LT. 2.)ESEC_POW=2

	  IF(ALPHA .LT. 3.5_LDP)ALPHA=3.5
	  IF(ALPHA .LT. 3.5)ALPHA=3.5

	    IF(ETA_EXT(I) .LE. 1.0E-280_LDP)ETA_EXT(I)=1.0E-280_LDP
	    IF(ETA_EXT(I) .LE. 1.0D-280)ETA_EXT(I)=1.0D-280

	  AV(:,:)=0.0_LDP
	  AV(:,:)=0.0D0

	  CV(:,:)=0.0_LDP
	  CV(:,:)=0.0D0

	        T2=(3.0_LDP*CHI_COEF(K,1)*T1+2.0_LDP*CHI_COEF(K,2))*T1+CHI_COEF(K,3)
	        T2=(3.0D0*CHI_COEF(K,1)*T1+2.0D0*CHI_COEF(K,2))*T1+CHI_COEF(K,3)

	    IBOUND(LS)=0.0_LDP
	    IBOUND(LS)=0.0D0

	        Q(I)=0.0_LDP
	        Q(I)=0.0D0

	        QH(I)=0.0_LDP
	        QH(I)=0.0D0

	        QH(I)=GAMH(I,LS)*2.0_LDP/((CHI_RAY(I)+CHI_RAY(I+1))*dLOG_NU)
	        QH(I)=GAMH(I,LS)*2.0D0/((CHI_RAY(I)+CHI_RAY(I+1))*dLOG_NU)

	      QH(NI)=0.0_LDP
	      QH(NI)=0.0D0

	      T1=0.0_LDP
	      T1=0.0D0

	1            *(1.0_LDP+T1*(1.0_LDP-CHI_RAY(NI)/OLDCHI(LS)))
	1            *(1.0D0+T1*(1.0D0-CHI_RAY(NI)/OLDCHI(LS)))

	          DTAU(I,LS)=0.5_LDP*(CHI_RAY(I)+CHI_RAY(I+1))*dZ
	          DTAU(I,LS)=0.5D0*(CHI_RAY(I)+CHI_RAY(I+1))*dZ

	          DTAU(I,LS)=0.5_LDP*dZ*( CHI_RAY(I)+CHI_RAY(I+1) +
	          DTAU(I,LS)=0.5D0*dZ*( CHI_RAY(I)+CHI_RAY(I+1) +

	1            dCHIdR_RAY(I)*Z(I,LS)/R_RAY(I,LS) )/6.0_LDP )
	1            dCHIdR_RAY(I)*Z(I,LS)/R_RAY(I,LS) )/6.0D0 )

	          DTAU(I,LS)=0.5_LDP*dZ*( CHI_RAY(I)+CHI_RAY(I+1) +
	          DTAU(I,LS)=0.5D0*dZ*( CHI_RAY(I)+CHI_RAY(I+1) +

	1            dCHIdR_RAY(I)*Z(I,LS)/R_RAY(I,LS) )/6.0_LDP )
	1            dCHIdR_RAY(I)*Z(I,LS)/R_RAY(I,LS) )/6.0D0 )

	      DIV(1)=1.0_LDP/(TC(1,LS)+TB(1,LS))
	      DIV(1)=1.0/(TC(1,LS)+TB(1,LS))

	        DIV(I)=1.0_LDP/(TA(I,LS)*TB(I-1,LS)+TB(I,LS)+TC(I,LS))
	        DIV(I)=1.0D0/(TA(I,LS)*TB(I-1,LS)+TB(I,LS)+TC(I,LS))

	      XM(1)=0.0_LDP
	      XM(1)=0.0D0

	        XM(I)=-0.5_LDP*SOURCE_RAY(I)*(DTAU(I-1,LS)+DTAU(I,LS))
	        XM(I)=-0.5D0*SOURCE_RAY(I)*(DTAU(I-1,LS)+DTAU(I,LS))

	        XM(NI)=0.5_LDP*DTAU(NI-1,LS)*SOURCE_RAY(NI)
	        XM(NI)=0.5*DTAU(NI-1,LS)*SOURCE_RAY(NI)

	      T1=1.0E-08_LDP*ABS(AV(K,LS))
	      T1=1.0D-08*ABS(AV(K,LS))

	        AV(I,LS)=MAX(0.01_LDP*ABS(AV(I,LS)),T1)
	        AV(I,LS)=MAX(0.01D0*ABS(AV(I,LS)),T1)

	      CV_BOUND(LS)=0.0_LDP
	      CV_BOUND(LS)=0.0D0

	      CV_BOUND(LS)=0.5_LDP*(CV(K+1,LS)+CV(K-1,LS))
	      CV_BOUND(LS)=0.5D0*(CV(K+1,LS)+CV(K-1,LS))

	      I_P(1,LS)=0.0_LDP
	      I_P(1,LS)=0.0D0

	      I_M(1,LS)=0.0_LDP
	      I_M(1,LS)=0.0D0

	        T2=(3.0_LDP*CHI_COEF(K,1)*T1+2.0_LDP*CHI_COEF(K,2))*T1+CHI_COEF(K,3)
	        T2=(3.0D0*CHI_COEF(K,1)*T1+2.0D0*CHI_COEF(K,2))*T1+CHI_COEF(K,3)

	      Q(1:NI)=0.0_LDP
	      Q(1:NI)=0.0D0

	          DTAU(I,LS)=0.5_LDP*(CHI_RAY(I)+CHI_RAY(I+1))*dZ
	          DTAU(I,LS)=0.5D0*(CHI_RAY(I)+CHI_RAY(I+1))*dZ

	          DTAU(I,LS)=0.5_LDP*dZ*( CHI_RAY(I)+CHI_RAY(I+1) +
	          DTAU(I,LS)=0.5D0*dZ*( CHI_RAY(I)+CHI_RAY(I+1) +

	1            dCHIdR_RAY(I)*Z(I,LS)/R_RAY(I,LS) )/6.0_LDP )
	1            dCHIdR_RAY(I)*Z(I,LS)/R_RAY(I,LS) )/6.0D0 )

	        EE(I)=0.0_LDP
	        EE(I)=0.0D0

	        IF(T1 .LT. 700.0_LDP)EE(I)=EXP(-T1)
	        IF(T1 .LT. 700.0D0)EE(I)=EXP(-T1)

	        IF(T1 .GT. 0.5_LDP)THEN
	        IF(T1 .GT. 0.5)THEN

	          E0(I)=1.0_LDP-EE(I)
	          E0(I)=1.0D0-EE(I)

	          E1(I)=1.0_LDP-E0(I)/T1
	          E1(I)=1.0D0-E0(I)/T1

	          E2(I)=1.0_LDP-2.0_LDP*E1(I)/T1
	          E2(I)=1.0D0-2.0D0*E1(I)/T1

	          E3(I)=1.0_LDP-3.0_LDP*E2(I)/T1
	          E3(I)=1.0D0-3.0D0*E2(I)/T1

	        ELSE IF(T1 .GT. 0.1_LDP)THEN
	        ELSE IF(T1 .GT. 0.1)THEN

	          E3(I)=0.25_LDP*T1*( 1.0_LDP-0.20_LDP*T1*
	          E3(I)=0.25D0*T1*( 1.0D0-0.20*T1*

	1               (1.0_LDP-T1/6.0_LDP*(1.0_LDP-T1/7.0_LDP*
	1               (1.0D0-T1/6.0D0*(1.0D0-T1/7.0D0*

	1               (1.0_LDP-T1/8.0_LDP*(1.0_LDP-T1/9.0_LDP*
	1               (1.0D0-T1/8.0D0*(1.0D0-T1/9.0D0*

	1               (1.0_LDP-T1/10.0_LDP*(1.0_LDP-T1/11.0_LDP*
	1               (1.0D0-T1/10.0D0*(1.0D0-T1/11.0D0*

	1               (1.0_LDP-T1/12.0_LDP*(1.0_LDP-T1/13.0_LDP)))))))) )
	1               (1.0D0-T1/12.0D0*(1.0D0-T1/13.0D0)))))))) )

	          E2(I)=T1*( 1.0_LDP-E3(I) )/3.0_LDP
	          E2(I)=T1*( 1.0D0-E3(I) )/3.0D0

	          E1(I)=T1*( 1.0_LDP-E2(I) )/2.0_LDP
	          E1(I)=T1*( 1.0D0-E2(I) )/2.0D0

	          E0(I)=T1*( 1.0_LDP-E1(I) )
	          E0(I)=T1*( 1.0D0-E1(I) )

	          E3(I)=0.25_LDP*T1*( 1.0_LDP-0.20_LDP*T1*
	          E3(I)=0.25D0*T1*( 1.0D0-0.20*T1*

	1               (1.0_LDP-T1/6.0_LDP*(1.0_LDP-T1/7.0_LDP*
	1               (1.0D0-T1/6.0D0*(1.0D0-T1/7.0D0*

	1               (1.0_LDP-T1/8.0_LDP*(1.0_LDP-T1/9.0_LDP) ))))
	1               (1.0D0-T1/8.0D0*(1.0D0-T1/9.0D0) ))))

	          E2(I)=T1*( 1.0_LDP-E3(I) )/3.0_LDP
	          E2(I)=T1*( 1.0D0-E3(I) )/3.0D0

	          E1(I)=T1*( 1.0_LDP-E2(I) )/2.0_LDP
	          E1(I)=T1*( 1.0D0-E2(I) )/2.0d0

	          E0(I)=T1*( 1.0_LDP-E1(I) )
	          E0(I)=T1*( 1.0D0-E1(I) )

	        A1(I,LS)=E0(I)-3.0_LDP*E2(I)+2.0_LDP*E3(I)
	        A1(I,LS)=E0(I)-3.0D0*E2(I)+2.0D0*E3(I)

	        A2(I,LS)=3.0_LDP*E2(I)-2.0_LDP*E3(I)
	        A2(I,LS)=3.0D0*E2(I)-2.0D0*E3(I)

	        A3(I,LS)=DTAU(I,LS)*(E1(I)-2.0_LDP*E2(I)+E3(I))
	        A3(I,LS)=DTAU(I,LS)*(E1(I)-2.0D0*E2(I)+E3(I))

	1                      MIN(ABS(S(1)),0.5_LDP*ABS(dS(1)))
	1                      MIN(ABS(S(1)),0.5*ABS(dS(1)))

	1               MIN(ABS(S(I-1)),ABS(S(I)),0.5_LDP*ABS(dS(I)))
	1               MIN(ABS(S(I-1)),ABS(S(I)),0.5*ABS(dS(I)))

	1               MIN(ABS(S(NI-1)),0.5_LDP*ABS(dS(NI)))
	1               MIN(ABS(S(NI-1)),0.5*ABS(dS(NI)))

            I_M(1,LS)=0.0_LDP
            I_M(1,LS)=0.0D0

	1                      MIN(ABS(S(1)),0.5_LDP*ABS(dS(1)))
	1                      MIN(ABS(S(1)),0.5*ABS(dS(1)))

	1          MIN(ABS(S(I-1)),ABS(S(I)),0.5_LDP*ABS(dS(I)))
	1          MIN(ABS(S(I-1)),ABS(S(I)),0.5*ABS(dS(I)))

	1            MIN(ABS(S(NI-1)),0.5_LDP*ABS(dS(NI)))
	1            MIN(ABS(S(NI-1)),0.5*ABS(dS(NI)))

	    CV_BOUND(LS)=0.5_LDP*(I_P(K,LS)-I_M(K,LS))
	    CV_BOUND(LS)=0.5D0*(I_P(K,LS)-I_M(K,LS))

	      AV(I,LS)=0.5_LDP*( I_P(I,LS)+I_M(I,LS) )
	      AV(I,LS)=0.5D0*( I_P(I,LS)+I_M(I,LS) )

	      CV(I,LS)= 0.5_LDP*( I_P(I,LS)-I_M(I,LS) )
	      CV(I,LS)= 0.5D0*( I_P(I,LS)-I_M(I,LS) )

	HBC=0.0_LDP			!H/J at model outer boundary.
	HBC=0.0D0			!H/J at model outer boundary.

	NBC=0.0_LDP			!N/J at model outer boundary.
	NBC=0.0D0			!N/J at model outer boundary.

	IN_HBC=0.0_LDP
	IN_HBC=0.0D0

	JNU(:)=0.0_LDP			!1:ND
	JNU(:)=0.0D0			!1:ND

	HNU(:)=0.0_LDP
	HNU(:)=0.0D0

	KNU(:)=0.0_LDP
	KNU(:)=0.0D0

	NNU(:)=0.0_LDP
	NNU(:)=0.0D0

	RSQN_ON_RSQJ(:)=0.0_LDP
	RSQN_ON_RSQJ(:)=0.0D0

	      T2=0.5_LDP*(R(I)+R(I+1))
	      T2=0.5D0*(R(I)+R(I+1))

	      HNU(I)=HNU(I)+HQW(I,LS)*((1.0_LDP-T1)*CV(K,LS)+T1*CV(K+1,LS))
	      HNU(I)=HNU(I)+HQW(I,LS)*((1.0D0-T1)*CV(K,LS)+T1*CV(K+1,LS))

	      NNU(I)=NNU(I)+NQW(I,LS)*((1.0_LDP-T1)*CV(K,LS)+T1*CV(K+1,LS))
	      NNU(I)=NNU(I)+NQW(I,LS)*((1.0D0-T1)*CV(K,LS)+T1*CV(K+1,LS))

	      T2=0.5_LDP*(R(I)+R(I+1))
	      T2=0.5D0*(R(I)+R(I+1))

	      T1=( 2.0_LDP*T2-(R_RAY(K,LS)+R_RAY(K+1,LS)) )/(R_RAY(K+2,LS)-R_RAY(K,LS))
	      T1=( 2.0*T2-(R_RAY(K,LS)+R_RAY(K+1,LS)) )/(R_RAY(K+2,LS)-R_RAY(K,LS))

	      HNU(I)=HNU(I)+HQW(I,LS)*((1.0_LDP-T1)*CV(K,LS)+T1*CV(K+1,LS))
	      HNU(I)=HNU(I)+HQW(I,LS)*((1.0D0-T1)*CV(K,LS)+T1*CV(K+1,LS))

	      NNU(I)=NNU(I)+NQW(I,LS)*((1.0_LDP-T1)*CV(K,LS)+T1*CV(K+1,LS))
	      NNU(I)=NNU(I)+NQW(I,LS)*((1.0D0-T1)*CV(K,LS)+T1*CV(K+1,LS))

	  IPLUS_P(LS)=2.0_LDP*CV_BOUND(LS)
	  IPLUS_P(LS)=2.0D0*CV_BOUND(LS)

	IN_HBC=IN_HBC/(2.0_LDP*JNU(ND)-IC)
	IN_HBC=IN_HBC/(2.0D0*JNU(ND)-IC)

	    ALPHA=0.25_LDP*(R(I)+R(I+1))*(R(I)+R(I+1))
	    ALPHA=0.25D0*(R(I)+R(I+1))*(R(I)+R(I+1))

	    NNU(I)=0.0_LDP
	    NNU(I)=0.0D0

	  RSQN_ON_RSQJ(1:ND-1)=0.0_LDP
	  RSQN_ON_RSQJ(1:ND-1)=0.0D0

	      T1=100.0_LDP
	      T1=100.0D0

	    IF(T1 .GT. 1.1_LDP .OR. T1 .LT. 0.05_LDP)THEN
	    IF(T1 .GT. 1.1 .OR. T1 .LT. 0.05)THEN

	      ALPHA=0.25_LDP*(R(I)+R(I+1))*(R(I)+R(I+1))
	      ALPHA=0.25D0*(R(I)+R(I+1))*(R(I)+R(I+1))

	      NNU(I)=0.0_LDP
	      NNU(I)=0.0D0

	      IF(NNU(I) .GT. 1.0_LDP)THEN
	      IF(NNU(I) .GT. 1.0D0)THEN

	        NNU(I)=1.0_LDP
	        NNU(I)=1.0D0

	      ELSE IF( NNU(I) .LT. 0.01_LDP) THEN
	      ELSE IF( NNU(I) .LT. 0.01) THEN

	        NNU(I)=0.01_LDP
	        NNU(I)=0.01D0

	      NNU(I)=0.0_LDP		!Later replaced by average.
	      NNU(I)=0.0D0		!Later replaced by average.

	  T1=0.0_LDP
	  T1=0.0D0


fg_j_cmf_v7.f

	  R_INS(:,:)=0.0_LDP
	  R_INS(:,:)=0.0D0

	    R_INS(I,1)= R(I+1)+DEL_R/1.5_LDP
	    R_INS(I,1)= R(I+1)+DEL_R/1.5D0

	    R_INS(I,2)= R(I+1)+DEL_R/3.0_LDP
	    R_INS(I,2)= R(I+1)+DEL_R/3.0D0

	    R_INS(I,3)= R(I+1)+0.16_LDP*DEL_R		!4/25
	    R_INS(I,3)= R(I+1)+0.16D0*DEL_R		!4/25

	    R_INS(I,4)= R(I+1)+0.04_LDP*DEL_R		!1/25
	    R_INS(I,4)= R(I+1)+0.04D0*DEL_R		!1/25

	  FG_ERR_ON_FREQ(:)=0.0_LDP
	  FG_ERR_ON_FREQ(:)=0.0D0

	  AV_PREV(:,:)=0.0_LDP
	  AV_PREV(:,:)=0.0D0

	  CV_PREV(:,:)=0.0_LDP
	  CV_PREV(:,:)=0.0D0

	    IPLUS_P(LS)=0.0_LDP
	    IPLUS_P(LS)=0.0D0

	    RMAX=10.0_LDP*R(1)
	    RMAX=10.0D0*R(1)

	    R_EXT(2)=R_EXT(1)-0.1_LDP*(R_EXT(1)-R_EXT(4))
	    R_EXT(2)=R_EXT(1)-0.1*(R_EXT(1)-R_EXT(4))

	    R_EXT(3)=R_EXT(1)-0.4_LDP*(R_EXT(1)-R_EXT(4))
	    R_EXT(3)=R_EXT(1)-0.4*(R_EXT(1)-R_EXT(4))

	    BETA=(SIGMA(1)+1.0_LDP)*(R(1)/R(ND)-1.0_LDP)
	    BETA=(SIGMA(1)+1.0D0)*(R(1)/R(ND)-1.0D0)

	      SIGMA_EXT(I)=BETA/(R_EXT(I)/R_EXT(ND_EXT)-1.0_LDP)-1.0_LDP
	      SIGMA_EXT(I)=BETA/(R_EXT(I)/R_EXT(ND_EXT)-1.0D0)-1.0D0

	      GAM(I,LS)=3.33564E-06_LDP*V_RAY(I)/R_RAY(I,LS)*
	      GAM(I,LS)=3.33564D-06*V_RAY(I)/R_RAY(I,LS)*

	1                   (  1.0_LDP+SIGMA_RAY(I)*(MU**2)  )
	1                   (  1.0D0+SIGMA_RAY(I)*(MU**2)  )

	      GAMH(I,LS)=(V_RAY(I+1)+V_RAY(I))*3.33564E-06_LDP*
	      GAMH(I,LS)=(V_RAY(I+1)+V_RAY(I))*3.33564D-06*

	1                   (  1.0_LDP+0.5_LDP*(MU**2)*
	1                   (  1.0D0+0.5D0*(MU**2)*

	    GAM(NI,LS)=3.33564E-06_LDP*V_RAY(NI)*
	    GAM(NI,LS)=3.33564D-06*V_RAY(NI)*

	1              ( 1.0_LDP+SIGMA_RAY(NI)*(MU**2) )/R_RAY(NI,LS)
	1              ( 1.0D0+SIGMA_RAY(NI)*(MU**2) )/R_RAY(NI,LS)

	JNU(:)=0.0_LDP			!1:ND
	JNU(:)=0.0D0			!1:ND

	HNU(:)=0.0_LDP
	HNU(:)=0.0D0

	KNU(:)=0.0_LDP
	KNU(:)=0.0D0

	NNU(:)=0.0_LDP
	NNU(:)=0.0D0

	RSQN_ON_RSQJ(:)=0.0_LDP
	RSQN_ON_RSQJ(:)=0.0D0

	    IF(ESEC_POW .LT. 2._LDP)ESEC_POW=2
	    IF(ESEC_POW .LT. 2.)ESEC_POW=2

	    IF(ALPHA .LT. 2._LDP)ALPHA=2.0
	    IF(ALPHA .LT. 2.)ALPHA=2.0

	    IF(ESEC_POW .LT. 2._LDP)ESEC_POW=2
	    IF(ESEC_POW .LT. 2.)ESEC_POW=2

	  IF(ALPHA .LT. 3.5_LDP)ALPHA=3.5
	  IF(ALPHA .LT. 3.5)ALPHA=3.5

	  dCHIdR(:)=0.0_LDP
	  dCHIdR(:)=0.0D0

	  dCHIdR_INS(:,:)=0.0_LDP
	  dCHIdR_INS(:,:)=0.0D0

	HBC=0.0_LDP			!H/J at model outer boundary.
	HBC=0.0D0			!H/J at model outer boundary.

	NBC=0.0_LDP			!N/J at model outer boundary.
	NBC=0.0D0			!N/J at model outer boundary.

	IN_HBC=0.0_LDP
	IN_HBC=0.0D0

	AV(:,:)=0.0_LDP
	AV(:,:)=0.0D0

	CV(:,:)=0.0_LDP
	CV(:,:)=0.0D0

	  IBOUND=0.0_LDP
	  IBOUND=0.0D0

	      Q(I)=0.0_LDP
	      Q(I)=0.0D0

	      QH(I)=0.0_LDP
	      QH(I)=0.0D0

	      QH(I)=GAMH(I,LS)*2.0_LDP/((CHI_RAY(I)+CHI_RAY(I+1))*dLOG_NU)
	      QH(I)=GAMH(I,LS)*2.0D0/((CHI_RAY(I)+CHI_RAY(I+1))*dLOG_NU)

	    QH(NI)=0.0_LDP
	    QH(NI)=0.0D0

	1   *(1.0_LDP+Q(NI)*(1.0_LDP-CHI_RAY(NI)/OLDCHI(LS)))
	1   *(1.0D0+Q(NI)*(1.0D0-CHI_RAY(NI)/OLDCHI(LS)))

	      DTAU(I)=0.5_LDP*(CHI_RAY(I)+CHI_RAY(I+1))*(Z(I,LS)-Z(I+1,LS))
	      DTAU(I)=0.5D0*(CHI_RAY(I)+CHI_RAY(I+1))*(Z(I,LS)-Z(I+1,LS))

	        DTAU(I)=0.5_LDP*dZ*(CHI_RAY(I)+CHI_RAY(I+1))
	        DTAU(I)=0.5D0*dZ*(CHI_RAY(I)+CHI_RAY(I+1))

	1              dCHIdR_RAY(I)*Z(I,LS)/R_RAY(I,LS) )/12.0_LDP
	1              dCHIdR_RAY(I)*Z(I,LS)/R_RAY(I,LS) )/12.0D0

                T1=SIGN(  MIN( ABS(0.8_LDP*DTAU(I)),ABS(T1) ),T1  )
                T1=SIGN(  MIN( ABS(0.8D0*DTAU(I)),ABS(T1) ),T1  )

	  DIV(1)=1.0_LDP/(TC(1,LS)+TB(1,LS))
	  DIV(1)=1.0/(TC(1,LS)+TB(1,LS))

	    DIV(I)=1.0_LDP/(TA(I,LS)*TB(I-1,LS)+TB(I,LS)+TC(I,LS))
	    DIV(I)=1.0D0/(TA(I,LS)*TB(I-1,LS)+TB(I,LS)+TC(I,LS))

	      T1=1.0E-06_LDP*ABS(AV(K,LS))
	      T1=1.0D-06*ABS(AV(K,LS))

	        AV(I,LS)=MAX(0.1_LDP*ABS(AV(I,LS)),T1)
	        AV(I,LS)=MAX(0.1D0*ABS(AV(I,LS)),T1)

	      CV_BOUND=0.0_LDP
	      CV_BOUND=0.0D0

	      CV_BOUND=0.5_LDP*(CV(ND_ADD+1,LS)+CV(ND_ADD,LS))
	      CV_BOUND=0.5D0*(CV(ND_ADD+1,LS)+CV(ND_ADD,LS))

	  IPLUS_P(LS)=2.0_LDP*CV_BOUND          !To compute observed flux
	  IPLUS_P(LS)=2.0D0*CV_BOUND          !To compute observed flux

	IN_HBC=IN_HBC/(2.0_LDP*JNU(ND)-IC)
	IN_HBC=IN_HBC/(2.0D0*JNU(ND)-IC)

	    ALPHA=0.25_LDP*(R(I)+R(I+1))*(R(I)+R(I+1))
	    ALPHA=0.25D0*(R(I)+R(I+1))*(R(I)+R(I+1))

	    NNU(I)=0.0_LDP
	    NNU(I)=0.0D0

	      T1=100.0_LDP
	      T1=100.0D0

	    IF(T1 .GT. 1.1_LDP .OR. T1 .LT. 0.05_LDP)THEN
	    IF(T1 .GT. 1.1 .OR. T1 .LT. 0.05)THEN

	      ALPHA=0.25_LDP*(R(I)+R(I+1))*(R(I)+R(I+1))
	      ALPHA=0.25D0*(R(I)+R(I+1))*(R(I)+R(I+1))

	      NNU(I)=0.0_LDP
	      NNU(I)=0.0D0

	      NNU(I)=0.0_LDP		!Later replaced by average.
	      NNU(I)=0.0D0		!Later replaced by average.

	    IF(NNU(I) .GT. 1.10_LDP)THEN
	    IF(NNU(I) .GT. 1.10)THEN

	    ELSE IF( NNU(I) .LT. 0.05_LDP) THEN
	    ELSE IF( NNU(I) .LT. 0.05) THEN

	    IF(NNU(I) .GT. 1.1_LDP .OR. NNU(I) .LT. 0.05_LDP)THEN
	    IF(NNU(I) .GT. 1.1 .OR. NNU(I) .LT. 0.05)THEN

	      DO WHILE( ( (NNU(I+J) .GT. 1.0_LDP) .OR. (NNU(I+J) .LT. 0.05_LDP) )
	      DO WHILE( ( (NNU(I+J) .GT. 1.0) .OR. (NNU(I+J) .LT. 0.05) )

	        NNU(K)=NNU(I-1)+(K-I+1.0_LDP)/(J+1.0_LDP)*(NNU(J)-NNU(I-1))
	        NNU(K)=NNU(I-1)+(K-I+1.0D0)/(J+1.0D0)*(NNU(J)-NNU(I-1))


fg_j_cmf_v9.f

	DATA PREVIOUS_FREQ/0.0_LDP/
	DATA PREVIOUS_FREQ/0.0D0/

	    R_INS(:,:)=0.0_LDP
	    R_INS(:,:)=0.0D0

	      R_INS(I,1)= R(I+1)+DEL_R/1.5_LDP
	      R_INS(I,1)= R(I+1)+DEL_R/1.5D0

	      R_INS(I,2)= R(I+1)+DEL_R/3.0_LDP
	      R_INS(I,2)= R(I+1)+DEL_R/3.0D0

	      R_INS(I,3)= R(I+1)+0.16_LDP*DEL_R		!4/25
	      R_INS(I,3)= R(I+1)+0.16D0*DEL_R		!4/25

	      R_INS(I,4)= R(I+1)+0.04_LDP*DEL_R		!1/25
	      R_INS(I,4)= R(I+1)+0.04D0*DEL_R		!1/25

	  FG_ERR_ON_FREQ(:)=0.0_LDP
	  FG_ERR_ON_FREQ(:)=0.0D0

	    AV_PREV(:,:)=0.0_LDP
	    AV_PREV(:,:)=0.0D0

	    CV_PREV(:,:)=0.0_LDP
	    CV_PREV(:,:)=0.0D0

	    I_P_PREV(:,:)=0.0_LDP
	    I_P_PREV(:,:)=0.0D0

	    I_M_PREV(:,:)=0.0_LDP
	    I_M_PREV(:,:)=0.0D0

	    IPLUS_P(LS)=0.0_LDP
	    IPLUS_P(LS)=0.0D0

	    RMAX=10.0_LDP*R(1)
	    RMAX=10.0D0*R(1)

	    R_EXT(2)=R_EXT(1)-0.1_LDP*(R_EXT(1)-R_EXT(4))
	    R_EXT(2)=R_EXT(1)-0.1*(R_EXT(1)-R_EXT(4))

	    R_EXT(3)=R_EXT(1)-0.4_LDP*(R_EXT(1)-R_EXT(4))
	    R_EXT(3)=R_EXT(1)-0.4*(R_EXT(1)-R_EXT(4))

	    BETA=(SIGMA(1)+1.0_LDP)*(R(1)/R(ND)-1.0_LDP)
	    BETA=(SIGMA(1)+1.0D0)*(R(1)/R(ND)-1.0D0)

	      SIGMA_EXT(I)=BETA/(R_EXT(I)/R_EXT(ND_EXT)-1.0_LDP)-1.0_LDP
	      SIGMA_EXT(I)=BETA/(R_EXT(I)/R_EXT(ND_EXT)-1.0D0)-1.0D0

	      T1=3.33564E-06_LDP*V_RAY(I)/R_RAY(I,LS)
	      T1=3.33564D-06*V_RAY(I)/R_RAY(I,LS)

	      GAM(I,LS)=T1*( 1.0_LDP+SIGMA_RAY(I)*(MU**2) )
	      GAM(I,LS)=T1*( 1.0D0+SIGMA_RAY(I)*(MU**2) )

	        T1=3.33564E-06_LDP*V_RAY(I)/R_RAY(I,LS)
	        T1=3.33564D-06*V_RAY(I)/R_RAY(I,LS)

	        GAMH(I,LS)=(V_RAY(I+1)+V_RAY(I))*3.33564E-06_LDP*
	        GAMH(I,LS)=(V_RAY(I+1)+V_RAY(I))*3.33564D-06*

	1                   (  1.0_LDP+0.5_LDP*(MU**2)*
	1                   (  1.0D0+0.5D0*(MU**2)*

	    IF(ESEC_POW .LT. 2._LDP)ESEC_POW=2
	    IF(ESEC_POW .LT. 2.)ESEC_POW=2

	    IF(ALPHA .LT. 2._LDP)ALPHA=2.0
	    IF(ALPHA .LT. 2.)ALPHA=2.0

	    IF(ESEC_POW .LT. 2._LDP)ESEC_POW=2
	    IF(ESEC_POW .LT. 2.)ESEC_POW=2

	  IF(ALPHA .LT. 3.5_LDP)ALPHA=3.5
	  IF(ALPHA .LT. 3.5)ALPHA=3.5

	    dCHIdR(:)=0.0_LDP
	    dCHIdR(:)=0.0D0

	    dCHIdR_INS(:,:)=0.0_LDP
	    dCHIdR_INS(:,:)=0.0D0

	  AV(:,:)=0.0_LDP
	  AV(:,:)=0.0D0

	  CV(:,:)=0.0_LDP
	  CV(:,:)=0.0D0

	    IBOUND(LS)=0.0_LDP
	    IBOUND(LS)=0.0D0

	        Q(I)=0.0_LDP
	        Q(I)=0.0D0

	        QH(I)=0.0_LDP
	        QH(I)=0.0D0

	        QH(I)=GAMH(I,LS)*2.0_LDP/((CHI_RAY(I)+CHI_RAY(I+1))*dLOG_NU)
	        QH(I)=GAMH(I,LS)*2.0D0/((CHI_RAY(I)+CHI_RAY(I+1))*dLOG_NU)

	      QH(NI)=0.0_LDP
	      QH(NI)=0.0D0

	      T1=0.0_LDP
	      T1=0.0D0

	1            *(1.0_LDP+T1*(1.0_LDP-CHI_RAY(NI)/OLDCHI(LS)))
	1            *(1.0D0+T1*(1.0D0-CHI_RAY(NI)/OLDCHI(LS)))

	          DTAU(I,LS)=0.5_LDP*(CHI_RAY(I)+CHI_RAY(I+1))*dZ
	          DTAU(I,LS)=0.5D0*(CHI_RAY(I)+CHI_RAY(I+1))*dZ

	          DTAU(I,LS)=0.5_LDP*dZ*( CHI_RAY(I)+CHI_RAY(I+1) +
	          DTAU(I,LS)=0.5D0*dZ*( CHI_RAY(I)+CHI_RAY(I+1) +

	1            dCHIdR_RAY(I)*Z(I,LS)/R_RAY(I,LS) )/6.0_LDP )
	1            dCHIdR_RAY(I)*Z(I,LS)/R_RAY(I,LS) )/6.0D0 )

	          DTAU(I,LS)=0.5_LDP*dZ*( CHI_RAY(I)+CHI_RAY(I+1) +
	          DTAU(I,LS)=0.5D0*dZ*( CHI_RAY(I)+CHI_RAY(I+1) +

	1            dCHIdR_RAY(I)*Z(I,LS)/R_RAY(I,LS) )/6.0_LDP )
	1            dCHIdR_RAY(I)*Z(I,LS)/R_RAY(I,LS) )/6.0D0 )

	      DIV(1)=1.0_LDP/(TC(1,LS)+TB(1,LS))
	      DIV(1)=1.0/(TC(1,LS)+TB(1,LS))

	        DIV(I)=1.0_LDP/(TA(I,LS)*TB(I-1,LS)+TB(I,LS)+TC(I,LS))
	        DIV(I)=1.0D0/(TA(I,LS)*TB(I-1,LS)+TB(I,LS)+TC(I,LS))

	      XM(1)=0.0_LDP
	      XM(1)=0.0D0

	        XM(I)=-0.5_LDP*SOURCE_RAY(I)*(DTAU(I-1,LS)+DTAU(I,LS))
	        XM(I)=-0.5D0*SOURCE_RAY(I)*(DTAU(I-1,LS)+DTAU(I,LS))

	        XM(NI)=0.5_LDP*DTAU(NI-1,LS)*SOURCE_RAY(NI)
	        XM(NI)=0.5*DTAU(NI-1,LS)*SOURCE_RAY(NI)

	      T1=1.0E-08_LDP*ABS(AV(K,LS))
	      T1=1.0D-08*ABS(AV(K,LS))

	        AV(I,LS)=MAX(0.01_LDP*ABS(AV(I,LS)),T1)
	        AV(I,LS)=MAX(0.01D0*ABS(AV(I,LS)),T1)

	      CV_BOUND(LS)=0.0_LDP
	      CV_BOUND(LS)=0.0D0

	      CV_BOUND(LS)=0.5_LDP*(CV(ND_ADD+1,LS)+CV(ND_ADD,LS))
	      CV_BOUND(LS)=0.5D0*(CV(ND_ADD+1,LS)+CV(ND_ADD,LS))

	      Q(1:NI)=0.0_LDP
	      Q(1:NI)=0.0D0

	          DTAU(I,LS)=0.5_LDP*(CHI_RAY(I)+CHI_RAY(I+1))*dZ
	          DTAU(I,LS)=0.5D0*(CHI_RAY(I)+CHI_RAY(I+1))*dZ

	          DTAU(I,LS)=0.5_LDP*dZ*( CHI_RAY(I)+CHI_RAY(I+1) +
	          DTAU(I,LS)=0.5D0*dZ*( CHI_RAY(I)+CHI_RAY(I+1) +

	1            dCHIdR_RAY(I)*Z(I,LS)/R_RAY(I,LS) )/6.0_LDP )
	1            dCHIdR_RAY(I)*Z(I,LS)/R_RAY(I,LS) )/6.0D0 )

	        IF(T1 .GT. 0.5_LDP)THEN
	        IF(T1 .GT. 0.5)THEN

	          E0(I)=1.0_LDP-EE(I)
	          E0(I)=1.0D0-EE(I)

	          E1(I)=1.0_LDP-E0(I)/T1
	          E1(I)=1.0D0-E0(I)/T1

	          E2(I)=1.0_LDP-2.0_LDP*E1(I)/T1
	          E2(I)=1.0D0-2.0D0*E1(I)/T1

	          E3(I)=1.0_LDP-3.0_LDP*E2(I)/T1
	          E3(I)=1.0D0-3.0D0*E2(I)/T1

	        ELSE IF(T1 .GT. 0.1_LDP)THEN
	        ELSE IF(T1 .GT. 0.1)THEN

	          E3(I)=0.25_LDP*T1*( 1.0_LDP-0.20_LDP*T1*
	          E3(I)=0.25D0*T1*( 1.0D0-0.20*T1*

	1               (1.0_LDP-T1/6.0_LDP*(1.0_LDP-T1/7.0_LDP*
	1               (1.0D0-T1/6.0D0*(1.0D0-T1/7.0D0*

	1               (1.0_LDP-T1/8.0_LDP*(1.0_LDP-T1/9.0_LDP*
	1               (1.0D0-T1/8.0D0*(1.0D0-T1/9.0D0*

	1               (1.0_LDP-T1/10.0_LDP*(1.0_LDP-T1/11.0_LDP*
	1               (1.0D0-T1/10.0D0*(1.0D0-T1/11.0D0*

	1               (1.0_LDP-T1/12.0_LDP*(1.0_LDP-T1/13.0_LDP)))))))) )
	1               (1.0D0-T1/12.0D0*(1.0D0-T1/13.0D0)))))))) )

	          E2(I)=T1*( 1.0_LDP-E3(I) )/3.0_LDP
	          E2(I)=T1*( 1.0D0-E3(I) )/3.0D0

	          E1(I)=T1*( 1.0_LDP-E2(I) )/2.0_LDP
	          E1(I)=T1*( 1.0D0-E2(I) )/2.0D0

	          E0(I)=T1*( 1.0_LDP-E1(I) )
	          E0(I)=T1*( 1.0D0-E1(I) )

	          E3(I)=0.25_LDP*T1*( 1.0_LDP-0.20_LDP*T1*
	          E3(I)=0.25D0*T1*( 1.0D0-0.20*T1*

	1               (1.0_LDP-T1/6.0_LDP*(1.0_LDP-T1/7.0_LDP*
	1               (1.0D0-T1/6.0D0*(1.0D0-T1/7.0D0*

	1               (1.0_LDP-T1/8.0_LDP*(1.0_LDP-T1/9.0_LDP) ))))
	1               (1.0D0-T1/8.0D0*(1.0D0-T1/9.0D0) ))))

	          E2(I)=T1*( 1.0_LDP-E3(I) )/3.0_LDP
	          E2(I)=T1*( 1.0D0-E3(I) )/3.0D0

	          E1(I)=T1*( 1.0_LDP-E2(I) )/2.0_LDP
	          E1(I)=T1*( 1.0D0-E2(I) )/2.0d0

	          E0(I)=T1*( 1.0_LDP-E1(I) )
	          E0(I)=T1*( 1.0D0-E1(I) )

	        A1(I,LS)=E0(I)-3.0_LDP*E2(I)+2.0_LDP*E3(I)
	        A1(I,LS)=E0(I)-3.0D0*E2(I)+2.0D0*E3(I)

	        A2(I,LS)=3.0_LDP*E2(I)-2.0_LDP*E3(I)
	        A2(I,LS)=3.0D0*E2(I)-2.0D0*E3(I)

	        A3(I,LS)=DTAU(I,LS)*(E1(I)-2.0_LDP*E2(I)+E3(I))
	        A3(I,LS)=DTAU(I,LS)*(E1(I)-2.0D0*E2(I)+E3(I))

	1                      MIN(ABS(S(1)),0.5_LDP*ABS(dS(1)))
	1                      MIN(ABS(S(1)),0.5*ABS(dS(1)))

	1               MIN(ABS(S(I-1)),ABS(S(I)),0.5_LDP*ABS(dS(I)))
	1               MIN(ABS(S(I-1)),ABS(S(I)),0.5*ABS(dS(I)))

	1               MIN(ABS(S(NI-1)),0.5_LDP*ABS(dS(NI)))
	1               MIN(ABS(S(NI-1)),0.5*ABS(dS(NI)))

            I_M(1,LS)=0.0_LDP
            I_M(1,LS)=0.0D0

	1                      MIN(ABS(S(1)),0.5_LDP*ABS(dS(1)))
	1                      MIN(ABS(S(1)),0.5*ABS(dS(1)))

	1          MIN(ABS(S(I-1)),ABS(S(I)),0.5_LDP*ABS(dS(I)))
	1          MIN(ABS(S(I-1)),ABS(S(I)),0.5*ABS(dS(I)))

	1            MIN(ABS(S(NI-1)),0.5_LDP*ABS(dS(NI)))
	1            MIN(ABS(S(NI-1)),0.5*ABS(dS(NI)))

	       CV_BOUND(LS)=0.5_LDP*(I_P(1,LS)-I_M(1,LS))
	       CV_BOUND(LS)=0.5D0*(I_P(1,LS)-I_M(1,LS))

	       CV_BOUND(LS)=0.0_LDP
	       CV_BOUND(LS)=0.0D0

	       CV_BOUND(LS)=0.5_LDP*(I_P(ND_ADD+1,LS)-I_M(ND_ADD+1,LS))
	       CV_BOUND(LS)=0.5D0*(I_P(ND_ADD+1,LS)-I_M(ND_ADD+1,LS))

	      AV(I,LS)=0.5_LDP*( I_P(I,LS)+I_M(I,LS) )
	      AV(I,LS)=0.5D0*( I_P(I,LS)+I_M(I,LS) )

	      CV(I,LS)= 0.25_LDP*(  (I_P(I+1,LS)-I_M(I+1,LS)) +
	      CV(I,LS)= 0.25D0*(  (I_P(I+1,LS)-I_M(I+1,LS)) +

	HBC=0.0_LDP			!H/J at model outer boundary.
	HBC=0.0D0			!H/J at model outer boundary.

	NBC=0.0_LDP			!N/J at model outer boundary.
	NBC=0.0D0			!N/J at model outer boundary.

	IN_HBC=0.0_LDP
	IN_HBC=0.0D0

	JNU(:)=0.0_LDP			!1:ND
	JNU(:)=0.0D0			!1:ND

	HNU(:)=0.0_LDP
	HNU(:)=0.0D0

	KNU(:)=0.0_LDP
	KNU(:)=0.0D0

	NNU(:)=0.0_LDP
	NNU(:)=0.0D0

	RSQN_ON_RSQJ(:)=0.0_LDP
	RSQN_ON_RSQJ(:)=0.0D0

	  IPLUS_P(LS)=2.0_LDP*CV_BOUND(LS)          !To compute observed flux
	  IPLUS_P(LS)=2.0D0*CV_BOUND(LS)          !To compute observed flux

	IN_HBC=IN_HBC/(2.0_LDP*JNU(ND)-IC)
	IN_HBC=IN_HBC/(2.0D0*JNU(ND)-IC)

	    ALPHA=0.25_LDP*(R(I)+R(I+1))*(R(I)+R(I+1))
	    ALPHA=0.25D0*(R(I)+R(I+1))*(R(I)+R(I+1))

	    NNU(I)=0.0_LDP
	    NNU(I)=0.0D0

	      T1=100.0_LDP
	      T1=100.0D0

	    IF(T1 .GT. 1.1_LDP .OR. T1 .LT. 0.05_LDP)THEN
	    IF(T1 .GT. 1.1 .OR. T1 .LT. 0.05)THEN

	      ALPHA=0.25_LDP*(R(I)+R(I+1))*(R(I)+R(I+1))
	      ALPHA=0.25D0*(R(I)+R(I+1))*(R(I)+R(I+1))

	      NNU(I)=0.0_LDP
	      NNU(I)=0.0D0

	      NNU(I)=0.0_LDP		!Later replaced by average.
	      NNU(I)=0.0D0		!Later replaced by average.

	    IF(NNU(I) .GT. 1.0_LDP)THEN
	    IF(NNU(I) .GT. 1.0D0)THEN

	      NNU(I)=1.0_LDP
	      NNU(I)=1.0D0

	    ELSE IF( NNU(I) .LT. 0.01_LDP) THEN
	    ELSE IF( NNU(I) .LT. 0.01) THEN

	      NNU(I)=0.01_LDP
	      NNU(I)=0.01


fix_dchi.f

	F2DA(:,:,:)=0.0_LDP			!NDEXT,ND,2
	F2DA(:,:,:)=0.0D0			!NDEXT,ND,2

	RHS_dHdCHI(:,:)=0.0_LDP			!NDEXT-1,ND
	RHS_dHdCHI(:,:)=0.0D0			!NDEXT-1,ND


fixpop.f

	    IF( T1/POPVEC(L) .GT. 1.0E-15_LDP )GOTO 500
	    IF( T1/POPVEC(L) .GT. 1.0D-15 )GOTO 500

	        BA(I,J,K,L)=0.0_LDP
	        BA(I,J,K,L)=0.0D0

	    BA(I,I,K,L)=1.0_LDP
	    BA(I,I,K,L)=1.0D0

	    STEQ(I,L)=0.0_LDP
	    STEQ(I,L)=0.0D0


formsol.f

	DNU=3.33564E-06_LDP*V(1)*2.0_LDP
	DNU=3.33564D-06*V(1)*2.0D0

	IF(JINT(ND) .EQ. 0.0_LDP)THEN
	IF(JINT(ND) .EQ. 0.0D0)THEN

	JBAR(1:ND)=0.0_LDP
	JBAR(1:ND)=0.0D0

	  dJBARdKI(1:ND)=0.0_LDP
	  dJBARdKI(1:ND)=0.0D0

	  LAMLINE(1:ND)=0.0_LDP
	  LAMLINE(1:ND)=0.0D0

	  JBLANK(1:ND)=0.0_LDP
	  JBLANK(1:ND)=0.0D0

	  HBLANK(1:ND)=0.0_LDP
	  HBLANK(1:ND)=0.0D0

	  HCONT(1:ND)=0.0_LDP
	  HCONT(1:ND)=0.0D0

	  JINT(1:ND)=0.0_LDP
	  JINT(1:ND)=0.0D0

	  dJINTdS(1:ND)=0.0_LDP
	  dJINTdS(1:ND)=0.0D0

	  HINT(1:ND)=0.0_LDP
	  HINT(1:ND)=0.0D0

	  AV(1:NI)=0.0_LDP
	  AV(1:NI)=0.0D0

	  CV(1:NI)=0.0_LDP
	  CV(1:NI)=0.0D0

	    dUdS(1:NI)=0.0_LDP
	    dUdS(1:NI)=0.0D0

	    dVdS_UP(1:NI)=0.0_LDP
	    dVdS_UP(1:NI)=0.0D0

	    dVdS_LOW(1:NI)=0.0_LDP
	    dVdS_LOW(1:NI)=0.0D0

	    dUdKI(1:NI)=0.0_LDP
	    dUdKI(1:NI)=0.0D0

	    dVdKI_UP(1:NI)=0.0_LDP
	    dVdKI_UP(1:NI)=0.0D0

	    dVdKI_LOW(1:NI)=0.0_LDP
	    dVdKI_LOW(1:NI)=0.0D0

	    IF(P(LS) .GT. 0.0_LDP)THEN
	    IF(P(LS) .GT. 0.0D0)THEN

	      TOR=CHI(1)*R(1)*R(1)*(1.570796_LDP-ACOS(P(LS)/R(1)))/P(LS)
	      TOR=CHI(1)*R(1)*R(1)*(1.570796D0-ACOS(P(LS)/R(1)))/P(LS)

	    IBOUND=ETA(1)*(1.0_LDP-EXP(-TOR))/CHI(1)
	    IBOUND=ETA(1)*(1.0D0-EXP(-TOR))/CHI(1)

	    TOR=0.0_LDP
	    TOR=0.0D0

	    IBOUND=0.0_LDP
	    IBOUND=0.0D0

	1            *(1.0_LDP+Q(NI)*(1.0_LDP-TCHI(NI)/OLDCHI))
	1            *(1.0D0+Q(NI)*(1.0D0-TCHI(NI)/OLDCHI))

	      WERF_EXP=EXP(1.0E-15_LDP*CHIL(1)/FL/GAM(1)*WERFC(ML))
	      WERF_EXP=EXP(1.0D-15*CHIL(1)/FL/GAM(1)*WERFC(ML))

	      XM(1)=(CHI(1)/TCHI(1)*WERF_EXP-1.0_LDP)*ETAL(1)/CHIL(1)
	      XM(1)=(CHI(1)/TCHI(1)*WERF_EXP-1.0D0)*ETAL(1)/CHIL(1)

	      T1=1.0E-15_LDP/FL/GAM(1)*WERFC(ML)
	      T1=1.0D-15/FL/GAM(1)*WERFC(ML)

	      QH(I)=2.0_LDP*GAMH(I)*( CV(I)-CVCONT(I) )/(CHI(I)+CHI(I+1))
	      QH(I)=2.0D0*GAMH(I)*( CV(I)-CVCONT(I) )/(CHI(I)+CHI(I+1))

	1                 (ETAL(1)/CHIL(1)-IBOUND)*(1.0_LDP-WERF_EXP)
	1                 (ETAL(1)/CHIL(1)-IBOUND)*(1.0D0-WERF_EXP)

	    VSRCE(1)=0.0_LDP
	    VSRCE(1)=0.0D0

	    TA(1)=0.0_LDP
	    TA(1)=0.0D0

	    TC(1)=1.0_LDP/DTAU(1)
	    TC(1)=1.0/DTAU(1)

	    TB(1)=-1.0_LDP-TC(1)
	    TB(1)=-1.0D0-TC(1)

	      TC(I)=1.0_LDP/DTAU(I)
	      TC(I)=1.0D0/DTAU(I)

	      TB(I)=-0.5_LDP*(DTAU(I-1)+DTAU(I))-TA(I)-TC(I)
	      TB(I)=-0.5D0*(DTAU(I-1)+DTAU(I))-TA(I)-TC(I)

	      XM(I)=-0.5_LDP*( SOURCE(I)+Q(I) )*( DTAU(I-1)+DTAU(I) )
	      XM(I)=-0.5D0*( SOURCE(I)+Q(I) )*( DTAU(I-1)+DTAU(I) )

	      VSRCE(I)=-0.5_LDP*( DTAU(I-1)+DTAU(I) )
	      VSRCE(I)=-0.5D0*( DTAU(I-1)+DTAU(I) )

	      VSRCE(NI)=0.0_LDP
	      VSRCE(NI)=0.0D0

	      TB(NI)=-TA(NI)+DTAU(NI-1)*0.5_LDP
	      TB(NI)=-TA(NI)+DTAU(NI-1)*0.5D0

	      XM(NI)=0.5_LDP*DTAU(NI-1)*(SOURCE(NI)+Q(NI))-QH(NI-1)
	      XM(NI)=0.5D0*DTAU(NI-1)*(SOURCE(NI)+Q(NI))-QH(NI-1)

	      VSRCE(NI)=0.5_LDP*DTAU(NI-1)
	      VSRCE(NI)=0.5D0*DTAU(NI-1)

	      VSRCE(NI)=0.0_LDP
	      VSRCE(NI)=0.0D0

	    TC(NI)=0.0_LDP
	    TC(NI)=0.0D0

	  SCALE=0.0_LDP
	  SCALE=0.0D0

	  SCALE=1.0E+15_LDP*FL*(PF(1)-PF(NLF))/SCALE
	  SCALE=1.0D+15*FL*(PF(1)-PF(NLF))/SCALE

	    T1=1.0E-15_LDP/FL
	    T1=1.0D-15/FL

	    JEX_SCAT(1:ND)=0.0_LDP
	    JEX_SCAT(1:ND)=0.0D0

	  T1=1.0E+15_LDP*FL
	  T1=1.0D+15*FL

	    JINT(I)=(JINT(I)-T1*JINT_PREV(I))/(1.0_LDP-T1)
	    JINT(I)=(JINT(I)-T1*JINT_PREV(I))/(1.0D0-T1)

	  T1=( (PF(1)-PF(NLF))+DNU )*FL*1.0E+15_LDP
	  T1=( (PF(1)-PF(NLF))+DNU )*FL*1.0D+15

	  EW=2.99794E-12_LDP*( HBLANK(1)-HCONT(1)*T1 )/HCONT(1)/FL/FL
	  EW=2.99794D-12*( HBLANK(1)-HCONT(1)*T1 )/HCONT(1)/FL/FL

	  CONT_INT=13.19868_LDP*HCONT(1)*( (R(1)+R(2))**2 )/4.0_LDP
	  CONT_INT=13.19868D0*HCONT(1)*( (R(1)+R(2))**2 )/4.0D0

	  ZNET(I)=1.0_LDP-JBAR(I)*CHIL(I)/ETAL(I)
	  ZNET(I)=1.0D0-JBAR(I)*CHIL(I)/ETAL(I)


fqcomp_ibc.f

	NEWRJ(1:ND)=0.0_LDP
	NEWRJ(1:ND)=0.0D0

	NEWRK(1:ND)=0.0_LDP
	NEWRK(1:ND)=0.0D0

	HBC_J=0.0_LDP
	HBC_J=0.0D0

	HBC_S=0.0_LDP
	HBC_S=0.0D0

	INBCNEW=0.0_LDP
	INBCNEW=0.0D0

	    IF(P(LS) .GT. 0.0_LDP)THEN
	    IF(P(LS) .GT. 0.0D0)THEN

	      TOR=CHI(1)*R(1)*R(1)*(1.570796_LDP-ACOS(P(LS)/R(1)))/P(LS)
	      TOR=CHI(1)*R(1)*R(1)*(1.570796D0-ACOS(P(LS)/R(1)))/P(LS)

	    IBOUND=SOURCE(1)*(1.0_LDP-EXP(-TOR))
	    IBOUND=SOURCE(1)*(1.0D0-EXP(-TOR))

	    IBOUND=0.0_LDP
	    IBOUND=0.0D0

	      DTAU(I)=0.5_LDP*(Z(I)-Z(I+1))*(CHI(I)+CHI(I+1)+(Z(I)-Z(I+1))
	      DTAU(I)=0.5D0*(Z(I)-Z(I+1))*(CHI(I)+CHI(I+1)+(Z(I)-Z(I+1))

	1     *(dCHIdR(I+1)*Z(I+1)/R(I+1)-dCHIdR(I)*Z(I)/R(I))/6.0_LDP)
	1     *(dCHIdR(I+1)*Z(I+1)/R(I+1)-dCHIdR(I)*Z(I)/R(I))/6.0D0)

	    TA(1)=0.0_LDP
	    TA(1)=0.0D0

	    TC(1)=1.0_LDP/DTAU(1)
	    TC(1)=1.0D0/DTAU(1)

	    TB(1)=-1.0_LDP-TC(1)
	    TB(1)=-1.0D0-TC(1)

	      TC(I)=1.0_LDP/DTAU(I)
	      TC(I)=1.0D0/DTAU(I)

	      TB(I)=-0.5_LDP*(DTAU(I-1)+DTAU(I))-TA(I)-TC(I)
	      TB(I)=-0.5D0*(DTAU(I-1)+DTAU(I))-TA(I)-TC(I)

	      XM(I)=-SOURCE(I)*(DTAU(I-1)+DTAU(I))*0.5_LDP
	      XM(I)=-SOURCE(I)*(DTAU(I-1)+DTAU(I))*0.5D0

	      TB(NI)=-TA(NI)+DTAU(NI-1)/2.0_LDP
	      TB(NI)=-TA(NI)+DTAU(NI-1)/2.0D0

	      XM(NI)=0.5_LDP*DTAU(NI-1)*SOURCE(NI)
	      XM(NI)=0.5D0*DTAU(NI-1)*SOURCE(NI)

	      TB(NI)=1.0_LDP-TA(NI)
	      TB(NI)=1.0D0-TA(NI)

	    TC(NI)=0.0_LDP
	    TC(NI)=0.0D0

	    E2=1.0_LDP-(1.0_LDP-E1)/DTAU(1)
	    E2=1.0D0-(1.0D0-E1)/DTAU(1)

	    E3=(1.0_LDP-E1)/DTAU(1)-E1
	    E3=(1.0D0-E1)/DTAU(1)-E1

	    IF(DTAU(1) .LT. 1.0E-03_LDP)THEN
	    IF(DTAU(1) .LT. 1.0D-03)THEN

	      E2=DTAU(1)*0.5_LDP+DTAU(1)*DTAU(1)/6.0_LDP
	      E2=DTAU(1)*0.5D0+DTAU(1)*DTAU(1)/6.0D0

	      E3=DTAU(1)*0.5_LDP-DTAU(1)*DTAU(1)/3.0_LDP
	      E3=DTAU(1)*0.5D0-DTAU(1)*DTAU(1)/3.0D0

            XM(1)=0.5_LDP*(IBOUND+XM(2)*E1+SOURCE(1)*E2+SOURCE(2)*E3)
            XM(1)=0.5D0*(IBOUND+XM(2)*E1+SOURCE(1)*E2+SOURCE(2)*E3)

	INBCNEW=INBCNEW/(2.0_LDP*NEWRJ(ND)-IC)
	INBCNEW=INBCNEW/(2.0D0*NEWRJ(ND)-IC)


fqcomp_ibc_v2.f

	NEWRJ(1:ND)=0.0_LDP
	NEWRJ(1:ND)=0.0D0

	NEWRK(1:ND)=0.0_LDP
	NEWRK(1:ND)=0.0D0

	HBC_J=0.0_LDP
	HBC_J=0.0D0

	HBC_S=0.0_LDP
	HBC_S=0.0D0

	INBCNEW=0.0_LDP
	INBCNEW=0.0D0

	    IF(P(LS) .GT. 0.0_LDP)THEN
	    IF(P(LS) .GT. 0.0D0)THEN

	      TOR=CHI(1)*R(1)*R(1)*(1.570796_LDP-ACOS(P(LS)/R(1)))/P(LS)
	      TOR=CHI(1)*R(1)*R(1)*(1.570796D0-ACOS(P(LS)/R(1)))/P(LS)

	    IBOUND=SOURCE(1)*(1.0_LDP-EXP(-TOR))
	    IBOUND=SOURCE(1)*(1.0D0-EXP(-TOR))

	    IBOUND=0.0_LDP
	    IBOUND=0.0D0

	      DTAU(I)=0.5_LDP*(Z(I)-Z(I+1))*(CHI(I)+CHI(I+1)+(Z(I)-Z(I+1))
	      DTAU(I)=0.5D0*(Z(I)-Z(I+1))*(CHI(I)+CHI(I+1)+(Z(I)-Z(I+1))

	1     *(dCHIdR(I+1)*Z(I+1)/R(I+1)-dCHIdR(I)*Z(I)/R(I))/6.0_LDP)
	1     *(dCHIdR(I+1)*Z(I+1)/R(I+1)-dCHIdR(I)*Z(I)/R(I))/6.0D0)

	    TA(1)=0.0_LDP
	    TA(1)=0.0D0

	    TC(1)=1.0_LDP/DTAU(1)
	    TC(1)=1.0D0/DTAU(1)

	    TB(1)=1.0_LDP
	    TB(1)=1.0D0

	      TC(I)=1.0_LDP/DTAU(I)
	      TC(I)=1.0D0/DTAU(I)

	      TB(I)=0.5_LDP*(DTAU(I-1)+DTAU(I))
	      TB(I)=0.5D0*(DTAU(I-1)+DTAU(I))

	      XM(I)=-SOURCE(I)*(DTAU(I-1)+DTAU(I))*0.5_LDP
	      XM(I)=-SOURCE(I)*(DTAU(I-1)+DTAU(I))*0.5D0

	      TB(NI)=-DTAU(NI-1)/2.0_LDP
	      TB(NI)=-DTAU(NI-1)/2.0D0

	      XM(NI)=0.5_LDP*DTAU(NI-1)*SOURCE(NI)
	      XM(NI)=0.5D0*DTAU(NI-1)*SOURCE(NI)

	      TB(NI)=0.0_LDP
	      TB(NI)=0.0D0

	      TB(NI)=-1.0_LDP
	      TB(NI)=-1.0D0

	      TB(NI)=-DTAU(NI-1)/2.0_LDP
	      TB(NI)=-DTAU(NI-1)/2.0D0

	      XM(NI)=0.5_LDP*DTAU(NI-1)*SOURCE(NI)
	      XM(NI)=0.5D0*DTAU(NI-1)*SOURCE(NI)

	    TC(NI)=0.0_LDP
	    TC(NI)=0.0D0

	    E2=1.0_LDP-(1.0_LDP-E1)/DTAU(1)
	    E2=1.0D0-(1.0D0-E1)/DTAU(1)

	    E3=(1.0_LDP-E1)/DTAU(1)-E1
	    E3=(1.0D0-E1)/DTAU(1)-E1

	    IF(DTAU(1) .LT. 1.0E-03_LDP)THEN
	    IF(DTAU(1) .LT. 1.0D-03)THEN

	      E2=DTAU(1)*0.5_LDP+DTAU(1)*DTAU(1)/6.0_LDP
	      E2=DTAU(1)*0.5D0+DTAU(1)*DTAU(1)/6.0D0

	      E3=DTAU(1)*0.5_LDP-DTAU(1)*DTAU(1)/3.0_LDP
	      E3=DTAU(1)*0.5D0-DTAU(1)*DTAU(1)/3.0D0

	     XM(1)=0.5_LDP*(IBOUND+XM(2)*E1+SOURCE(1)*E2+SOURCE(2)*E3)
	     XM(1)=0.5D0*(IBOUND+XM(2)*E1+SOURCE(1)*E2+SOURCE(2)*E3)

	    IF(XM(I) .LT. 0.0_LDP)THEN
	    IF(XM(I) .LT. 0.0D0)THEN

	      DTAU(NI)=0.0_LDP   !Set to zero as not used and not set.
	      DTAU(NI)=0.0D0   !Set to zero as not used and not set.

	INBCNEW=INBCNEW/(2.0_LDP*NEWRJ(ND)-IC)
	INBCNEW=INBCNEW/(2.0D0*NEWRJ(ND)-IC)


fqnew.f


full_to_sup.f

	    C2_S(I,K)=0.0_LDP
	    C2_S(I,K)=0.0D0


gamma.f

	  GAM(I)=3.33564E-06_LDP*V(I)/R(I)*(  1.0_LDP+SIGMA(I)*(MU**2)  )
	  GAM(I)=3.33564D-06*V(I)/R(I)*(  1.0D0+SIGMA(I)*(MU**2)  )

	  GAMH(I)=(V(I+1)+V(I))*3.33564E-06_LDP*(  1.0_LDP+0.5_LDP
	  GAMH(I)=(V(I+1)+V(I))*3.33564D-06*(  1.0D0+0.5D0

	GAMH(NI)=0.0_LDP
	GAMH(NI)=0.0D0

	GAM(NI)=3.33564E-06_LDP*V(NI)*( 1.0_LDP+SIGMA(NI)*(MU**2) )/R(NI)
	GAM(NI)=3.33564D-06*V(NI)*( 1.0D0+SIGMA(NI)*(MU**2) )/R(NI)


gausel.f

	REAL(KIND=LDP), PARAMETER :: TOL=1.0E-30_LDP
	REAL(KIND=LDP), PARAMETER :: TOL=1.0D-30

	BIG=0.0_LDP
	BIG=0.0D0

	RBIG=1.0_LDP/BIG
	RBIG=1.0D0/BIG

	A(I,I)=1.0_LDP
	A(I,I)=1.0D0

	RBIG=1.0_LDP/A(N,N)
	RBIG=1.0D0/A(N,N)


gbf.f

	1/  1.2302628_LDP,-2.9094219E-03_LDP,7.3993579E-06_LDP,-8.7356966E-09_LDP
	1/  1.2302628D0,-2.9094219D-03,7.3993579D-06,-8.7356966D-09

	1, -5.5759888_LDP,12.803223_LDP,0.0_LDP
	1, -5.5759888D0,12.803223D0,0.0D0

	1,  1.1595421_LDP,-2.0735860E-03_LDP,2.7033384E-06_LDP,0.0_LDP
	1,  1.1595421D0,-2.0735860D-03,2.7033384D-06,0.0D0

	1, -1.2709045_LDP,2.1325684_LDP,-2.0244141_LDP
	1, -1.2709045D0,2.1325684D0,-2.0244141D0

	1,  1.1450949_LDP,-1.9366592E-03_LDP,2.3572356E-06_LDP,0.0_LDP
	1,  1.1450949D0,-1.9366592D-03,2.3572356D-06,0.0D0

	1, -0.55936432_LDP,0.52471924_LDP,-0.23387146_LDP
	1, -0.55936432D0,0.52471924D0,-0.23387146D0

	1,  1.1306695_LDP,-1.3482273E-03_LDP,-4.6949424E-06_LDP,2.3548636E-08_LDP
	1,  1.1306695D0,-1.3482273D-03,-4.6949424D-06,2.3548636D-08

	1, -0.31190730_LDP,0.1968356_LDP,-5.4418565E-02_LDP
	1, -0.31190730D0,0.1968356D0,-5.4418565D-02

	1,  1.1190904_LDP,-1.0401085E-03_LDP,-6.9943488E-06_LDP,2.8496742E-08_LDP
	1,  1.1190904D0,-1.0401085D-03,-6.9943488D-06,2.8496742D-08

	1, -0.16051018_LDP,5.5545091E-02_LDP,-8.9182854E-03_LDP
	1, -0.16051018D0,5.5545091D-02,-8.9182854D-03

	1,  1.1168376_LDP,-8.9466573E-04_LDP,-8.8393113E-06_LDP,3.4696768E-08_LDP
	1,  1.1168376D0,-8.9466573D-04,-8.8393113D-06,3.4696768D-08

	1, -0.13075417_LDP,4.1921183E-02_LDP,-5.5303574E-03_LDP
	1, -0.13075417D0,4.1921183D-02,-5.5303574D-03

	1,  1.1128623_LDP,-7.4883260E-04_LDP,-1.0244504E-05_LDP,3.8595771E-08_LDP
	1,  1.1128623D0,-7.4883260D-04,-1.0244504D-05,3.8595771D-08

	1, -9.5441161E-02_LDP,2.3350812E-02_LDP,-2.2752881E-03_LDP
	1, -9.5441161D-02,2.3350812D-02,-2.2752881D-03

	1,  1.1093137_LDP,-6.2619148E-04_LDP,-1.1342068E-05_LDP,4.1477731E-08_LDP
	1,  1.1093137D0,-6.2619148D-04,-1.1342068D-05,4.1477731D-08

	1, -7.1010560E-02_LDP,1.3298411E-02_LDP,-9.7200274E-04_LDP
	1, -7.1010560D-02,1.3298411D-02,-9.7200274D-04

	1,  1.1078717_LDP,-5.4837392E-04_LDP,-1.2157943E-05_LDP,4.3796716E-08_LDP
	1,  1.1078717D0,-5.4837392D-04,-1.2157943D-05,4.3796716D-08

	1, -5.6056560E-02_LDP,8.5139736E-03_LDP,-4.9576163E-04_LDP
	1, -5.6056560D-02,8.5139736D-03,-4.9576163D-04

	1,  1.1052734_LDP,-4.4341570E-04_LDP,-1.3235905E-05_LDP,4.7003140E-08_LDP
	1,  1.1052734D0,-4.4341570D-04,-1.3235905D-05,4.7003140D-08

	1, -4.7326370E-02_LDP,6.1516856E-03_LDP,-2.9467046E-04_LDP/
	1, -4.7326370D-02,6.1516856D-03,-2.9467046D-04/

	T1=RNU/ZHE/ZHE/0.2998_LDP		!To convert from microns to hz
	T1=RNU/ZHE/ZHE/0.2998D0		!To convert from microns to hz

	IF(N .GT. 10 .OR. T1 .GT. 110.0_LDP)THEN
	IF(N .GT. 10 .OR. T1 .GT. 110.0D0)THEN

	  GBF=1.0_LDP
	  GBF=1.0D0


genaccel.f

	MAXINC=-100.0_LDP
	MAXINC=-100.0D0

	MAXDEC=100.0_LDP
	MAXDEC=100.0D0

	  LOCINC=-100.0_LDP
	  LOCINC=-100.0D0

	  LOCDEC=100.0_LDP
	  LOCDEC=100.0D0

	  IF(LOCINC .GT. 10.1_LDP .OR. LOCDEC .LT. 0.09_LDP)THEN
	  IF(LOCINC .GT. 10.1D0 .OR. LOCDEC .LT. 0.09D0)THEN

	MAXINC=100.0_LDP*(MAXINC-1.0_LDP)
	MAXINC=100.0D0*(MAXINC-1.0D0)

	MAXDEC=100.0_LDP*(1.0_LDP/MAXDEC-1.0_LDP)
	MAXDEC=100.0D0*(1.0D0/MAXDEC-1.0D0)


genangqw.f

	QW(:,:)=0.0_LDP
	QW(:,:)=0.0D0

	    T2=0.5_LDP*( R(I)+R(I+1) )
	    T2=0.5D0*( R(I)+R(I+1) )

	    TB(J)=0.0_LDP
	    TB(J)=0.0D0

	  IF(TB(NW) .NE. 0.0_LDP)COUNTER=COUNTER+1
	  IF(TB(NW) .NE. 0.0D0)COUNTER=COUNTER+1


genangqw_v2.f

	QW(:,:)=0.0_LDP
	QW(:,:)=0.0D0

	    T2=0.5_LDP*( R(I)+R(I+1) )
	    T2=0.5D0*( R(I)+R(I+1) )

	    MU(J)=0.0_LDP
	    MU(J)=0.0D0

	  IF(MU(NW) .NE. 0.0_LDP)COUNTER=COUNTER+1
	  IF(MU(NW) .NE. 0.0D0)COUNTER=COUNTER+1


gen_omega_rd_v2.f

	OMEGA_TABLE(:)=0.0_LDP
	OMEGA_TABLE(:)=0.0D0

	  IF(T_TABLE(1) .LE. 0.0_LDP .OR. T_TABLE(I) .GE. T_TABLE(I+1))THEN
	  IF(T_TABLE(1) .LE. 0.0D0 .OR. T_TABLE(I) .GE. T_TABLE(I+1))THEN

	  GL_SUM=0.0_LDP
	  GL_SUM=0.0D0

	  GU_SUM=0.0_LDP
	  GU_SUM=0.0D0

	    GU_SUM=1.0_LDP
	    GU_SUM=1.0D0

200	  NORM_FAC=1.0_LDP/GL_SUM/GU_SUM
200	  NORM_FAC=1.0D0/GL_SUM/GU_SUM

	  IF( MINVAL(COL_VEC(1:NUM_TVALS)) .LE. 0.0_LDP )THEN
	  IF( MINVAL(COL_VEC(1:NUM_TVALS)) .LE. 0.0D0 )THEN


genopaeta_v6.f

	    CHI(K)=CHI(K)+TCHI1*ALPHA*(1.0_LDP-EMHNUKT(K))
	    CHI(K)=CHI(K)+TCHI1*ALPHA*(1.0D0-EMHNUKT(K))

	NO_NON_ZERO_PHOT=COUNT(ALPHA_VEC .GT. 0.0_LDP)
	NO_NON_ZERO_PHOT=COUNT(ALPHA_VEC .GT. 0.0D0)

	DIS_CONST(1:N)=-1.0_LDP
	DIS_CONST(1:N)=-1.0D0

	      NEFF=SQRT(3.289395_LDP*ZION*ZION/(EDGE(I)-NU))
	      NEFF=SQRT(3.289395*ZION*ZION/(EDGE(I)-NU))

	        T1=MIN(1.0_LDP,16.0_LDP*NEFF/(1+NEFF)/(1+NEFF)/3.0_LDP)
	        T1=MIN(1.0D0,16.0D0*NEFF/(1+NEFF)/(1+NEFF)/3.0D0)

	        DIS_CONST(I)=( T1*ZION_CUBED/(NEFF**4) )**1.5_LDP
	        DIS_CONST(I)=( T1*ZION_CUBED/(NEFF**4) )**1.5D0

	    YDIS(K)=1.091_LDP*(X_LEV_DIS(K)+4.0_LDP*(ZION-1)*A_LEV_DIS(K))*
	    YDIS(K)=1.091*(X_LEV_DIS(K)+4.0D0*(ZION-1)*A_LEV_DIS(K))*

	    IF(NU .GE. EDGE(I) .AND. ALPHA_VEC(I) .GT. 0.0_LDP)THEN
	    IF(NU .GE. EDGE(I) .AND. ALPHA_VEC(I) .GT. 0.0D0)THEN

	        T1=7.782_LDP+XDIS(K)*DIS_CONST(I)
	        T1=7.782+XDIS(K)*DIS_CONST(I)

	    TMP_CHI(1:N)=0.0_LDP
	    TMP_CHI(1:N)=0.0D0

	    TMP_ETA(1:N)=0.0_LDP
	    TMP_ETA(1:N)=0.0D0

	      IF(NU .GE. EDGE(I) .AND. ALPHA_VEC(I) .GT. 0.0_LDP)THEN
	      IF(NU .GE. EDGE(I) .AND. ALPHA_VEC(I) .GT. 0.0D0)THEN

	        T1=7.782_LDP+XDIS(K)*DIS_CONST(I)
	        T1=7.782+XDIS(K)*DIS_CONST(I)


genosc_v5.f

	     EINA(J,I)=0.0_LDP
	     EINA(J,I)=0.0D0

	    FEDGE(I)=(IONIZATION_EN-FEDGE(I))*SPEED_LIGHT*1.0E-15_LDP
	    FEDGE(I)=(IONIZATION_EN-FEDGE(I))*SPEED_LIGHT*1.0D-15

	      T1=0.0_LDP
	      T1=0.0D0

	NTRET=0.0_LDP			!Actual number of transitions
	NTRET=0.0D0			!Actual number of transitions


genosc_v6.f

	EINA(1:N,1:N)=0.0_LDP
	EINA(1:N,1:N)=0.0D0

	    FEDGE(I)=(IONIZATION_EN-FEDGE(I))*SPEED_LIGHT*1.0E-15_LDP
	    FEDGE(I)=(IONIZATION_EN-FEDGE(I))*SPEED_LIGHT*1.0D-15

	IF(GF_CUT .GT. 1000.0_LDP .OR. NTRET .EQ. 0)THEN
	IF(GF_CUT .GT. 1000.0D0 .OR. NTRET .EQ. 0)THEN

	IF(GF_CUT .GT. 0.0_LDP .AND. MAX(MIN_NUM_TRANS,LEV_CUT) .LT. N)THEN
	IF(GF_CUT .GT. 0.0D0 .AND. MAX(MIN_NUM_TRANS,LEV_CUT) .LT. N)THEN

	          EINA(I,J)=0.0_LDP
	          EINA(I,J)=0.0D0

	          EINA(J,I)=0.0_LDP
	          EINA(J,I)=0.0D0

	  IF(CUT_CNT .NE. 0.0_LDP)THEN
	  IF(CUT_CNT .NE. 0.0D0)THEN

	NTRET=0.0_LDP			!Number of principal transitions
	NTRET=0.0D0			!Number of principal transitions


get_col_ref.f


getelec_v2.f

	  OLD_GAM(:,:)=0.0_LDP
	  OLD_GAM(:,:)=0.0D0

	ED(:)=0.0_LDP	
	ED(:)=0.0D0	

	  NEW_ED(1:ND)=0.0_LDP
	  NEW_ED(1:ND)=0.0D0

	    T1=0.0_LDP
	    T1=0.0D0

	    T2=0.0_LDP
	    T2=0.0D0

	    T1=0.0_LDP
	    T1=0.0D0

	    T2=0.0_LDP
	    T2=0.0D0

	  CHANGE=0.0_LDP
	  CHANGE=0.0D0

	  IF(CHANGE .LT. 0.01_LDP)GOTO 500
	  IF(CHANGE .LT. 0.01)GOTO 500


gff.f

	1/ 5.53_LDP,4.91_LDP,4.29_LDP,3.64_LDP,3.00_LDP,2.41_LDP,1.87_LDP,1.33_LDP,0.90_LDP,0.55_LDP,0.33_LDP,0.19_LDP
	1/ 5.53E0_LDP,4.91E0_LDP,4.29E0_LDP,3.64E0_LDP,3.00E0_LDP,2.41E0_LDP,1.87E0_LDP,1.33E0_LDP,0.90E0_LDP,0.55E0_LDP,0.33E0_LDP,0.19E0_LDP

	1, 5.49_LDP,4.87_LDP,4.25_LDP,3.61_LDP,2.98_LDP,2.41_LDP,1.89_LDP,1.39_LDP,0.95_LDP,0.59_LDP,0.36_LDP,0.21_LDP
	1, 5.49E0_LDP,4.87E0_LDP,4.25E0_LDP,3.61E0_LDP,2.98E0_LDP,2.41E0_LDP,1.89E0_LDP,1.39E0_LDP,0.95E0_LDP,0.59E0_LDP,0.36E0_LDP,0.21E0_LDP

	1, 5.46_LDP,4.84_LDP,4.22_LDP,3.59_LDP,2.97_LDP,2.41_LDP,1.91_LDP,1.44_LDP,1.00_LDP,0.63_LDP,0.39_LDP,0.24_LDP
	1, 5.46E0_LDP,4.84E0_LDP,4.22E0_LDP,3.59E0_LDP,2.97E0_LDP,2.41E0_LDP,1.91E0_LDP,1.44E0_LDP,1.00E0_LDP,0.63E0_LDP,0.39E0_LDP,0.24E0_LDP

	1, 5.43_LDP,4.80_LDP,4.18_LDP,3.56_LDP,2.95_LDP,2.41_LDP,1.93_LDP,1.49_LDP,1.08_LDP,0.72_LDP,0.46_LDP,0.28_LDP
	1, 5.43E0_LDP,4.80E0_LDP,4.18E0_LDP,3.56E0_LDP,2.95E0_LDP,2.41E0_LDP,1.93E0_LDP,1.49E0_LDP,1.08E0_LDP,0.72E0_LDP,0.46E0_LDP,0.28E0_LDP

	1, 5.40_LDP,4.77_LDP,4.15_LDP,3.54_LDP,2.94_LDP,2.41_LDP,1.95_LDP,1.55_LDP,1.17_LDP,0.86_LDP,0.59_LDP,0.38_LDP
	1, 5.40E0_LDP,4.77E0_LDP,4.15E0_LDP,3.54E0_LDP,2.94E0_LDP,2.41E0_LDP,1.95E0_LDP,1.55E0_LDP,1.17E0_LDP,0.86E0_LDP,0.59E0_LDP,0.38E0_LDP

	1, 5.25_LDP,4.63_LDP,4.02_LDP,3.41_LDP,2.81_LDP,2.32_LDP,1.90_LDP,1.56_LDP,1.30_LDP,1.01_LDP,0.76_LDP,0.53_LDP
	1, 5.25E0_LDP,4.63E0_LDP,4.02E0_LDP,3.41E0_LDP,2.81E0_LDP,2.32E0_LDP,1.90E0_LDP,1.56E0_LDP,1.30E0_LDP,1.01E0_LDP,0.76E0_LDP,0.53E0_LDP

	1, 5.00_LDP,4.40_LDP,3.80_LDP,3.22_LDP,2.65_LDP,2.19_LDP,1.80_LDP,1.51_LDP,1.32_LDP,1.14_LDP,0.97_LDP,0.76_LDP
	1, 5.00E0_LDP,4.40E0_LDP,3.80E0_LDP,3.22E0_LDP,2.65E0_LDP,2.19E0_LDP,1.80E0_LDP,1.51E0_LDP,1.32E0_LDP,1.14E0_LDP,0.97E0_LDP,0.76E0_LDP

	1, 4.69_LDP,4.13_LDP,3.57_LDP,2.97_LDP,2.44_LDP,2.02_LDP,1.68_LDP,1.42_LDP,1.30_LDP,1.18_LDP,1.09_LDP,0.96_LDP
	1, 4.69E0_LDP,4.13E0_LDP,3.57E0_LDP,2.97E0_LDP,2.44E0_LDP,2.02E0_LDP,1.68E0_LDP,1.42E0_LDP,1.30E0_LDP,1.18E0_LDP,1.09E0_LDP,0.96E0_LDP

	1, 4.48_LDP,3.87_LDP,3.27_LDP,2.70_LDP,2.21_LDP,1.84_LDP,1.52_LDP,1.33_LDP,1.20_LDP,1.15_LDP,1.13_LDP,1.08_LDP
	1, 4.48E0_LDP,3.87E0_LDP,3.27E0_LDP,2.70E0_LDP,2.21E0_LDP,1.84E0_LDP,1.52E0_LDP,1.33E0_LDP,1.20E0_LDP,1.15E0_LDP,1.13E0_LDP,1.08E0_LDP

	1, 4.16_LDP,3.52_LDP,2.98_LDP,2.45_LDP,2.01_LDP,1.67_LDP,1.41_LDP,1.25_LDP,1.15_LDP,1.11_LDP,1.10_LDP,1.09_LDP
	1, 4.16E0_LDP,3.52E0_LDP,2.98E0_LDP,2.45E0_LDP,2.01E0_LDP,1.67E0_LDP,1.41E0_LDP,1.25E0_LDP,1.15E0_LDP,1.11E0_LDP,1.10E0_LDP,1.09E0_LDP

	1, 3.85_LDP,3.27_LDP,2.70_LDP,2.20_LDP,1.81_LDP,1.50_LDP,1.30_LDP,1.17_LDP,1.11_LDP,1.08_LDP,1.08_LDP,1.09_LDP/
	1, 3.85E0_LDP,3.27E0_LDP,2.70E0_LDP,2.20E0_LDP,1.81E0_LDP,1.50E0_LDP,1.30E0_LDP,1.17E0_LDP,1.11E0_LDP,1.08E0_LDP,1.08E0_LDP,1.09E0_LDP/

	U=4.7994_LDP; U=LOG10(U*RNU/T)
	U=4.7994E0_LDP; U=LOG10(U*RNU/T)

	U=MAX(-3.99999999_LDP,U)
	U=MAX(-3.99999999E0_LDP,U)

	U=MIN(1.499999_LDP,U)
	U=MIN(1.499999E0_LDP,U)

	GB=15.789_LDP; GB=LOG10(GB*ZION*ZION/T)
	GB=15.789E0_LDP; GB=LOG10(GB*ZION*ZION/T)

	GB=MAX(-2.99999999_LDP,GB)
	GB=MAX(-2.99999999E0_LDP,GB)

	GB=MIN(1.999999_LDP,GB)
	GB=MIN(1.999999E0_LDP,GB)

	IU=INT(U*2+9.0_LDP)
	IU=INT(U*2+9.0E0_LDP)

	IGB=INT(GB*2+7.0_LDP)
	IGB=INT(GB*2+7.0E0_LDP)

	DU=2*U+9.0_LDP-IU
	DU=2*U+9.0E0_LDP-IU

	DGB=2*GB+7.0_LDP-IGB
	DGB=2*GB+7.0E0_LDP-IGB

	GFF=((1.0_LDP-DU)*A(IU,IGB)+DU*A(IU+1,IGB))*(1.0_LDP-DGB)
	GFF=((1.0E0_LDP-DU)*A(IU,IGB)+DU*A(IU+1,IGB))*(1.0E0_LDP-DGB)

	1 +((1.0_LDP-DU)*A(IU,IGB+1)+DU*A(IU+1,IGB+1))*DGB
	1 +((1.0E0_LDP-DU)*A(IU,IGB+1)+DU*A(IU+1,IGB+1))*DGB

	1/ 5.53_LDP,4.91_LDP,4.29_LDP,3.64_LDP,3.00_LDP,2.41_LDP,1.87_LDP,1.33_LDP,0.90_LDP,0.55_LDP,0.33_LDP,0.19_LDP
	1/ 5.53E0_LDP,4.91E0_LDP,4.29E0_LDP,3.64E0_LDP,3.00E0_LDP,2.41E0_LDP,1.87E0_LDP,1.33E0_LDP,0.90E0_LDP,0.55E0_LDP,0.33E0_LDP,0.19E0_LDP

	1, 5.49_LDP,4.87_LDP,4.25_LDP,3.61_LDP,2.98_LDP,2.41_LDP,1.89_LDP,1.39_LDP,0.95_LDP,0.59_LDP,0.36_LDP,0.21_LDP
	1, 5.49E0_LDP,4.87E0_LDP,4.25E0_LDP,3.61E0_LDP,2.98E0_LDP,2.41E0_LDP,1.89E0_LDP,1.39E0_LDP,0.95E0_LDP,0.59E0_LDP,0.36E0_LDP,0.21E0_LDP

	1, 5.46_LDP,4.84_LDP,4.22_LDP,3.59_LDP,2.97_LDP,2.41_LDP,1.91_LDP,1.44_LDP,1.00_LDP,0.63_LDP,0.39_LDP,0.24_LDP
	1, 5.46E0_LDP,4.84E0_LDP,4.22E0_LDP,3.59E0_LDP,2.97E0_LDP,2.41E0_LDP,1.91E0_LDP,1.44E0_LDP,1.00E0_LDP,0.63E0_LDP,0.39E0_LDP,0.24E0_LDP

	1, 5.43_LDP,4.80_LDP,4.18_LDP,3.56_LDP,2.95_LDP,2.41_LDP,1.93_LDP,1.49_LDP,1.08_LDP,0.72_LDP,0.46_LDP,0.28_LDP
	1, 5.43E0_LDP,4.80E0_LDP,4.18E0_LDP,3.56E0_LDP,2.95E0_LDP,2.41E0_LDP,1.93E0_LDP,1.49E0_LDP,1.08E0_LDP,0.72E0_LDP,0.46E0_LDP,0.28E0_LDP

	1, 5.40_LDP,4.77_LDP,4.15_LDP,3.54_LDP,2.94_LDP,2.41_LDP,1.95_LDP,1.55_LDP,1.17_LDP,0.86_LDP,0.59_LDP,0.38_LDP
	1, 5.40E0_LDP,4.77E0_LDP,4.15E0_LDP,3.54E0_LDP,2.94E0_LDP,2.41E0_LDP,1.95E0_LDP,1.55E0_LDP,1.17E0_LDP,0.86E0_LDP,0.59E0_LDP,0.38E0_LDP

	1, 5.25_LDP,4.63_LDP,4.02_LDP,3.41_LDP,2.81_LDP,2.32_LDP,1.90_LDP,1.56_LDP,1.30_LDP,1.01_LDP,0.76_LDP,0.53_LDP
	1, 5.25E0_LDP,4.63E0_LDP,4.02E0_LDP,3.41E0_LDP,2.81E0_LDP,2.32E0_LDP,1.90E0_LDP,1.56E0_LDP,1.30E0_LDP,1.01E0_LDP,0.76E0_LDP,0.53E0_LDP

	1, 5.00_LDP,4.40_LDP,3.80_LDP,3.22_LDP,2.65_LDP,2.19_LDP,1.80_LDP,1.51_LDP,1.32_LDP,1.14_LDP,0.97_LDP,0.76_LDP
	1, 5.00E0_LDP,4.40E0_LDP,3.80E0_LDP,3.22E0_LDP,2.65E0_LDP,2.19E0_LDP,1.80E0_LDP,1.51E0_LDP,1.32E0_LDP,1.14E0_LDP,0.97E0_LDP,0.76E0_LDP

	1, 4.69_LDP,4.13_LDP,3.57_LDP,2.97_LDP,2.44_LDP,2.02_LDP,1.68_LDP,1.42_LDP,1.30_LDP,1.18_LDP,1.09_LDP,0.96_LDP
	1, 4.69E0_LDP,4.13E0_LDP,3.57E0_LDP,2.97E0_LDP,2.44E0_LDP,2.02E0_LDP,1.68E0_LDP,1.42E0_LDP,1.30E0_LDP,1.18E0_LDP,1.09E0_LDP,0.96E0_LDP

	1, 4.48_LDP,3.87_LDP,3.27_LDP,2.70_LDP,2.21_LDP,1.84_LDP,1.52_LDP,1.33_LDP,1.20_LDP,1.15_LDP,1.13_LDP,1.08_LDP
	1, 4.48E0_LDP,3.87E0_LDP,3.27E0_LDP,2.70E0_LDP,2.21E0_LDP,1.84E0_LDP,1.52E0_LDP,1.33E0_LDP,1.20E0_LDP,1.15E0_LDP,1.13E0_LDP,1.08E0_LDP

	1, 4.16_LDP,3.52_LDP,2.98_LDP,2.45_LDP,2.01_LDP,1.67_LDP,1.41_LDP,1.25_LDP,1.15_LDP,1.11_LDP,1.10_LDP,1.09_LDP
	1, 4.16E0_LDP,3.52E0_LDP,2.98E0_LDP,2.45E0_LDP,2.01E0_LDP,1.67E0_LDP,1.41E0_LDP,1.25E0_LDP,1.15E0_LDP,1.11E0_LDP,1.10E0_LDP,1.09E0_LDP

	1, 3.85_LDP,3.27_LDP,2.70_LDP,2.20_LDP,1.81_LDP,1.50_LDP,1.30_LDP,1.17_LDP,1.11_LDP,1.08_LDP,1.08_LDP,1.09_LDP/
	1, 3.85E0_LDP,3.27E0_LDP,2.70E0_LDP,2.20E0_LDP,1.81E0_LDP,1.50E0_LDP,1.30E0_LDP,1.17E0_LDP,1.11E0_LDP,1.08E0_LDP,1.08E0_LDP,1.09E0_LDP/

	A1=4.7994_LDP; A1=LOG10(A1*RNU)
	A1=4.7994E0_LDP; A1=LOG10(A1*RNU)

	A2=15.789_LDP; A2=LOG10(A2*ZION*ZION)
	A2=15.789E0_LDP; A2=LOG10(A2*ZION*ZION)

	  U=MAX(-3.99999999_LDP,U)
	  U=MAX(-3.99999999E0_LDP,U)

	  U=MIN(1.499999_LDP,U)
	  U=MIN(1.499999E0_LDP,U)

	  GB=MAX(-2.99999999_LDP,GB)
	  GB=MAX(-2.99999999E0_LDP,GB)

	  GB=MIN(1.999999_LDP,GB)
	  GB=MIN(1.999999E0_LDP,GB)

	  IU=INT(U*2+9.0_LDP)
	  IU=INT(U*2+9.0E0_LDP)

	  IGB=INT(GB*2+7.0_LDP)
	  IGB=INT(GB*2+7.0E0_LDP)

	  DU=2*U+9.0_LDP-IU
	  DU=2*U+9.0E0_LDP-IU

	  DGB=2*GB+7.0_LDP-IGB
	  DGB=2*GB+7.0E0_LDP-IGB

	  GFF_VAL(I)=((1.0_LDP-DU)*A(IU,IGB)+DU*A(IU+1,IGB))*(1.0_LDP-DGB)
	  GFF_VAL(I)=((1.0E0_LDP-DU)*A(IU,IGB)+DU*A(IU+1,IGB))*(1.0E0_LDP-DGB)

	1               +((1.0_LDP-DU)*A(IU,IGB+1)+DU*A(IU+1,IGB+1))*DGB
	1               +((1.0E0_LDP-DU)*A(IU,IGB+1)+DU*A(IU+1,IGB+1))*DGB


gnthydl.f


htrpwgt.f

	W(:)=0.0_LDP
	W(:)=0.0D0

	  T1=0.5_LDP*(X(I)+X(I+1))
	  T1=0.5D0*(X(I)+X(I+1))

	  T2=(X(I)*X(I)+X(I)*X(I+1)+X(I+1)*X(I+1))/3.0_LDP
	  T2=(X(I)*X(I)+X(I)*X(I+1)+X(I+1)*X(I+1))/3.0D0

	IF(X(N) .NE. 0.0_LDP)THEN
	IF(X(N) .NE. 0.0D0)THEN

	  W(N)=W(N)+X(N)*X(N)/3.0_LDP
	  W(N)=W(N)+X(N)*X(N)/3.0D0

	SUM=0.0_LDP
	SUM=0.0D0

	SUM=1.0_LDP/SUM/3.0_LDP
	SUM=1.0D0/SUM/3.0D0

	IF(ABS(SUM-1.0_LDP) .GT. 1.0E-12_LDP)THEN
	IF(ABS(SUM-1.0D0) .GT. 1.0D-12)THEN

	SUM=0.0_LDP
	SUM=0.0D0

	  T1=0.5_LDP
	  T1=0.5D0

	  T1=0.5_LDP*(1.0_LDP-X(N)*X(N))+(X(N)**2)/3.0_LDP
	  T1=0.5D0*(1.0D0-X(N)*X(N))+(X(N)**2)/3.0D0

	IF(ABS(SUM-1.0_LDP) .GT. 1.0E-12_LDP)THEN
	IF(ABS(SUM-1.0D0) .GT. 1.0D-12)THEN


htrpwgt_v2.f

	W(:)=0.0_LDP
	W(:)=0.0D0

	  W(I)  =W(I)   + dX(I)*(2.0_LDP*X(I)+X(I+1))/6.0_LDP
	  W(I)  =W(I)   + dX(I)*(2.0D0*X(I)+X(I+1))/6.0D0

	  W(I+1)=W(I+1) + dX(I)*(X(I)+2.0_LDP*X(I+1))/6.0_LDP
	  W(I+1)=W(I+1) + dX(I)*(X(I)+2.0D0*X(I+1))/6.0D0

	IF(X(N) .NE. 0.0_LDP)THEN
	IF(X(N) .NE. 0.0D0)THEN

	  W(N)=W(N)+X(N)*X(N)/3.0_LDP
	  W(N)=W(N)+X(N)*X(N)/3.0D0

	SUM=0.0_LDP
	SUM=0.0D0

	SUM=1.0_LDP/SUM/3.0_LDP
	SUM=1.0D0/SUM/3.0D0

	XSUM=0.0_LDP
	XSUM=0.0D0

	  T1=0.5_LDP
	  T1=0.5D0

	  T1=0.5_LDP*(1.0_LDP-X(N)*X(N))+(X(N)**2)/3.0_LDP
	  T1=0.5D0*(1.0D0-X(N)*X(N))+(X(N)**2)/3.0D0

	IF(ABS(XSUM-1.0_LDP) .GT. 1.0E-12_LDP .OR. ABS(SUM-1.0_LDP) .GT. 1.0E-12_LDP)THEN
	IF(ABS(XSUM-1.0D0) .GT. 1.0D-12 .OR. ABS(SUM-1.0D0) .GT. 1.0D-12)THEN

	  SUM=0.0_LDP
	  SUM=0.0D0


hweight.f

	W(:)=0.0_LDP
	W(:)=0.0D0

	W(1)=0.5_LDP*H*(X(1)-H/6.0_LDP)
	W(1)=0.5D0*H*(X(1)-H/6.0D0)

	1       -H*H/RF/12.0_LDP*((2.0_LDP+HN/H)*X(1)-X(2))
	1       -H*H/RF/12.0D0*((2.0D0+HN/H)*X(1)-X(2))

	W(2)=0.5_LDP*H*(X(2)+H/6.0_LDP)
	W(2)=0.5D0*H*(X(2)+H/6.0D0)

	1       +H*H/RF/12.0_LDP*(2.0_LDP+H/HN+HN/H)*X(1)
	1       +H*H/RF/12.0D0*(2.0D0+H/HN+HN/H)*X(1)

	W(3)=-H*H/RF/12.0_LDP*(X(2)+H/HN*X(1))
	W(3)=-H*H/RF/12.0D0*(X(2)+H/HN*X(1))

	  W(I-2)=W(I-2)-X(I-1)*H*H/12.0_LDP/RF
	  W(I-2)=W(I-2)-X(I-1)*H*H/12.0D0/RF

	  W(I-1)=W(I-1)+0.5_LDP*H*(X(I-1)-H/6.0_LDP)
	  W(I-1)=W(I-1)+0.5D0*H*(X(I-1)-H/6.0D0)

	1              +X(I)*H*H/12.0_LDP/RE
	1              +X(I)*H*H/12.0D0/RE

	  W(I)=W(I)+0.5_LDP*H*(X(I)+H/6.0_LDP)
	  W(I)=W(I)+0.5D0*H*(X(I)+H/6.0D0)

	1              +X(I-1)*H*H/12.0_LDP/RF
	1              +X(I-1)*H*H/12.0D0/RF

	  W(I+1)=W(I+1)-X(I)*H*H/12.0_LDP/RE
	  W(I+1)=W(I+1)-X(I)*H*H/12.0D0/RE

	IF(X(N) .EQ. 0.0_LDP)THEN
	IF(X(N) .EQ. 0.0D0)THEN

	  W(N-1)=W(N-1)+H*H/3.0_LDP
	  W(N-1)=W(N-1)+H*H/3.0D0

	  W(N-2)=W(N-2)-X(N-1)*H*H/12.0_LDP/RF
	  W(N-2)=W(N-2)-X(N-1)*H*H/12.0D0/RF

	  W(N-1)=W(N-1)+0.5_LDP*H*(X(N-1)-H/6.0_LDP)
	  W(N-1)=W(N-1)+0.5D0*H*(X(N-1)-H/6.0D0)

	1              +X(N)*H*H/12.0_LDP/RE
	1              +X(N)*H*H/12.0D0/RE

	  W(N)=W(N)+0.5_LDP*H*(X(N)+H/6.0_LDP)
	  W(N)=W(N)+0.5D0*H*(X(N)+H/6.0D0)

	1              +X(I-1)*H*H/12.0_LDP/RF
	1              +X(I-1)*H*H/12.0D0/RF

	  W(N)=W(N)+H*H/3.0_LDP
	  W(N)=W(N)+H*H/3.0D0

	SUM=0.0_LDP
	SUM=0.0D0

	SUM=1.0_LDP/SUM/3.0_LDP
	SUM=1.0D0/SUM/3.0D0

	IF(ABS(SUM-1.0_LDP) .GT. 1.0E-12_LDP)
	IF(ABS(SUM-1.0D0) .GT. 1.0D-12)


hweight_v2.f

	W(:)=0.0_LDP
	W(:)=0.0D0

	W(1)=0.5_LDP*H*(X(1)-H/6.0_LDP)
	W(1)=0.5D0*H*(X(1)-H/6.0D0)

	1       -H*H/RF/12.0_LDP*((2.0_LDP+HN/H)*X(1)-X(2))
	1       -H*H/RF/12.0D0*((2.0D0+HN/H)*X(1)-X(2))

	W(2)=0.5_LDP*H*(X(2)+H/6.0_LDP)
	W(2)=0.5D0*H*(X(2)+H/6.0D0)

	1       +H*H/RF/12.0_LDP*(2.0_LDP+H/HN+HN/H)*X(1)
	1       +H*H/RF/12.0D0*(2.0D0+H/HN+HN/H)*X(1)

	W(3)=-H*H/RF/12.0_LDP*(X(2)+H/HN*X(1))
	W(3)=-H*H/RF/12.0D0*(X(2)+H/HN*X(1))

	  W(I-2)=W(I-2)-X(I-1)*H*H/12.0_LDP/RF
	  W(I-2)=W(I-2)-X(I-1)*H*H/12.0D0/RF

	  W(I-1)=W(I-1)+0.5_LDP*H*(X(I-1)-H/6.0_LDP)
	  W(I-1)=W(I-1)+0.5D0*H*(X(I-1)-H/6.0D0)

	1              +X(I)*H*H/12.0_LDP/RE
	1              +X(I)*H*H/12.0D0/RE

	  W(I)=W(I)+0.5_LDP*H*(X(I)+H/6.0_LDP)
	  W(I)=W(I)+0.5D0*H*(X(I)+H/6.0D0)

	1              +X(I-1)*H*H/12.0_LDP/RF
	1              +X(I-1)*H*H/12.0D0/RF

	  W(I+1)=W(I+1)-X(I)*H*H/12.0_LDP/RE
	  W(I+1)=W(I+1)-X(I)*H*H/12.0D0/RE

	IF(X(N) .EQ. 0.0_LDP)THEN
	IF(X(N) .EQ. 0.0D0)THEN

	  W(N-1)=W(N-1)+H*H/3.0_LDP
	  W(N-1)=W(N-1)+H*H/3.0D0

	  W(N-2)=W(N-2)-X(N-1)*H*H/12.0_LDP/RF
	  W(N-2)=W(N-2)-X(N-1)*H*H/12.0D0/RF

	  W(N-1)=W(N-1)+0.5_LDP*H*(X(N-1)-H/6.0_LDP)
	  W(N-1)=W(N-1)+0.5D0*H*(X(N-1)-H/6.0D0)

	1              +X(N)*H*H/12.0_LDP/RE
	1              +X(N)*H*H/12.0D0/RE

	  W(N)=W(N)+0.5_LDP*H*(X(N)+H/6.0_LDP)
	  W(N)=W(N)+0.5D0*H*(X(N)+H/6.0D0)

	1              +X(I-1)*H*H/12.0_LDP/RF
	1              +X(I-1)*H*H/12.0D0/RF

	  W(N)=W(N)+H*H/3.0_LDP
	  W(N)=W(N)+H*H/3.0D0

	SUM=0.0_LDP
	SUM=0.0D0

	SUM=1.0_LDP/SUM/3.0_LDP
	SUM=1.0D0/SUM/3.0D0

	IF(ABS(SUM-1.0_LDP) .GT. 1.0E-12_LDP)THEN
	IF(ABS(SUM-1.0D0) .GT. 1.0D-12)THEN

	  T1=0.0_LDP
	  T1=0.0D0


hydanggaunt.f

	DATA TMP_HYD/50*0.00_LDP,
	DATA TMP_HYD/50*0.00,

	9    -0.0672_LDP,-0.0672_LDP,-0.0672_LDP,-0.0672_LDP,-0.0673_LDP,-0.0673_LDP,-0.0675_LDP
	9    -0.0672,-0.0672,-0.0672,-0.0672,-0.0673,-0.0673,-0.0675

	9 , -0.0678_LDP,-0.0683_LDP,-0.0693_LDP,-0.0713_LDP,-0.0754_LDP,-0.0842_LDP,-0.1021_LDP
	9 , -0.0678,-0.0683,-0.0693,-0.0713,-0.0754,-0.0842,-0.1021

	9 , -0.1366_LDP,-0.1969_LDP,-0.2919_LDP,-0.4271_LDP,-0.6037_LDP,-0.8190_LDP,-1.0681_LDP
	9 , -0.1366,-0.1969,-0.2919,-0.4271,-0.6037,-0.8190,-1.0681

	9 , -1.3451_LDP,-1.6449_LDP,-1.9623_LDP,-2.2935_LDP,
	9 , -1.3451,-1.6449,-1.9623,-2.2935,

	9     0.0261_LDP, 0.0263_LDP, 0.0268_LDP, 0.0278_LDP, 0.0297_LDP, 0.0328_LDP, 0.0377_LDP, 0.0464_LDP
	9     0.0261, 0.0263, 0.0268, 0.0278, 0.0297, 0.0328, 0.0377, 0.0464

	9 , 0.0618_LDP, 0.0873_LDP, 0.1284_LDP, 0.1909_LDP, 0.2774_LDP, 0.3866_LDP, 0.5098_LDP, 0.6331_LDP
	9 , 0.0618, 0.0873, 0.1284, 0.1909, 0.2774, 0.3866, 0.5098, 0.6331

	9 , 0.7423_LDP, 0.8265_LDP, 0.8802_LDP, 0.9027_LDP, 0.8963_LDP, 0.8649_LDP, 0.8126_LDP, 0.7438_LDP
	9 , 0.7423, 0.8265, 0.8802, 0.9027, 0.8963, 0.8649, 0.8126, 0.7438

	9 , 0.6617_LDP,
	9 , 0.6617,

	9     0.0406_LDP, 0.0408_LDP, 0.0412_LDP, 0.0418_LDP, 0.0428_LDP, 0.0442_LDP, 0.0472_LDP, 0.0524_LDP
	9     0.0406, 0.0408, 0.0412, 0.0418, 0.0428, 0.0442, 0.0472, 0.0524

	9 , 0.0607_LDP, 0.0745_LDP, 0.0954_LDP, 0.1242_LDP, 0.1568_LDP, 0.1845_LDP, 0.1930_LDP, 0.1671_LDP
	9 , 0.0607, 0.0745, 0.0954, 0.1242, 0.1568, 0.1845, 0.1930, 0.1671

	9 , 0.0966_LDP,-0.0230_LDP,-0.1902_LDP,-0.4001_LDP, -0.6461_LDP,-0.9215_LDP,-1.2201_LDP,-1.5371_LDP
	9 , 0.0966,-0.0230,-0.1902,-0.4001, -0.6461,-0.9215,-1.2201,-1.5371

	9 ,-1.8681_LDP,
	9 ,-1.8681,

	9    -0.1179_LDP,-0.1180_LDP,-0.1181_LDP,-0.1186_LDP,-0.1194_LDP,-0.1207_LDP,-0.1231_LDP,-0.1272_LDP
	9    -0.1179,-0.1180,-0.1181,-0.1186,-0.1194,-0.1207,-0.1231,-0.1272

	9 ,-0.1347_LDP,-0.1479_LDP,-0.1711_LDP,-0.2114_LDP,-0.2795_LDP,-0.3883_LDP,-0.5510_LDP,-0.7764_LDP
	9 ,-0.1347,-0.1479,-0.1711,-0.2114,-0.2795,-0.3883,-0.5510,-0.7764

	9 ,-1.0674_LDP,-1.4208_LDP,-1.8295_LDP,-2.2850_LDP,-2.7791_LDP,-3.3030_LDP,-3.8512_LDP,-4.4179_LDP
	9 ,-1.0674,-1.4208,-1.8295,-2.2850,-2.7791,-3.3030,-3.8512,-4.4179

	9 ,-4.9987_LDP,
	9 ,-4.9987,

	9    0.0722_LDP, 0.0726_LDP, 0.0734_LDP, 0.0752_LDP, 0.0784_LDP, 0.0836_LDP, 0.0922_LDP, 0.1072_LDP
	9    0.0722, 0.0726, 0.0734, 0.0752, 0.0784, 0.0836, 0.0922, 0.1072

	9 , 0.1329_LDP, 0.1743_LDP, 0.2374_LDP, 0.3273_LDP, 0.4431_LDP, 0.5790_LDP, 0.7229_LDP, 0.8606_LDP
	9 , 0.1329, 0.1743, 0.2374, 0.3273, 0.4431, 0.5790, 0.7229, 0.8606

	9 , 0.9789_LDP, 1.0686_LDP, 1.1259_LDP, 1.1502_LDP, 1.1447_LDP, 1.1139_LDP, 1.0622_LDP, 0.9934_LDP
	9 , 0.9789, 1.0686, 1.1259, 1.1502, 1.1447, 1.1139, 1.0622, 0.9934

	9 , 0.9115_LDP,
	9 , 0.9115,

	9    0.0962_LDP, 0.0965_LDP, 0.0971_LDP, 0.0985_LDP, 0.1008_LDP, 0.1047_LDP, 0.1115_LDP, 0.1231_LDP
	9    0.0962, 0.0965, 0.0971, 0.0985, 0.1008, 0.1047, 0.1115, 0.1231

	9 , 0.1424_LDP, 0.1729_LDP, 0.2169_LDP, 0.2749_LDP, 0.3389_LDP, 0.3952_LDP, 0.4263_LDP, 0.4161_LDP
	9 , 0.1424, 0.1729, 0.2169, 0.2749, 0.3389, 0.3952, 0.4263, 0.4161

	9 , 0.3555_LDP, 0.2419_LDP, 0.0783_LDP,-0.1296_LDP,-0.3745_LDP,-0.6492_LDP,-0.9476_LDP,-1.2643_LDP
	9 , 0.3555, 0.2419, 0.0783,-0.1296,-0.3745,-0.6492,-0.9476,-1.2643

	9 ,-1.5952_LDP
	9 ,-1.5952

	1 ,0.0535_LDP,0.0537_LDP,0.0539_LDP,0.0542_LDP,0.0548_LDP,0.0559_LDP,0.0577_LDP
	1 ,0.0535,0.0537,0.0539,0.0542,0.0548,0.0559,0.0577

	1 ,0.0604_LDP,0.0641_LDP,0.0685_LDP,0.0698_LDP,0.0603_LDP,0.0255_LDP,-0.0530_LDP,-0.1914_LDP
	1 ,0.0604,0.0641,0.0685,0.0698,0.0603,0.0255,-0.0530,-0.1914

	1 ,-0.3998_LDP,-0.6799_LDP,-1.0266_LDP,-1.4314_LDP,-1.8846_LDP,-2.3773_LDP,-2.9008_LDP
	1 ,-0.3998,-0.6799,-1.0266,-1.4314,-1.8846,-2.3773,-2.9008

	1 ,-3.4484_LDP,-4.0148_LDP,-4.5953_LDP
	1 ,-3.4484,-4.0148,-4.5953

	1 ,-0.2200_LDP,-0.2222_LDP,-0.2229_LDP,-0.2233_LDP,-0.2250_LDP,-0.2290_LDP,-0.2366_LDP
	1 ,-0.2200,-0.2222,-0.2229,-0.2233,-0.2250,-0.2290,-0.2366

	1 ,-0.2498_LDP,-0.2729_LDP,-0.3128_LDP,-0.3804_LDP,-0.4908_LDP,-0.6615_LDP,-0.9098_LDP
	1 ,-0.2498,-0.2729,-0.3128,-0.3804,-0.4908,-0.6615,-0.9098

	1 ,-1.2458_LDP,-1.6720_LDP,-2.1827_LDP,-2.7686_LDP,-3.4167_LDP,-4.1164_LDP,-4.8570_LDP
	1 ,-1.2458,-1.6720,-2.1827,-2.7686,-3.4167,-4.1164,-4.8570

	1 ,-5.6292_LDP,-6.4264_LDP,-7.2427_LDP,-8.0728_LDP
	1 ,-5.6292,-6.4264,-7.2427,-8.0728

	1 ,25*0.00_LDP
	1 ,25*0.00

	1 ,25*0.00_LDP
	1 ,25*0.00

	1 ,0.1316_LDP,0.1330_LDP,0.1336_LDP,0.1343_LDP,0.1362_LDP,0.1401_LDP,0.1468_LDP,0.1576_LDP
	1 ,0.1316,0.1330,0.1336,0.1343,0.1362,0.1401,0.1468,0.1576

	1 ,0.1738_LDP,0.1956_LDP,0.2196_LDP,0.2353_LDP,0.2242_LDP,0.1647_LDP,0.0400_LDP,-0.1594_LDP
	1 ,0.1738,0.1956,0.2196,0.2353,0.2242,0.1647,0.0400,-0.1594

	1 ,-0.4340_LDP,-0.7778_LDP,-1.1804_LDP,-1.6328_LDP,-2.1247_LDP,-2.6478_LDP,-3.1955_LDP
	1 ,-0.4340,-0.7778,-1.1804,-1.6328,-2.1247,-2.6478,-3.1955

	1 ,-3.7616_LDP,-4.3421_LDP
	1 ,-3.7616,-4.3421

	1 ,-0.1538_LDP,-0.1557_LDP,-0.1563_LDP,-0.1568_LDP,-0.1584_LDP,-0.1624_LDP,-0.1699_LDP
	1 ,-0.1538,-0.1557,-0.1563,-0.1568,-0.1584,-0.1624,-0.1699

	1 ,-0.1828_LDP,-0.2055_LDP,-0.2452_LDP,-0.3129_LDP,-0.4240_LDP,-0.5962_LDP,-0.8461_LDP
	1 ,-0.1828,-0.2055,-0.2452,-0.3129,-0.4240,-0.5962,-0.8461

	1 ,-1.1834_LDP,-1.6105_LDP,-2.1220_LDP,-2.7084_LDP,-3.3568_LDP,-4.0567_LDP,-4.7978_LDP
	1 ,-1.1834,-1.6105,-2.1220,-2.7084,-3.3568,-4.0567,-4.7978

	1 ,-5.5715_LDP,-6.3499_LDP,-7.2789_LDP,-8.8584_LDP
	1 ,-5.5715,-6.3499,-7.2789,-8.8584

	1 ,25*0.00_LDP
	1 ,25*0.00

	1 ,25*0.00_LDP
	1 ,25*0.00

	1 ,0.1801_LDP,0.1826_LDP,0.1839_LDP,0.1855_LDP,0.1891_LDP,0.1961_LDP,0.2080_LDP,0.2272_LDP
	1 ,0.1801,0.1826,0.1839,0.1855,0.1891,0.1961,0.2080,0.2272

	1 ,0.2562_LDP,0.2952_LDP,0.3390_LDP,0.3741_LDP,0.3795_LDP,0.3326_LDP,0.2163_LDP,0.0219_LDP
	1 ,0.2562,0.2952,0.3390,0.3741,0.3795,0.3326,0.2163,0.0219

	1 ,-0.2497_LDP,-0.5916_LDP,-0.9934_LDP,-1.4450_LDP,-1.9367_LDP,-2.4596_LDP,-3.0070_LDP
	1 ,-0.2497,-0.5916,-0.9934,-1.4450,-1.9367,-2.4596,-3.0070

	1 ,-3.5734_LDP,-4.1537_LDP
	1 ,-3.5734,-4.1537

	1 ,-0.1179_LDP,-0.1201_LDP,-0.1207_LDP,-0.1211_LDP,-0.1227_LDP,-0.1266_LDP,-0.1336_LDP
	1 ,-0.1179,-0.1201,-0.1207,-0.1211,-0.1227,-0.1266,-0.1336

	1 ,-0.1469_LDP,-0.1698_LDP,-0.2078_LDP,-0.2820_LDP,-0.3663_LDP,-0.5442_LDP,-0.9124_LDP
	1 ,-0.1469,-0.1698,-0.2078,-0.2820,-0.3663,-0.5442,-0.9124

	1 ,-0.9628_LDP,-2.2915_LDP,-2.0916_LDP,-2.6727_LDP,-3.3259_LDP,-4.0265_LDP
	1 ,-0.9628,-2.2915,-2.0916,-2.6727,-3.3259,-4.0265

	1 ,-4.7676_LDP,-5.5414_LDP,-6.3198_LDP,-7.2490_LDP,-8.8284_LDP/
	1 ,-4.7676,-5.5414,-6.3198,-7.2490,-8.8284/


hydcrossl.f

	U=(NU-NUION)/3.2882_LDP/Z/Z
	U=(NU-NUION)/3.2882D0/Z/Z

	IF( N .NE. NSAV .OR. .NOT. EQUAL(U,USAV,1.0E-03_LDP) )THEN
	IF( N .NE. NSAV .OR. .NOT. EQUAL(U,USAV,1.0D-03) )THEN

	HYDCROSSL=0.0_LDP
	HYDCROSSL=0.0D0

	GSUM=0.0_LDP
	GSUM=0.0D0

	  HYDCROSSL=HYDCROSSL+(2.0_LDP*L+1.0_LDP)*SIGMA(L)
	  HYDCROSSL=HYDCROSSL+(2.0D0*L+1.0D0)*SIGMA(L)

	  GSUM=GSUM+(2.0_LDP*L+1.0_LDP)
	  GSUM=GSUM+(2.0D0*L+1.0D0)

	HYDCROSSL=2.815E-06_LDP*HYDCROSSL*( (Z/NU/NEF)**4 )*NU/N
	HYDCROSSL=2.815D-06*HYDCROSSL*( (Z/NU/NEF)**4 )*NU/N


hydro_terms.f

	dP_CON=1.0E-06_LDP*BOLTZMANN_CONSTANT()/MEAN_ATOMIC_WEIGHT/
	dP_CON=1.0D-06*BOLTZMANN_CONSTANT()/MEAN_ATOMIC_WEIGHT/

	GRAV_CON=1.0E-20_LDP*GRAVITATIONAL_CONSTANT()*STARS_MASS*MASS_SUN()
	GRAV_CON=1.0D-20*GRAVITATIONAL_CONSTANT()*STARS_MASS*MASS_SUN()

	RAD_CON=1.0E-30_LDP*LUM_SUN()/ATOMIC_MASS_UNIT()/4.0_LDP/FUN_PI()/
	RAD_CON=1.0D-30*LUM_SUN()/ATOMIC_MASS_UNIT()/4.0D0/FUN_PI()/

	  VdVdR=V(I)*V(I)*(SIGMA(I)+1.0_LDP)/R(I)
	  VdVdR=V(I)*V(I)*(SIGMA(I)+1.0D0)/R(I)

	  ERROR=200.0_LDP*(VdVdR+dPdR_ON_ROH-g_TOT)/
	  ERROR=200.0D0*(VdVdR+dPdR_ON_ROH-g_TOT)/

	  IF(R(I) .GT. 9.99E+04_LDP)THEN
	  IF(R(I) .GT. 9.99E+04)THEN


hydro_terms_v2.f

	dP_CON=1.0E-06_LDP*BOLTZMANN_CONSTANT()/MEAN_ATOMIC_WEIGHT/
	dP_CON=1.0D-06*BOLTZMANN_CONSTANT()/MEAN_ATOMIC_WEIGHT/

	GRAV_CON=1.0E-20_LDP*GRAVITATIONAL_CONSTANT()*STARS_MASS*MASS_SUN()
	GRAV_CON=1.0D-20*GRAVITATIONAL_CONSTANT()*STARS_MASS*MASS_SUN()

	RAD_CON=1.0E-30_LDP*LUM_SUN()/ATOMIC_MASS_UNIT()/4.0_LDP/FUN_PI()/
	RAD_CON=1.0D-30*LUM_SUN()/ATOMIC_MASS_UNIT()/4.0D0/FUN_PI()/

	  VdVdR=V(I)*V(I)*(SIGMA(I)+1.0_LDP)/R(I)
	  VdVdR=V(I)*V(I)*(SIGMA(I)+1.0D0)/R(I)

	  ERROR=200.0_LDP*(VdVdR+dPdR_ON_ROH-g_TOT)/
	  ERROR=200.0D0*(VdVdR+dPdR_ON_ROH-g_TOT)/

	  IF(R(I) .GT. 9.99E+04_LDP)THEN
	  IF(R(I) .GT. 9.99D+04)THEN


hydro_terms_v3.f

	dP_CON=1.0E-06_LDP*BOLTZMANN_CONSTANT()/MEAN_ATOMIC_WEIGHT/
	dP_CON=1.0D-06*BOLTZMANN_CONSTANT()/MEAN_ATOMIC_WEIGHT/

	GRAV_CON=1.0E-20_LDP*GRAVITATIONAL_CONSTANT()*STARS_MASS*MASS_SUN()
	GRAV_CON=1.0D-20*GRAVITATIONAL_CONSTANT()*STARS_MASS*MASS_SUN()

	RAD_CON=1.0E-30_LDP*LUM_SUN()/ATOMIC_MASS_UNIT()/4.0_LDP/FUN_PI()/
	RAD_CON=1.0D-30*LUM_SUN()/ATOMIC_MASS_UNIT()/4.0D0/FUN_PI()/

	  VdVdR=V(I)*V(I)*(SIGMA(I)+1.0_LDP)/R(I)
	  VdVdR=V(I)*V(I)*(SIGMA(I)+1.0D0)/R(I)

	  ERROR=200.0_LDP*(VdVdR+dPdR_ON_ROH-g_TOT)/
	  ERROR=200.0D0*(VdVdR+dPdR_ON_ROH-g_TOT)/

	  IF(R(I) .GT. 9.99E+04_LDP)THEN
	  IF(R(I) .GT. 9.99D+04)THEN

	    IF(ABS(BAND_FLUX(I,J)) .LT. 1.0E-80_LDP)BAND_FLUX(I,J)=1.0E-80_LDP
	    IF(ABS(BAND_FLUX(I,J)) .LT. 1.0D-80)BAND_FLUX(I,J)=1.0D-80


hydro_terms_v4.f

	ERROR_SUM=0.0_LDP
	ERROR_SUM=0.0D0

	ERROR_SQ=0.0_LDP
	ERROR_SQ=0.0D0

	ERROR_MAX=0.0_LDP
	ERROR_MAX=0.0D0

	dP_CON=1.0E-06_LDP*BOLTZMANN_CONSTANT()/MEAN_ATOMIC_WEIGHT/
	dP_CON=1.0D-06*BOLTZMANN_CONSTANT()/MEAN_ATOMIC_WEIGHT/

	GRAV_CON=1.0E-20_LDP*GRAVITATIONAL_CONSTANT()*STARS_MASS*MASS_SUN()
	GRAV_CON=1.0D-20*GRAVITATIONAL_CONSTANT()*STARS_MASS*MASS_SUN()

	RAD_CON=1.0E-30_LDP*LUM_SUN()/ATOMIC_MASS_UNIT()/4.0_LDP/FUN_PI()/
	RAD_CON=1.0D-30*LUM_SUN()/ATOMIC_MASS_UNIT()/4.0D0/FUN_PI()/

	  VdVdR=V(I)*V(I)*(SIGMA(I)+1.0_LDP)/R(I)
	  VdVdR=V(I)*V(I)*(SIGMA(I)+1.0D0)/R(I)

	  ERROR=200.0_LDP*(VdVdR+dPdR_ON_ROH-g_TOT)/
	  ERROR=200.0D0*(VdVdR+dPdR_ON_ROH-g_TOT)/

	  IF(V(I) .LT. 5.0_LDP)THEN
	  IF(V(I) .LT. 5.0D0)THEN

	  IF(R(I) .GT. 9.99E+04_LDP)THEN
	  IF(R(I) .GT. 9.99D+04)THEN

	    IF(ABS(BAND_FLUX(I,J)) .LT. 1.0E-80_LDP)BAND_FLUX(I,J)=1.0E-80_LDP
	    IF(ABS(BAND_FLUX(I,J)) .LT. 1.0D-80)BAND_FLUX(I,J)=1.0D-80

	  IF(ERROR_SQ .GT. 5.0_LDP .OR. ERROR_MAX .GT. 20.0_LDP)THEN
	  IF(ERROR_SQ .GT. 5.0D0 .OR. ERROR_MAX .GT. 20.0D0)THEN


hydro_terms_v5.f

	ERROR_SUM=0.0_LDP
	ERROR_SUM=0.0D0

	ERROR_SQ=0.0_LDP
	ERROR_SQ=0.0D0

	ERROR_MAX=0.0_LDP
	ERROR_MAX=0.0D0

	dP_CON=1.0E-06_LDP*BOLTZMANN_CONSTANT()/MEAN_ATOMIC_WEIGHT/
	dP_CON=1.0D-06*BOLTZMANN_CONSTANT()/MEAN_ATOMIC_WEIGHT/

	PTURB_CON=1.0E+10_LDP*0.5_LDP*PRESSURE_VTURB*PRESSURE_VTURB
	PTURB_CON=1.0D+10*0.5D0*PRESSURE_VTURB*PRESSURE_VTURB

	GRAV_CON=1.0E-20_LDP*GRAVITATIONAL_CONSTANT()*STARS_MASS*MASS_SUN()
	GRAV_CON=1.0D-20*GRAVITATIONAL_CONSTANT()*STARS_MASS*MASS_SUN()

	RAD_CON=1.0E-30_LDP*LUM_SUN()/ATOMIC_MASS_UNIT()/4.0_LDP/FUN_PI()/
	RAD_CON=1.0D-30*LUM_SUN()/ATOMIC_MASS_UNIT()/4.0D0/FUN_PI()/

	T1=0.6667_LDP
	T1=0.6667D0

	T1=0.6667_LDP
	T1=0.6667D0

	IF(PRESSURE_VTURB .EQ. 0.0_LDP)THEN
	IF(PRESSURE_VTURB .EQ. 0.0D0)THEN

	  VdVdR=V(I)*V(I)*(SIGMA(I)+1.0_LDP)/R(I)
	  VdVdR=V(I)*V(I)*(SIGMA(I)+1.0D0)/R(I)

	  dPTURBdR_ON_ROH=PTURB_CON*1.0E-10_LDP*(-2.0_LDP/R(I)-(SIGMA(I)+1.0_LDP)/R(I))
	  dPTURBdR_ON_ROH=PTURB_CON*1.0D-10*(-2.0D0/R(I)-(SIGMA(I)+1.0D0)/R(I))

	  ERROR=200.0_LDP*(VdVdR+dPdR_ON_ROH+dPTURBdR_ON_ROH-g_TOT)/
	  ERROR=200.0D0*(VdVdR+dPdR_ON_ROH+dPTURBdR_ON_ROH-g_TOT)/

	  REV_ERROR=100.0_LDP*(VdVdR+dPdR_ON_ROH+dPTURBdR_ON_ROH-g_TOT)/ABS(g_RAD)
	  REV_ERROR=100.0D0*(VdVdR+dPdR_ON_ROH+dPTURBdR_ON_ROH-g_TOT)/ABS(g_RAD)

	  IF(V(I) .LT. 5.0_LDP)THEN
	  IF(V(I) .LT. 5.0D0)THEN

	  T1=1.0E-06_LDP*BOLTZMANN_CONSTANT()/MEAN_ATOMIC_WEIGHT/ATOMIC_MASS_UNIT()
	  T1=1.0D-06*BOLTZMANN_CONSTANT()/MEAN_ATOMIC_WEIGHT/ATOMIC_MASS_UNIT()

	  SOUND_SPEED=SQRT( T1*T(I)*(1.0_LDP+ED(I)/POP_ATOM(I)) + 0.5_LDP*T2*T2)
	  SOUND_SPEED=SQRT( T1*T(I)*(1.0D0+ED(I)/POP_ATOM(I)) + 0.5D0*T2*T2)

	  IF(TAU(I) .LT. 1.0_LDP)TMP_FMT='F10.3,F10.2,F12.2)'
	  IF(TAU(I) .LT. 1.0D0)TMP_FMT='F10.3,F10.2,F12.2)'

	  IF(TAU(I) .LT. 0.1_LDP)TMP_FMT='ES10.2,F10.2,F12.2)'
	  IF(TAU(I) .LT. 0.1D0)TMP_FMT='ES10.2,F10.2,F12.2)'

	  IF(PRESSURE_VTURB .EQ. 0.0_LDP)THEN
	  IF(PRESSURE_VTURB .EQ. 0.0D0)THEN

	    IF(R(I) .GT. 9.99E+04_LDP)THEN
	    IF(R(I) .GT. 9.99D+04)THEN

	    IF(R(I) .GT. 9.99E+04_LDP)THEN
	    IF(R(I) .GT. 9.99D+04)THEN

	    IF(ABS(BAND_FLUX(I,J)) .LT. 1.0E-80_LDP)BAND_FLUX(I,J)=1.0E-80_LDP
	    IF(ABS(BAND_FLUX(I,J)) .LT. 1.0D-80)BAND_FLUX(I,J)=1.0D-80

	  IF( ABS(LOG10(PHOT_LOGG)-LOGG) .GT. 0.02_LDP )THEN
	  IF( ABS(LOG10(PHOT_LOGG)-LOGG) .GT. 0.02 )THEN

	  IF(ERROR_SQ .GT. 5.0_LDP .OR. ERROR_MAX .GT. 20.0_LDP .OR. T1 .GT. 0.02_LDP)THEN
	  IF(ERROR_SQ .GT. 5.0D0 .OR. ERROR_MAX .GT. 20.0D0 .OR. T1 .GT. 0.02D0)THEN


hyper.f

	  RAT=1.0_LDP
	  RAT=1.0D0

	  RAT=1.0_LDP
	  RAT=1.0D0

	  HYPE=HYPE+1.0_LDP
	  HYPE=HYPE+1.0D0

	  HYPE=1.0_LDP
	  HYPE=1.0D0

	GAMRAT=1.0_LDP
	GAMRAT=1.0D0

	FAC=1.0_LDP
	FAC=1.0D0

	RADSQ=0.25_LDP/FAC(2*L-1)
	RADSQ=0.25D0/FAC(2*L-1)

	T1=(4.0_LDP*MIN/MAX)**(L+1)
	T1=(4.0D0*MIN/MAX)**(L+1)

	Z=-4.0_LDP*N*NP/(N-NP)/(N-NP)
	Z=-4.0D0*N*NP/(N-NP)/(N-NP)


ichrlen.f


impar.f


impar_with_pnt_srce.f


indexx.f


init_temp.f

	      CLUMP_FAC_OLD(I)=1.0_LDP
	      CLUMP_FAC_OLD(I)=1.0D0

	TAU(1)=0.33333_LDP*NEWED(1)*R(1)*6.65E-15_LDP
	TAU(1)=0.33333D0*NEWED(1)*R(1)*6.65D-15

	 TAU(I)=TAU(I-1)+(NEWED(I-1)+NEWED(I))*(R(I-1)-R(I))*0.5_LDP*6.65E-15_LDP
	 TAU(I)=TAU(I-1)+(NEWED(I-1)+NEWED(I))*(R(I-1)-R(I))*0.5*6.65D-15

	TAUOLD(1)=0.33333_LDP*EDOLD(1)*ROLD(1)*6.65E-15_LDP
	TAUOLD(1)=0.33333D0*EDOLD(1)*ROLD(1)*6.65D-15

	1 *(ROLD(I-1)-ROLD(I))*0.5_LDP*6.65E-15_LDP
	1 *(ROLD(I-1)-ROLD(I))*0.5D0*6.65D-15

	LDL=(LUM/LUMOLD)**0.25_LDP
	LDL=(LUM/LUMOLD)**0.25

	T1=0.3333333_LDP/R(ND)/R(ND)
	T1=0.3333333D0/R(ND)/R(ND)

	    T(I)=MLDL*TOLD(NDOLD)*(TAU(I)/TAUOLD(NDOLD))**0.25_LDP
	    T(I)=MLDL*TOLD(NDOLD)*(TAU(I)/TAUOLD(NDOLD))**0.25


init_temp_v2.f

	      CLUMP_FAC_OLD(I)=1.0_LDP
	      CLUMP_FAC_OLD(I)=1.0D0

        TAU(1)=6.65E-15_LDP*NEWED(1)*R(1)
        TAU(1)=6.65D-15*NEWED(1)*R(1)

          TAU(I)=TAU(I-1)+6.65E-15_LDP*(NEWED(I-1)+NEWED(I))*(R(I-1)-R(I))*0.5_LDP
          TAU(I)=TAU(I-1)+6.65D-15*(NEWED(I-1)+NEWED(I))*(R(I-1)-R(I))*0.5D0

          IF(TAU(I) .LE. 1.0_LDP)K=I
          IF(TAU(I) .LE. 1.0D0)K=I

        T1=(1.0_LDP-TAU(K))/(TAU(K+1)-TAU(K))
        T1=(1.0D0-TAU(K))/(TAU(K+1)-TAU(K))

        RTAU1=T1*R(K+1)+(1.0_LDP-T1)*R(K)
        RTAU1=T1*R(K+1)+(1.0D0-T1)*R(K)

        TAU(1)=6.65E-15_LDP*NEWED(1)*R(1)/3.0_LDP
        TAU(1)=6.65D-15*NEWED(1)*R(1)/3.0D0

          TAU(I)=TAU(I-1)+6.65E-15_LDP*(NEWED(I-1)+NEWED(I))*(R(I-1)-R(I))*0.5_LDP
          TAU(I)=TAU(I-1)+6.65D-15*(NEWED(I-1)+NEWED(I))*(R(I-1)-R(I))*0.5D0

        TAUOLD(1)=6.65E-15_LDP*EDOLD(1)*ROLD(1)
        TAUOLD(1)=6.65D-15*EDOLD(1)*ROLD(1)

          TAUOLD(I)=TAUOLD(I-1)+6.65E-15_LDP*(EDOLD(I-1)+EDOLD(I))*
          TAUOLD(I)=TAUOLD(I-1)+6.65D-15*(EDOLD(I-1)+EDOLD(I))*

	1             (ROLD(I-1)-ROLD(I))*0.5_LDP
	1             (ROLD(I-1)-ROLD(I))*0.5D0

          IF(TAUOLD(I) .LE. 1.0_LDP)K=I
          IF(TAUOLD(I) .LE. 1.0D0)K=I

        T1=(1.0_LDP-TAUOLD(K))/(TAUOLD(K+1)-TAUOLD(K))
        T1=(1.0D0-TAUOLD(K))/(TAUOLD(K+1)-TAUOLD(K))

        RTAU1_OLD=T1*ROLD(K+1)+(1.0_LDP-T1)*ROLD(K)
        RTAU1_OLD=T1*ROLD(K+1)+(1.0D0-T1)*ROLD(K)

        TAUOLD(1)=6.65E-15_LDP*EDOLD(1)*ROLD(1)/3.0_LDP
        TAUOLD(1)=6.65D-15*EDOLD(1)*ROLD(1)/3.0D0

          TAUOLD(I)=TAUOLD(I-1)+6.65E-15_LDP*(EDOLD(I-1)+EDOLD(I))*
          TAUOLD(I)=TAUOLD(I-1)+6.65D-15*(EDOLD(I-1)+EDOLD(I))*

	1            (ROLD(I-1)-ROLD(I))*0.5_LDP
	1            (ROLD(I-1)-ROLD(I))*0.5D0

        LDL=(LUM*RTAU1_OLD*RTAU1_OLD/LUMOLD/RTAU1/RTAU1)**0.25_LDP
        LDL=(LUM*RTAU1_OLD*RTAU1_OLD/LUMOLD/RTAU1/RTAU1)**0.25D0

	    T(I)=MLDL*TOLD(NDOLD)*(TAU(I)/TAUOLD(NDOLD))**0.25_LDP
	    T(I)=MLDL*TOLD(NDOLD)*(TAU(I)/TAUOLD(NDOLD))**0.25D0


ins_line_obs_v2.f

	C_KMS=1.0E-05_LDP*SPEED_OF_LIGHT()
	C_KMS=1.0D-05*SPEED_OF_LIGHT()

	MAX_B_EXTENT  = 1.0_LDP+(OBS_PRO_EXT_RAT*VINF+3.0_LDP*V_DOP)/C_KMS
	MAX_B_EXTENT  = 1.0D0+(OBS_PRO_EXT_RAT*VINF+3.0D0*V_DOP)/C_KMS

	MAX_R_EXTENT  = 1.0_LDP-(OBS_PRO_EXT_RAT*VINF+3.0_LDP*V_DOP)/C_KMS
	MAX_R_EXTENT  = 1.0D0-(OBS_PRO_EXT_RAT*VINF+3.0D0*V_DOP)/C_KMS

	MAX_RW_EXTENT = 1.0_LDP-(ES_WING_EXT+4.0_LDP*VINF)/C_KMS
	MAX_RW_EXTENT = 1.0D0-(ES_WING_EXT+4.0D0*VINF)/C_KMS

	MAX_BW_EXTENT = 1.0_LDP+(ES_WING_EXT+VINF)/C_KMS
	MAX_BW_EXTENT = 1.0D0+(ES_WING_EXT+VINF)/C_KMS

	MAX_BW_EXTENT = MAX(MAX_BW_EXTENT,MAX_B_EXTENT+2.0_LDP*dV_OBS_BIG)
	MAX_BW_EXTENT = MAX(MAX_BW_EXTENT,MAX_B_EXTENT+2.0D0*dV_OBS_BIG)

	PROF_SPACING = 1.0_LDP-dV_OBS_PROF/C_KMS
	PROF_SPACING = 1.0D0-dV_OBS_PROF/C_KMS

	WING_SPACING = 1.0_LDP-dV_OBS_WING/C_KMS
	WING_SPACING = 1.0D0-dV_OBS_WING/C_KMS

	BIG_SPACING  = 1.0_LDP-dV_OBS_BIG/C_KMS
	BIG_SPACING  = 1.0D0-dV_OBS_BIG/C_KMS

	1         MAX_BW_EXTENT*(1.0_LDP+0.1_LDP*dV_OBS_WING/C_KMS) )THEN
	1         MAX_BW_EXTENT*(1.0D0+0.1D0*dV_OBS_WING/C_KMS) )THEN

	       I=C_KMS*T1/(FREQ(INDX)+0.5_LDP*T1)/dV_OBS_WING
	       I=C_KMS*T1/(FREQ(INDX)+0.5*T1)/dV_OBS_WING


ins_line_obs_v3.f

	C_KMS=1.0E-05_LDP*SPEED_OF_LIGHT()
	C_KMS=1.0D-05*SPEED_OF_LIGHT()

	MAX_B_EXTENT  = 1.0_LDP+(OBS_PRO_EXT_RAT*VINF+3.0_LDP*V_DOP)/C_KMS
	MAX_B_EXTENT  = 1.0D0+(OBS_PRO_EXT_RAT*VINF+3.0D0*V_DOP)/C_KMS

	MAX_R_EXTENT  = 1.0_LDP-(OBS_PRO_EXT_RAT*VINF+3.0_LDP*V_DOP)/C_KMS
	MAX_R_EXTENT  = 1.0D0-(OBS_PRO_EXT_RAT*VINF+3.0D0*V_DOP)/C_KMS

	MAX_RW_EXTENT = 1.0_LDP-(ES_WING_EXT+4.0_LDP*VINF)/C_KMS
	MAX_RW_EXTENT = 1.0D0-(ES_WING_EXT+4.0D0*VINF)/C_KMS

	MAX_BW_EXTENT = 1.0_LDP+(ES_WING_EXT+VINF)/C_KMS
	MAX_BW_EXTENT = 1.0D0+(ES_WING_EXT+VINF)/C_KMS

	MAX_BW_EXTENT = MAX(MAX_BW_EXTENT,MAX_B_EXTENT+2.0_LDP*dV_OBS_BIG/C_KMS)
	MAX_BW_EXTENT = MAX(MAX_BW_EXTENT,MAX_B_EXTENT+2.0D0*dV_OBS_BIG/C_KMS)

	MAX_R_EXTENT=MAX(0.2_LDP,MAX_R_EXTENT)
	MAX_R_EXTENT=MAX(0.2D0,MAX_R_EXTENT)

	MAX_B_EXTENT=MIN(1.8_LDP,MAX_B_EXTENT)
	MAX_B_EXTENT=MIN(1.8D0,MAX_B_EXTENT)

	MAX_RW_EXTENT=MAX(0.19_LDP,MAX_RW_EXTENT)
	MAX_RW_EXTENT=MAX(0.19D0,MAX_RW_EXTENT)

	MAX_BW_EXTENT=MIN(1.81_LDP,MAX_BW_EXTENT)
	MAX_BW_EXTENT=MIN(1.81D0,MAX_BW_EXTENT)

	PROF_SPACING = 1.0_LDP-dV_OBS_PROF/C_KMS
	PROF_SPACING = 1.0D0-dV_OBS_PROF/C_KMS

	WING_SPACING = 1.0_LDP-dV_OBS_WING/C_KMS
	WING_SPACING = 1.0D0-dV_OBS_WING/C_KMS

	BIG_SPACING  = 1.0_LDP-dV_OBS_BIG/C_KMS
	BIG_SPACING  = 1.0D0-dV_OBS_BIG/C_KMS

	1         MAX_BW_EXTENT*(1.0_LDP+0.1_LDP*dV_OBS_WING/C_KMS) )THEN
	1         MAX_BW_EXTENT*(1.0D0+0.1D0*dV_OBS_WING/C_KMS) )THEN

	       I=C_KMS*T1/(FREQ(INDX)+0.5_LDP*T1)/dV_OBS_WING
	       I=C_KMS*T1/(FREQ(INDX)+0.5*T1)/dV_OBS_WING


ins_line_obs_v5.f

	C_KMS=1.0E-05_LDP*SPEED_OF_LIGHT()
	C_KMS=1.0D-05*SPEED_OF_LIGHT()

	MAX_B_EXTENT  = 1.0_LDP+(OBS_PRO_EXT_RAT*VINF+3.0_LDP*V_DOP)/C_KMS
	MAX_B_EXTENT  = 1.0D0+(OBS_PRO_EXT_RAT*VINF+3.0D0*V_DOP)/C_KMS

	MAX_R_EXTENT  = 1.0_LDP-(OBS_PRO_EXT_RAT*VINF+3.0_LDP*V_DOP)/C_KMS
	MAX_R_EXTENT  = 1.0D0-(OBS_PRO_EXT_RAT*VINF+3.0D0*V_DOP)/C_KMS

	T1=10000.0_LDP
	T1=10000.0D0

	T1=MIN(T1,4.0_LDP*VINF)
	T1=MIN(T1,4.0D0*VINF)

	MAX_RW_EXTENT = 1.0_LDP-(ES_WING_EXT+T1)/C_KMS
	MAX_RW_EXTENT = 1.0D0-(ES_WING_EXT+T1)/C_KMS

	MAX_BW_EXTENT = 1.0_LDP+(ES_WING_EXT+VINF)/C_KMS
	MAX_BW_EXTENT = 1.0D0+(ES_WING_EXT+VINF)/C_KMS

	MAX_BW_EXTENT = MAX(MAX_BW_EXTENT,MAX_B_EXTENT+2.0_LDP*dV_OBS_BIG/C_KMS)
	MAX_BW_EXTENT = MAX(MAX_BW_EXTENT,MAX_B_EXTENT+2.0D0*dV_OBS_BIG/C_KMS)

	DO WHILE( FREQ(INDX) .GT. 1.1_LDP*NU_MIN )
	DO WHILE( FREQ(INDX) .GT. 1.1D0*NU_MIN )

	  T3=1.0_LDP
	  T3=1.0D0

	          T3=1.0_LDP + C_KMS*ABS(T3-NU_LINE(K)/FREQ(INDX))/VEC_VMIN_VDOP(K)
	          T3=1.0D0 + C_KMS*ABS(T3-NU_LINE(K)/FREQ(INDX))/VEC_VMIN_VDOP(K)


ins_line_v4.f

	C_KMS=1.0E-05_LDP*SPEED_OF_LIGHT()
	C_KMS=1.0D-05*SPEED_OF_LIGHT()

	IF(R_CMF_WING_EXT .LT. 2.0_LDP .OR. R_CMF_WING_EXT .GT. 20.0_LDP)THEN
	IF(R_CMF_WING_EXT .LT. 2.0D0 .OR. R_CMF_WING_EXT .GT. 20.0D0)THEN

	IF(ES_WING_EXT .LT. 0.0_LDP .OR. ES_WING_EXT .GT. 20000.0_LDP)THEN
	IF(ES_WING_EXT .LT. 0.0D0 .OR. ES_WING_EXT .GT. 20000.0D0)THEN

	IF(MAX_DOP .LT. 2.0_LDP .OR. MAX_DOP .GT. 20.0_LDP)THEN
	IF(MAX_DOP .LT. 2.0D0 .OR. MAX_DOP .GT. 20.0D0)THEN

	IF(dV_CMF_PROF .LT. 1.0_LDP .OR. dV_CMF_PROF .GT. 1.0E+05_LDP)THEN
	IF(dV_CMF_PROF .LT. 1.0D0 .OR. dV_CMF_PROF .GT. 1.0D+05)THEN

	IF(dV_CMF_WING .LT. 1.0_LDP .OR. dV_CMF_WING .GT. 1.0E+05_LDP)THEN
	IF(dV_CMF_WING .LT. 1.0D0 .OR. dV_CMF_WING .GT. 1.0D+05)THEN

	RES_EXTENT=(1.0_LDP+dNU_on_NU)**NDOP
	RES_EXTENT=(1.0D0+dNU_on_NU)**NDOP

	EDGE_SEP_FAC=0.1_LDP
	EDGE_SEP_FAC=0.1D0

	MIN_FREQ_RAT=1.0_LDP+EDGE_SEP_FAC*dNU_on_NU
	MIN_FREQ_RAT=1.0D0+EDGE_SEP_FAC*dNU_on_NU

	APP_RES_EXT=RES_EXTENT*(1.0_LDP+0.5_LDP*dNU_on_NU)	!No units
	APP_RES_EXT=RES_EXTENT*(1.0D0+0.5D0*dNU_on_NU)	!No units

	APP_ESBW_EXT=1.0_LDP+(BLUE_WING_EXT+0.2_LDP*dV_CMF_WING)/C_KMS
	APP_ESBW_EXT=1.0D0+(BLUE_WING_EXT+0.2D0*dV_CMF_WING)/C_KMS

	  IF( ABS(NU_CONT(I-1)/NU_CONT(I)-1.0_LDP) .LT. 1.0E-08_LDP)THEN
	  IF( ABS(NU_CONT(I-1)/NU_CONT(I)-1.0D0) .LT. 1.0D-08)THEN

          ELSE IF( NU_CONT(ML) .GE. FREQ(INDX)/(1.0_LDP+0.2_LDP*dNU_on_NU)
          ELSE IF( NU_CONT(ML) .GE. FREQ(INDX)/(1.0D0+0.2D0*dNU_on_NU)

	    T1=FREQ(INDX)/(1.0_LDP+1.1_LDP*dV_CMF_WING/C_KMS)
	    T1=FREQ(INDX)/(1.0D0+1.1D0*dV_CMF_WING/C_KMS)

	1               FREQ(INDX)*C_KMS/dV_CMF_WING - 0.1_LDP)
	1               FREQ(INDX)*C_KMS/dV_CMF_WING - 0.1D0)

	      T1=NU_LINE(LN_INDX)*(1.0_LDP+dNU_on_NU)**(-I)
	      T1=NU_LINE(LN_INDX)*(1.0D0+dNU_on_NU)**(-I)

	          T1=FREQ(INDX)/(1.0_LDP+dNU_on_NU)
	          T1=FREQ(INDX)/(1.0D0+dNU_on_NU)

	1              (1.0_LDP+RED_WING_EXT/C_KMS)
	1              (1.0D0+RED_WING_EXT/C_KMS)

	1              (1.0_LDP+(2.0_LDP*VINF+dV_CMF_PROF)/C_KMS)
	1              (1.0D0+(2.0D0*VINF+dV_CMF_PROF)/C_KMS)

	    T1=RES_EXTENT*(1.0_LDP+0.3_LDP*MIN(dV_CMF_PROF,dV_CMF_WING)/C_KMS)
	    T1=RES_EXTENT*(1.0D0+0.3D0*MIN(dV_CMF_PROF,dV_CMF_WING)/C_KMS)

	        TEMP_FREQ=FREQ(INDX)/(1.0_LDP+dV_CMF_PROF/C_KMS)
	        TEMP_FREQ=FREQ(INDX)/(1.0D0+dV_CMF_PROF/C_KMS)

	        TEMP_FREQ=FREQ(INDX)/(1.0_LDP+dV_CMF_WING/C_KMS)
	        TEMP_FREQ=FREQ(INDX)/(1.0D0+dV_CMF_WING/C_KMS)

	T1=10000.0_LDP
	T1=10000.0D0


ins_line_v6.f


integrate.f

	TA(1)=H0*(F(1)+0.5_LDP*H0*(F01-H0*(F012/3.0_LDP-(H0*0.5_LDP
	TA(1)=H0*(F(1)+0.5D0*H0*(F01-H0*(F012/3.0D0-(H0*0.5D0

	1             +(H1-H0)/3.0_LDP)*F0123)))
	1             +(H1-H0)/3.0D0)*F0123)))

	  TA(I)=0.5_LDP*H1*(F(I)+F(I+1)-H1*H1/6.0_LDP*
	  TA(I)=0.5D0*H1*(F(I)+F(I+1)-H1*H1/6.0D0*

	TA(ND-1)=TA(ND-2)+H2*(F(ND)-H2*(0.5_LDP*F23+H2*(F123/6.0_LDP
	TA(ND-1)=TA(ND-2)+H2*(F(ND)-H2*(0.5D0*F23+H2*(F123/6.0D0

	1          +F0123*(0.25_LDP*H2+(H1-H2)/6.0_LDP))))
	1          +F0123*(0.25D0*H2+(H1-H2)/6.0D0))))


interp_knowncoeef.f

	  CHIEXT(I)=0.0_LDP
	  CHIEXT(I)=0.0D0


jfeau_ibc.f

	RJ(:)=0.0_LDP
	RJ(:)=0.0D0

	  RJ(ND)=R(ND)*R(ND)*DBB/CHI(ND)/3.0_LDP
	  RJ(ND)=R(ND)*R(ND)*DBB/CHI(ND)/3.0D0

	  RJ(ND)=R(ND)*R(ND)*IC*(0.25_LDP+0.5_LDP*INBC)
	  RJ(ND)=R(ND)*R(ND)*IC*(0.25D0+0.5D0*INBC)


jfeau_ibc_v2.f

	RJ(:)=0.0_LDP
	RJ(:)=0.0D0

	TA(1)=0.0_LDP
	TA(1)=0.0D0

	  T1=0.5_LDP*(DTAU(I-1)+DTAU(I))
	  T1=0.5D0*(DTAU(I-1)+DTAU(I))

	  TB(I)=R(I)*R(I)*((1.0_LDP-THETA(I))/Q(I)
	  TB(I)=R(I)*R(I)*((1.0D0-THETA(I))/Q(I)

	1        +F(I)*Q(I)*(1.0_LDP/DTAU(I)+1.0_LDP/DTAU(I-1))/T1)
	1        +F(I)*Q(I)*(1.0D0/DTAU(I)+1.0D0/DTAU(I-1))/T1)

          TC(ND)=0.0_LDP
          TC(ND)=0.0D0

          TC(ND)=0.0_LDP
          TC(ND)=0.0D0

          TC(ND)=0.0_LDP
          TC(ND)=0.0D0

	  RJ(ND)=R(ND)*R(ND)*DBB/CHI(ND)/3.0_LDP
	  RJ(ND)=R(ND)*R(ND)*DBB/CHI(ND)/3.0D0

	  RJ(ND)=R(ND)*R(ND)*IC*(0.25_LDP+0.5_LDP*INBC)
	  RJ(ND)=R(ND)*R(ND)*IC*(0.25D0+0.5D0*INBC)

	  RJ(ND)=0.0_LDP
	  RJ(ND)=0.0D0


jgrey.f

	RJ(:)=0.0_LDP
	RJ(:)=0.0D0

	NEWRJ(:)=0.0_LDP
	NEWRJ(:)=0.0D0

	NEWRK(:)=0.0_LDP
	NEWRK(:)=0.0D0

	HBCNEW=0.0_LDP
	HBCNEW=0.0D0

	T1=3.826E+13_LDP*LUM/16.0_LDP/(3.141592654_LDP)**2.0
	T1=3.826D+13*LUM/16.0D0/(3.141592654D0)**2.0

	DBB=3.0_LDP*T1/R(ND)/R(ND)
	DBB=3.0D0*T1/R(ND)/R(ND)

	  XM(1)=0.0_LDP
	  XM(1)=0.0D0

	  DTAU(1)=0.5_LDP*Z(1)*(CHI(1)+CHI(2))		!Z(2)=0.0
	  DTAU(1)=0.5D0*Z(1)*(CHI(1)+CHI(2))		!Z(2)=0.0

	  E2=1.0_LDP-(1.0_LDP-E1)/DTAU(1)
	  E2=1.0D0-(1.0D0-E1)/DTAU(1)

	  E3=(1.0_LDP-E1)/DTAU(1)-E1
	  E3=(1.0D0-E1)/DTAU(1)-E1

	  IF(DTAU(1) .LT. 1.0E-03_LDP)THEN
	  IF(DTAU(1) .LT. 1.0D-03)THEN

	    E2=DTAU(1)*0.5_LDP+DTAU(1)*DTAU(1)/6.0_LDP
	    E2=DTAU(1)*0.5D0+DTAU(1)*DTAU(1)/6.0D0

	    E3=DTAU(1)*0.5_LDP-DTAU(1)*DTAU(1)/3.0_LDP
	    E3=DTAU(1)*0.5D0-DTAU(1)*DTAU(1)/3.0D0

          XM(1)=0.5_LDP*(XM(2)*E1+TA(1)*E2+TA(2)*E3)
          XM(1)=0.5D0*(XM(2)*E1+TA(1)*E2+TA(2)*E3)


jgrey_with_fvt.f

	C_KMS=1.0E-05_LDP*SPEED_OF_LIGHT()
	C_KMS=1.0D-05*SPEED_OF_LIGHT()

	PI=ACOS(-1.0_LDP)
	PI=ACOS(-1.0D0)

	  F(I)=0.33333_LDP
	  F(I)=0.33333D0

	  N_ON_H(I)=0.5_LDP
	  N_ON_H(I)=0.5D0

	HBC=1.0_LDP
	HBC=1.0D0

	IN_HBC=0.2_LDP
	IN_HBC=0.2D0

	IBOUND=0.0_LDP
	IBOUND=0.0D0

	  CHI_MOD(I)=CHI(I)+BETA(I)/R(I)*(1.0_LDP+SIGMA(I)*N_ON_H(I))
	  CHI_MOD(I)=CHI(I)+BETA(I)/R(I)*(1.0D0+SIGMA(I)*N_ON_H(I))

	  AVE_DTAU(I)=0.5_LDP*(DTAU(I)+DTAU(I-1))
	  AVE_DTAU(I)=0.5D0*(DTAU(I)+DTAU(I-1))

	  JFAC(I)=BETA(I)*(1.0_LDP+SIGMA(I)*F(I))/R(I)/Q(I)/CHI_MOD(I)
	  JFAC(I)=BETA(I)*(1.0D0+SIGMA(I)*F(I))/R(I)/Q(I)/CHI_MOD(I)

          XM(I)=0.0_LDP
          XM(I)=0.0D0

        XM(1)=0.0_LDP
        XM(1)=0.0D0

        TA(1)=0.0_LDP
        TA(1)=0.0D0

	HMOD=3.826E+13_LDP*LUMINOSITY/16.0_LDP/PI/PI
	HMOD=3.826D+13*LUMINOSITY/16.0D0/PI/PI

          XM(ND)=R(ND)*R(ND)*IC*(0.25_LDP+0.5_LDP*IN_HBC)
          XM(ND)=R(ND)*R(ND)*IC*(0.25D0+0.5D0*IN_HBC)

        TC(ND)=0.0_LDP
        TC(ND)=0.0D0

	FS_RSQJ(:)=0.0_LDP
	FS_RSQJ(:)=0.0D0

	FS_RSQH(:)=0.0_LDP
	FS_RSQH(:)=0.0D0

	FS_RSQK(:)=0.0_LDP
	FS_RSQK(:)=0.0D0

	FS_RSQN(:)=0.0_LDP
	FS_RSQN(:)=0.0D0

	HBC=0.0_LDP
	HBC=0.0D0

	T1=3.826E+13_LDP*LUMINOSITY/16.0_LDP/PI/PI
	T1=3.826D+13*LUMINOSITY/16.0D0/PI/PI

	DBB=3.0_LDP*T1/R(ND)/R(ND)
	DBB=3.0D0*T1/R(ND)/R(ND)

	      TA(I)=BETA(I)*(1.0_LDP+SIGMA(I)*T1*T1)/R(I)
	      TA(I)=BETA(I)*(1.0D0+SIGMA(I)*T1*T1)/R(I)

	      TB(1)=0.0_LDP         !Cance so values unimportant
	      TB(1)=0.0D0         !Cance so values unimportant

	      DTAU(I)=0.5_LDP*(Z(I)-Z(I+1))*(CHI_MOD(I)+CHI_MOD(I+1)+(Z(I)-Z(I+1))
	      DTAU(I)=0.5D0*(Z(I)-Z(I+1))*(CHI_MOD(I)+CHI_MOD(I+1)+(Z(I)-Z(I+1))

	1       *(dCHI_MODdR(I+1)*Z(I+1)/R(I+1)-dCHI_MODdR(I)*Z(I)/R(I))/6.0_LDP)
	1       *(dCHI_MODdR(I+1)*Z(I+1)/R(I+1)-dCHI_MODdR(I)*Z(I)/R(I))/6.0D0)

	      VU(I)=1.0_LDP/DTAU(I)
	      VU(I)=1.0D0/DTAU(I)

	    TA(1)=0.0_LDP
	    TA(1)=0.0D0

	    TC(1)=1.0_LDP/DTAU(1)
	    TC(1)=1.0D0/DTAU(1)

	    TB(1)=-1.0_LDP-TC(1)
	    TB(1)=-1.0D0-TC(1)

	      TB(I)=-0.5_LDP*(DTAU(I-1)+DTAU(I))-TA(I)-TC(I)
	      TB(I)=-0.5D0*(DTAU(I-1)+DTAU(I))-TA(I)-TC(I)

	      XM(I)=-RJ(I)*CHI(I)*(DTAU(I-1)+DTAU(I))*0.5_LDP/CHI_MOD(I)
	      XM(I)=-RJ(I)*CHI(I)*(DTAU(I-1)+DTAU(I))*0.5D0/CHI_MOD(I)

	      TB(NI)=-TA(NI)+DTAU(NI-1)/2.0_LDP
	      TB(NI)=-TA(NI)+DTAU(NI-1)/2.0D0

	      XM(NI)=0.5_LDP*DTAU(NI-1)*RJ(NI)*CHI(NI)/CHI_MOD(NI)
	      XM(NI)=0.5D0*DTAU(NI-1)*RJ(NI)*CHI(NI)/CHI_MOD(NI)

	      TB(NI)=1.0_LDP+VU(NI-1)
	      TB(NI)=1.0D0+VU(NI-1)

	    TC(NI)=0.0_LDP
	    TC(NI)=0.0D0

	    XM(1)=0.0_LDP
	    XM(1)=0.0D0

	    DTAU(1)=0.5_LDP*Z(1)*(CHI_MOD(1)+CHI_MOD(2))		!Z(2)=0.0
	    DTAU(1)=0.5D0*Z(1)*(CHI_MOD(1)+CHI_MOD(2))		!Z(2)=0.0

	    E2=1.0_LDP-(1.0_LDP-E1)/DTAU(1)
	    E2=1.0D0-(1.0D0-E1)/DTAU(1)

	    E3=(1.0_LDP-E1)/DTAU(1)-E1
	    E3=(1.0D0-E1)/DTAU(1)-E1

	    IF(DTAU(1) .LT. 1.0E-03_LDP)THEN
	    IF(DTAU(1) .LT. 1.0D-03)THEN

	      E2=DTAU(1)*0.5_LDP+DTAU(1)*DTAU(1)/6.0_LDP
	      E2=DTAU(1)*0.5D0+DTAU(1)*DTAU(1)/6.0D0

	      E3=DTAU(1)*0.5_LDP-DTAU(1)*DTAU(1)/3.0_LDP
	      E3=DTAU(1)*0.5D0-DTAU(1)*DTAU(1)/3.0D0

            XM(1)=0.5_LDP*(XM(2)*E1+TA(1)*E2+TA(2)*E3)
            XM(1)=0.5D0*(XM(2)*E1+TA(1)*E2+TA(2)*E3)

	    CHI_MOD(I)=CHI(I)+BETA(I)/R(I)*(1.0_LDP+SIGMA(I)*N_ON_H(I))
	    CHI_MOD(I)=CHI(I)+BETA(I)/R(I)*(1.0D0+SIGMA(I)*N_ON_H(I))

            XM(I)=0.0_LDP
            XM(I)=0.0D0

          XM(1)=0.0_LDP
          XM(1)=0.0D0

          TA(1)=0.0_LDP
          TA(1)=0.0D0

	  HMOD=3.826E+13_LDP*LUMINOSITY/16.0_LDP/PI/PI
	  HMOD=3.826D+13*LUMINOSITY/16.0D0/PI/PI

            XM(ND)=R(ND)*R(ND)*IC*(0.25_LDP+0.5_LDP*IN_HBC)
            XM(ND)=R(ND)*R(ND)*IC*(0.25D0+0.5D0*IN_HBC)

          TC(ND)=0.0_LDP
          TC(ND)=0.0D0

	  TA(I)=R(I)*VEL(I)*RJ(I)*(1.0_LDP+SIGMA(I)*F(I))/C_KMS
	  TA(I)=R(I)*VEL(I)*RJ(I)*(1.0D0+SIGMA(I)*F(I))/C_KMS

	Q(1)=0.0_LDP
	Q(1)=0.0D0

	  RSQ_HFLUX(ND)=0.0_LDP
	  RSQ_HFLUX(ND)=0.0D0

	    T2=2.0_LDP*(RSQ_HFLUX(I-1)-RSQ_HFLUX(I))/(R(I-1)-R(I+1))
	    T2=2.0D0*(RSQ_HFLUX(I-1)-RSQ_HFLUX(I))/(R(I-1)-R(I+1))

	T1=3.826E+13_LDP*LUMINOSITY/16.0_LDP/PI/PI		!E-20 as R in units of 10^10 cm
	T1=3.826D+13*LUMINOSITY/16.0D0/PI/PI		!E-20 as R in units of 10^10 cm


jnk.f


jtrpwgt.f

	W(:)=0.0_LDP
	W(:)=0.0D0

	  H=0.5_LDP*(X(I)-X(I+1))
	  H=0.5D0*(X(I)-X(I+1))

	  W(N-1)=W(N-1)-2.0_LDP*T1*X(N)*X(N)/3.0_LDP
	  W(N-1)=W(N-1)-2.0D0*T1*X(N)*X(N)/3.0D0

	  W(N)=W(N)+T1*(X(N-1)*X(N-1)-X(N)*X(N)/3.0_LDP)
	  W(N)=W(N)+T1*(X(N-1)*X(N-1)-X(N)*X(N)/3.0D0)

	SUM=0.0_LDP
	SUM=0.0D0

	IF(ABS(SUM-1.0_LDP) .GT. 1.0E-12_LDP)THEN
	IF(ABS(SUM-1.0D0) .GT. 1.0D-12)THEN

	SUM=0.0_LDP
	SUM=0.0D0

	  T1=0.5_LDP
	  T1=0.5D0

	  T1=T1*( X(N)*(X(N-1)*X(N-1)-X(N)*X(N)/3.0_LDP)
	  T1=T1*( X(N)*(X(N-1)*X(N-1)-X(N)*X(N)/3.0D0)

	1        -2.0_LDP*X(N)*X(N)*X(N-1)/3.0_LDP )
	1        -2.0D0*X(N)*X(N)*X(N-1)/3.0D0 )

	  T1=0.5_LDP*(1.0_LDP-X(N)*X(N))+T1
	  T1=0.5D0*(1.0D0-X(N)*X(N))+T1

	IF(ABS(SUM-1.0_LDP) .GT. 1.0E-12_LDP)THEN
	IF(ABS(SUM-1.0D0) .GT. 1.0D-12)THEN


jtrpwgt_v2.f

	W(:)=0.0_LDP
	W(:)=0.0D0

	  W(I)=W(I)+0.5_LDP*dX(I)
	  W(I)=W(I)+0.5D0*dX(I)

	  W(I+1)=W(I+1)+0.5_LDP*dX(I)
	  W(I+1)=W(I+1)+0.5D0*dX(I)

	  W(N-1)=W(N-1)-2.0_LDP*T1*X(N)*X(N)/3.0_LDP
	  W(N-1)=W(N-1)-2.0D0*T1*X(N)*X(N)/3.0D0

	  W(N)=W(N)+T1*(X(N-1)*X(N-1)-X(N)*X(N)/3.0_LDP)
	  W(N)=W(N)+T1*(X(N-1)*X(N-1)-X(N)*X(N)/3.0D0)

	SUM=0.0_LDP
	SUM=0.0D0

	XSUM=0.0_LDP
	XSUM=0.0D0

	  T1=0.5_LDP
	  T1=0.5D0

	  T1=T1*( X(N)*(X(N-1)*X(N-1)-X(N)*X(N)/3.0_LDP)
	  T1=T1*( X(N)*(X(N-1)*X(N-1)-X(N)*X(N)/3.0D0)

	1        -2.0_LDP*X(N)*X(N)*X(N-1)/3.0_LDP )
	1        -2.0D0*X(N)*X(N)*X(N-1)/3.0D0 )

	  T1=0.5_LDP*(1.0_LDP-X(N)*X(N))+T1
	  T1=0.5D0*(1.0D0-X(N)*X(N))+T1

	IF(ABS(XSUM-1.0_LDP) .GT. 1.0E-12_LDP)THEN
	IF(ABS(XSUM-1.0D0) .GT. 1.0D-12)THEN

	  SUM=0.0_LDP
	  SUM=0.0D0


jweight.f

	W(:)=0.0_LDP
	W(:)=0.0D0

	W(1)=0.5_LDP*H-H*H/12.0_LDP/RF-HN*H/RF/12.0_LDP
	W(1)=0.5D0*H-H*H/12.0D0/RF-HN*H/RF/12.0D0

	W(2)=0.5_LDP*H+H*H/RF/6.0_LDP*(1.0_LDP+0.5_LDP*H/HN)+HN*H/RF/12.0_LDP
	W(2)=0.5D0*H+H*H/RF/6.0D0*(1.0D0+0.5D0*H/HN)+HN*H/RF/12.0D0

	W(3)=H*H/RF/12.0_LDP*(-1.0_LDP-H/HN)
	W(3)=H*H/RF/12.0*(-1.0-H/HN)

	  W(I-2)=W(I-2)-H*H/12.0_LDP/RF	
	  W(I-2)=W(I-2)-H*H/12.0D0/RF	

	  W(I-1)=W(I-1)+0.5_LDP*H+H*H/12.0_LDP/RE
	  W(I-1)=W(I-1)+0.5D0*H+H*H/12.0D0/RE

	  W(I)=W(I)+0.5_LDP*H+H*H/12.0_LDP/RF	
	  W(I)=W(I)+0.5D0*H+H*H/12.0D0/RF	

	  W(I+1)=W(I+1)-H*H/12.0_LDP/RE
	  W(I+1)=W(I+1)-H*H/12.0D0/RE

	  W(N-3)=W(N-3)-H*H/RF/12.0_LDP
	  W(N-3)=W(N-3)-H*H/RF/12.0D0

	  W(N-2)=W(N-2)+0.5_LDP*H
	  W(N-2)=W(N-2)+0.5D0*H

	  W(N-1)=W(N-1)+0.5_LDP*(H+2.0_LDP*HN/3.0_LDP)+H*H/HN/6.0_LDP+H*H/12.0_LDP/RF
	  W(N-1)=W(N-1)+0.5D0*(H+2.0D0*HN/3.0D0)+H*H/HN/6.0D0+H*H/12.0D0/RF

	  W(N)=W(N)+2.0_LDP*HN/3.0_LDP-H*H/HN/6.0_LDP
	  W(N)=W(N)+2.0D0*HN/3.0D0-H*H/HN/6.0D0

	  W(N-3)=W(N-3)-H*H/12.0_LDP/RF	
	  W(N-3)=W(N-3)-H*H/12.0D0/RF	

	  W(N-2)=W(N-2)+0.5_LDP*H+H*H/12.0_LDP/RE
	  W(N-2)=W(N-2)+0.5D0*H+H*H/12.0D0/RE

	  W(N-1)=W(N-1)+0.5_LDP*H+H*H/12.0_LDP/RF	
	  W(N-1)=W(N-1)+0.5D0*H+H*H/12.0D0/RF	

	  W(N)=W(N)-H*H/12.0_LDP/RE
	  W(N)=W(N)-H*H/12.0D0/RE

	  W(N-1)=W(N-1)-X(N-1)*(X(N)*X(N)-X(N-1)*X(N-1)/3.0_LDP)/RF
	  W(N-1)=W(N-1)-X(N-1)*(X(N)*X(N)-X(N-1)*X(N-1)/3.0D0)/RF

	  W(N)=W(N)+(X(N-1)**3)*2.0_LDP/RF/3.0_LDP
	  W(N)=W(N)+(X(N-1)**3)*2.0D0/RF/3.0D0

	SUM=0.0_LDP
	SUM=0.0D0

	SUM=1.0_LDP/SUM
	SUM=1.0D0/SUM

	IF(ABS(SUM-1.0_LDP) .GT. 1.0E-12_LDP)THEN
	IF(ABS(SUM-1.0D0) .GT. 1.0D-12)THEN


jweight_v2.f

	W(:)=0.0_LDP
	W(:)=0.0D0

	W(1)=0.5_LDP*H-H*H/12.0_LDP/RF-HN*H/RF/12.0_LDP
	W(1)=0.5D0*H-H*H/12.0D0/RF-HN*H/RF/12.0D0

	W(2)=0.5_LDP*H+H*H/RF/6.0_LDP*(1.0_LDP+0.5_LDP*H/HN)+HN*H/RF/12.0_LDP
	W(2)=0.5D0*H+H*H/RF/6.0D0*(1.0D0+0.5D0*H/HN)+HN*H/RF/12.0D0

	W(3)=H*H/RF/12.0_LDP*(-1.0_LDP-H/HN)
	W(3)=H*H/RF/12.0*(-1.0-H/HN)

	  W(I-2)=W(I-2)-H*H/12.0_LDP/RF	
	  W(I-2)=W(I-2)-H*H/12.0D0/RF	

	  W(I-1)=W(I-1)+0.5_LDP*H+H*H/12.0_LDP/RE
	  W(I-1)=W(I-1)+0.5D0*H+H*H/12.0D0/RE

	  W(I)=W(I)+0.5_LDP*H+H*H/12.0_LDP/RF	
	  W(I)=W(I)+0.5D0*H+H*H/12.0D0/RF	

	  W(I+1)=W(I+1)-H*H/12.0_LDP/RE
	  W(I+1)=W(I+1)-H*H/12.0D0/RE

	  W(N-3)=W(N-3)-H*H/RF/12.0_LDP
	  W(N-3)=W(N-3)-H*H/RF/12.0D0

	  W(N-2)=W(N-2)+0.5_LDP*H
	  W(N-2)=W(N-2)+0.5D0*H

	  W(N-1)=W(N-1)+0.5_LDP*(H+2.0_LDP*HN/3.0_LDP)+H*H/HN/6.0_LDP+H*H/12.0_LDP/RF
	  W(N-1)=W(N-1)+0.5D0*(H+2.0D0*HN/3.0D0)+H*H/HN/6.0D0+H*H/12.0D0/RF

	  W(N)=W(N)+2.0_LDP*HN/3.0_LDP-H*H/HN/6.0_LDP
	  W(N)=W(N)+2.0D0*HN/3.0D0-H*H/HN/6.0D0

	  W(N-3)=W(N-3)-H*H/12.0_LDP/RF	
	  W(N-3)=W(N-3)-H*H/12.0D0/RF	

	  W(N-2)=W(N-2)+0.5_LDP*H+H*H/12.0_LDP/RE
	  W(N-2)=W(N-2)+0.5D0*H+H*H/12.0D0/RE

	  W(N-1)=W(N-1)+0.5_LDP*H+H*H/12.0_LDP/RF	
	  W(N-1)=W(N-1)+0.5D0*H+H*H/12.0D0/RF	

	  W(N)=W(N)-H*H/12.0_LDP/RE
	  W(N)=W(N)-H*H/12.0D0/RE

	  W(N-1)=W(N-1)-X(N-1)*(X(N)*X(N)-X(N-1)*X(N-1)/3.0_LDP)/RF
	  W(N-1)=W(N-1)-X(N-1)*(X(N)*X(N)-X(N-1)*X(N-1)/3.0D0)/RF

	  W(N)=W(N)+(X(N-1)**3)*2.0_LDP/RF/3.0_LDP
	  W(N)=W(N)+(X(N-1)**3)*2.0D0/RF/3.0D0

	SUM=0.0_LDP
	SUM=0.0D0

	SUM=1.0_LDP/SUM
	SUM=1.0D0/SUM

	IF(ABS(SUM-1.0_LDP) .GT. 1.0E-12_LDP)THEN
	IF(ABS(SUM-1.0D0) .GT. 1.0D-12)THEN


kivarnm.f

	VK(:,:,:)=0.0_LDP
	VK(:,:,:)=0.0D0

	T4=1.0_LDP/(DTAU(1)*(1.0_LDP+QH(1)))
	T4=1.0/(DTAU(1)*(1.0+QH(1)))

	T6=QH(1)/((1.0_LDP+QH(1))*(TCHI(1)+TCHI(2)))
	T6=QH(1)/((1.0+QH(1))*(TCHI(1)+TCHI(2)))

	VK(1,3,1)=(Z(1)-Z(2))*(UK(2)-UK(1))*0.5_LDP/(DTAU(1)*DTAU(1))
	VK(1,3,1)=(Z(1)-Z(2))*(UK(2)-UK(1))*0.5/(DTAU(1)*DTAU(1))

	RKB(1)=-VK(1,3,1)/(1.0_LDP+QH(1))-T6*T4*(UK(1)-UK(2)
	RKB(1)=-VK(1,3,1)/(1.0+QH(1))-T6*T4*(UK(1)-UK(2)

	T4=1.0_LDP/(DTAU(I)*(QH(I)+1.0_LDP))
	T4=1.0/(DTAU(I)*(QH(I)+1.0))

	T7=0.25_LDP*(UK(I)*(1.0_LDP+Q(I))-SOURCE(I)-Q(I)*UKM1(I))
	T7=0.25*(UK(I)*(1.0+Q(I))-SOURCE(I)-Q(I)*UKM1(I))

	1-T3*((UK(J)-UK(I))*T1+VKM1(J)/(1.0_LDP+QH(J)))
	1-T3*((UK(J)-UK(I))*T1+VKM1(J)/(1.0+QH(J)))

	1-T6*((UK(K)-UK(I))*T4-VKM1(I)/(1.0_LDP+QH(I)))
	1-T6*((UK(K)-UK(I))*T4-VKM1(I)/(1.0+QH(I)))

	VK(I,2,2)=-0.5_LDP*(DTAU(J)+DTAU(I))/TCHI(I)
	VK(I,2,2)=-0.5*(DTAU(J)+DTAU(I))/TCHI(I)

	VK(NI,1,1)=0.5_LDP*(Z(NI-1)-Z(NI))*(UK(NI)-UK(NI-1))/(DTAU
	VK(NI,1,1)=0.5*(Z(NI-1)-Z(NI))*(UK(NI)-UK(NI-1))/(DTAU

	1/DTAU(NI-1)-T6)+VKM1(NI-1)*T6/(1.0_LDP+QH(NI-1))+0.25_LDP*(Z(NI-1)-
	1/DTAU(NI-1)-T6)+VKM1(NI-1)*T6/(1.0+QH(NI-1))+0.25*(Z(NI-1)-

	1Z(NI))*(SOURCE(NI)-(1.0_LDP+Q(NI))*UK(NI)+Q(NI)*UKM1(NI))
	1Z(NI))*(SOURCE(NI)-(1.0+Q(NI))*UK(NI)+Q(NI)*UKM1(NI))

	VK(NI,2,1)=VK(NI,1,1)+0.5_LDP*((UK(NI)-UKM1(NI))*Q(NI)
	VK(NI,2,1)=VK(NI,1,1)+0.5*((UK(NI)-UKM1(NI))*Q(NI)

	VK(NI,2,2)=0.5_LDP*DTAU(NI-1)/TCHI(NI)
	VK(NI,2,2)=0.5*DTAU(NI-1)/TCHI(NI)

	T2=(CHI(1)/TCHI(1)*T1-1.0_LDP)
	T2=(CHI(1)/TCHI(1)*T1-1.0D0)


ktrpwgt.f

	W(:)=0.0_LDP
	W(:)=0.0D0

	  T1=0.25_LDP*(X(I)+X(I+1))*(X(I)*X(I)+X(I+1)*X(I+1))
	  T1=0.25D0*(X(I)+X(I+1))*(X(I)*X(I)+X(I+1)*X(I+1))

	  T2=(X(I)*X(I)+X(I)*X(I+1)+X(I+1)*X(I+1))/3.0_LDP
	  T2=(X(I)*X(I)+X(I)*X(I+1)+X(I+1)*X(I+1))/3.0D0

	IF(X(N) .NE. 0.0_LDP)THEN
	IF(X(N) .NE. 0.0D0)THEN

	  W(N-1)=W(N-1)-2.0_LDP*T1*X(N)*X(N)/15.0_LDP
	  W(N-1)=W(N-1)-2.0D0*T1*X(N)*X(N)/15.0D0

	  W(N)=W(N)+T1*(X(N-1)*X(N-1)/3.0_LDP-0.2_LDP*X(N)*X(N))
	  W(N)=W(N)+T1*(X(N-1)*X(N-1)/3.0D0-0.2D0*X(N)*X(N))

	SUM=0.0_LDP
	SUM=0.0D0

	SUM=1.0_LDP/SUM/3.0_LDP
	SUM=1.0D0/SUM/3.0D0

	IF(ABS(SUM-1.0_LDP) .GT. 1.0E-12_LDP)THEN
	IF(ABS(SUM-1.0D0) .GT. 1.0D-12)THEN

	SUM=0.0_LDP
	SUM=0.0D0

	  T1=0.25_LDP
	  T1=0.25D0

	  T1=T1*( X(N)*(X(N-1)*X(N-1)/3.0_LDP-0.2_LDP*X(N)*X(N))
	  T1=T1*( X(N)*(X(N-1)*X(N-1)/3.0D0-0.2D0*X(N)*X(N))

	1          -2.0_LDP*X(N)*X(N)*X(N-1)/15.0_LDP )
	1          -2.0D0*X(N)*X(N)*X(N-1)/15.0D0 )

	  T1=0.25_LDP*( 1.0_LDP-X(N)**4 ) + T1
	  T1=0.25D0*( 1.0D0-X(N)**4 ) + T1

	IF(ABS(SUM-1.0_LDP) .GT. 1.0E-12_LDP)THEN
	IF(ABS(SUM-1.0D0) .GT. 1.0D-12)THEN


ktrpwgt_v2.f

	W(:)=0.0_LDP
	W(:)=0.0D0

	  T1=X(I)*X(I)+2.0_LDP*X(I)*X(I+1)+X(I+1)*X(I+1)
	  T1=X(I)*X(I)+2.0D0*X(I)*X(I+1)+X(I+1)*X(I+1)

	  W(I)=W(I) + dX(I)*(T1+2.0_LDP*X(I)*X(I))/12.0_LDP
	  W(I)=W(I) + dX(I)*(T1+2.0D0*X(I)*X(I))/12.0D0

	  W(I+1)=W(I+1) + dX(I)*(T1+2.0_LDP*X(I+1)*X(I+1))/12.0_LDP
	  W(I+1)=W(I+1) + dX(I)*(T1+2.0D0*X(I+1)*X(I+1))/12.0D0

	IF(X(N) .NE. 0.0_LDP)THEN
	IF(X(N) .NE. 0.0D0)THEN

	  W(N-1)=W(N-1)-2.0_LDP*T1*X(N)*X(N)/15.0_LDP
	  W(N-1)=W(N-1)-2.0D0*T1*X(N)*X(N)/15.0D0

	  W(N)=W(N)+T1*(X(N-1)*X(N-1)/3.0_LDP-0.2_LDP*X(N)*X(N))
	  W(N)=W(N)+T1*(X(N-1)*X(N-1)/3.0D0-0.2D0*X(N)*X(N))

	SUM=0.0_LDP
	SUM=0.0D0

	SUM=1.0_LDP/SUM/3.0_LDP
	SUM=1.0D0/SUM/3.0D0

	XSUM=0.0_LDP
	XSUM=0.0D0

	  T1=0.25_LDP
	  T1=0.25D0

	  T1=T1*( X(N)*(X(N-1)*X(N-1)/3.0_LDP-0.2_LDP*X(N)*X(N))
	  T1=T1*( X(N)*(X(N-1)*X(N-1)/3.0D0-0.2D0*X(N)*X(N))

	1          -2.0_LDP*X(N)*X(N)*X(N-1)/15.0_LDP )
	1          -2.0D0*X(N)*X(N)*X(N-1)/15.0D0 )

	  T1=0.25_LDP*( 1.0_LDP-X(N)**4 ) + T1
	  T1=0.25D0*( 1.0D0-X(N)**4 ) + T1

	IF(ABS(XSUM-1.0_LDP) .GT. 1.0E-12_LDP .OR. ABS(SUM-1.0_LDP) .GT. 1.0E-12_LDP)THEN
	IF(ABS(XSUM-1.0D0) .GT. 1.0D-12 .OR. ABS(SUM-1.0D0) .GT. 1.0D-12)THEN

	  SUM=0.0_LDP
	  SUM=0.0D0


kweight.f

	W(:)=0.0_LDP
	W(:)=0.0D0

	W(1)=0.5_LDP*H*X(1)*(X(1)-H/3.0_LDP)
	W(1)=0.5D0*H*X(1)*(X(1)-H/3.0D0)

	1        -H*H/RF/12.0_LDP*((2.0_LDP+HN/H)*(1.0_LDP-H*H/10.0_LDP)
	1        -H*H/RF/12.0D0*((2.0D0+HN/H)*(1.0D0-H*H/10.0D0)

	1        -X(2)*X(2)+H*H/10.0_LDP)
	1        -X(2)*X(2)+H*H/10.0D0)

	W(2)=0.5_LDP*H*X(2)*(X(2)+H/3.0_LDP)
	W(2)=0.5D0*H*X(2)*(X(2)+H/3.0D0)

	1        +H*H/RF/12.0_LDP
	1        +H*H/RF/12.0D0

	1        *(2.0_LDP+H/HN+HN/H)*(1.0_LDP-H*H/10.0_LDP)
	1        *(2.0D0+H/HN+HN/H)*(1.0D0-H*H/10.0D0)

	W(3)=H*H/RF/12.0_LDP*(H*H/10.0_LDP-X(2)*X(2)
	W(3)=H*H/RF/12.0D0*(H*H/10.0D0-X(2)*X(2)

	1        -H/HN*(1.0_LDP-H*H/10.0_LDP))
	1        -H/HN*(1.0D0-H*H/10.0D0))

	  W(I-2)=W(I-2)-(X(I-1)*X(I-1)-H*H/10.0_LDP)*H*H/12.0_LDP/RF
	  W(I-2)=W(I-2)-(X(I-1)*X(I-1)-H*H/10.0D0)*H*H/12.0D0/RF

	  W(I-1)=W(I-1)+0.5_LDP*H*X(I-1)*(X(I-1)-H/3.0_LDP)
	  W(I-1)=W(I-1)+0.5D0*H*X(I-1)*(X(I-1)-H/3.0D0)

	1          +(X(I)*X(I)-H*H/10.0_LDP)*H*H/12.0_LDP/RE	
	1          +(X(I)*X(I)-H*H/10.0D0)*H*H/12.0D0/RE	

	  W(I)=W(I)+0.5_LDP*H*X(I)*(X(I)+H/3.0_LDP)
	  W(I)=W(I)+0.5D0*H*X(I)*(X(I)+H/3.0D0)

	1          +(X(I-1)*X(I-1)-H*H/10.0_LDP)*H*H/12.0_LDP/RF	
	1          +(X(I-1)*X(I-1)-H*H/10.0D0)*H*H/12.0D0/RF	

	  W(I+1)=W(I+1)-(X(I)*X(I)-H*H/10.0_LDP)*H*H/12.0_LDP/RE
	  W(I+1)=W(I+1)-(X(I)*X(I)-H*H/10.0D0)*H*H/12.0D0/RE

	  W(N-1)=W(N-1)+0.5_LDP*H*(X(N-1)*X(N-1)-X(N-1)*H/3.0_LDP)
	  W(N-1)=W(N-1)+0.5D0*H*(X(N-1)*X(N-1)-X(N-1)*H/3.0D0)

	1        -H/6.0_LDP*(X(N-1)*X(N-1)-H*H/10.0_LDP)
	1        -H/6.0D0*(X(N-1)*X(N-1)-H*H/10.0D0)

	  W(N)=W(N)+H/6.0_LDP*(X(N-1)*X(N-1)-H*H/10.0_LDP)
	  W(N)=W(N)+H/6.0D0*(X(N-1)*X(N-1)-H*H/10.0D0)

	  H=15.0_LDP*(X(N-1)-X(N))*(X(N-1)+X(N))
	  H=15.0D0*(X(N-1)-X(N))*(X(N-1)+X(N))

	  W(N-1)=W(N-1)+2.0_LDP*(X(N-1)**5)/H
	  W(N-1)=W(N-1)+2.0D0*(X(N-1)**5)/H

	  W(N)=W(N)+(X(N-1)**3)*(3.0_LDP*X(N-1)*X(N-1)-5.0_LDP*X(N)*X(N))/H
	  W(N)=W(N)+(X(N-1)**3)*(3.0D0*X(N-1)*X(N-1)-5.0D0*X(N)*X(N))/H

	SUM=0.0_LDP
	SUM=0.0D0

	SUM=1.0_LDP/3.0_LDP/SUM
	SUM=1.0D0/3.0D0/SUM

	IF(ABS(SUM-1.0_LDP) .GT. 1.0E-12_LDP)THEN
	IF(ABS(SUM-1.0D0) .GT. 1.0D-12)THEN


kweight_v2.f

	W(:)=0.0_LDP
	W(:)=0.0D0

	W(1)=0.5_LDP*H*X(1)*(X(1)-H/3.0_LDP)
	W(1)=0.5D0*H*X(1)*(X(1)-H/3.0D0)

	1        -H*H/RF/12.0_LDP*((2.0_LDP+HN/H)*(1.0_LDP-H*H/10.0_LDP)
	1        -H*H/RF/12.0D0*((2.0D0+HN/H)*(1.0D0-H*H/10.0D0)

	1        -X(2)*X(2)+H*H/10.0_LDP)
	1        -X(2)*X(2)+H*H/10.0D0)

	W(2)=0.5_LDP*H*X(2)*(X(2)+H/3.0_LDP)
	W(2)=0.5D0*H*X(2)*(X(2)+H/3.0D0)

	1        +H*H/RF/12.0_LDP
	1        +H*H/RF/12.0D0

	1        *(2.0_LDP+H/HN+HN/H)*(1.0_LDP-H*H/10.0_LDP)
	1        *(2.0D0+H/HN+HN/H)*(1.0D0-H*H/10.0D0)

	W(3)=H*H/RF/12.0_LDP*(H*H/10.0_LDP-X(2)*X(2)
	W(3)=H*H/RF/12.0D0*(H*H/10.0D0-X(2)*X(2)

	1        -H/HN*(1.0_LDP-H*H/10.0_LDP))
	1        -H/HN*(1.0D0-H*H/10.0D0))

	  W(I-2)=W(I-2)-(X(I-1)*X(I-1)-H*H/10.0_LDP)*H*H/12.0_LDP/RF
	  W(I-2)=W(I-2)-(X(I-1)*X(I-1)-H*H/10.0D0)*H*H/12.0D0/RF

	  W(I-1)=W(I-1)+0.5_LDP*H*X(I-1)*(X(I-1)-H/3.0_LDP)
	  W(I-1)=W(I-1)+0.5D0*H*X(I-1)*(X(I-1)-H/3.0D0)

	1          +(X(I)*X(I)-H*H/10.0_LDP)*H*H/12.0_LDP/RE	
	1          +(X(I)*X(I)-H*H/10.0D0)*H*H/12.0D0/RE	

	  W(I)=W(I)+0.5_LDP*H*X(I)*(X(I)+H/3.0_LDP)
	  W(I)=W(I)+0.5D0*H*X(I)*(X(I)+H/3.0D0)

	1          +(X(I-1)*X(I-1)-H*H/10.0_LDP)*H*H/12.0_LDP/RF	
	1          +(X(I-1)*X(I-1)-H*H/10.0D0)*H*H/12.0D0/RF	

	  W(I+1)=W(I+1)-(X(I)*X(I)-H*H/10.0_LDP)*H*H/12.0_LDP/RE
	  W(I+1)=W(I+1)-(X(I)*X(I)-H*H/10.0D0)*H*H/12.0D0/RE

	  W(N-1)=W(N-1)+0.5_LDP*H*(X(N-1)*X(N-1)-X(N-1)*H/3.0_LDP)
	  W(N-1)=W(N-1)+0.5D0*H*(X(N-1)*X(N-1)-X(N-1)*H/3.0D0)

	1        -H/6.0_LDP*(X(N-1)*X(N-1)-H*H/10.0_LDP)
	1        -H/6.0D0*(X(N-1)*X(N-1)-H*H/10.0D0)

	  W(N)=W(N)+H/6.0_LDP*(X(N-1)*X(N-1)-H*H/10.0_LDP)
	  W(N)=W(N)+H/6.0D0*(X(N-1)*X(N-1)-H*H/10.0D0)

	  H=15.0_LDP*(X(N-1)-X(N))*(X(N-1)+X(N))
	  H=15.0D0*(X(N-1)-X(N))*(X(N-1)+X(N))

	  W(N-1)=W(N-1)+2.0_LDP*(X(N-1)**5)/H
	  W(N-1)=W(N-1)+2.0D0*(X(N-1)**5)/H

	  W(N)=W(N)+(X(N-1)**3)*(3.0_LDP*X(N-1)*X(N-1)-5.0_LDP*X(N)*X(N))/H
	  W(N)=W(N)+(X(N-1)**3)*(3.0D0*X(N-1)*X(N-1)-5.0D0*X(N)*X(N))/H

	SUM=0.0_LDP
	SUM=0.0D0

	SUM=1.0_LDP/3.0_LDP/SUM
	SUM=1.0D0/3.0D0/SUM

	IF(ABS(SUM-1.0_LDP) .GT. 1.0E-12_LDP)THEN
	IF(ABS(SUM-1.0D0) .GT. 1.0D-12)THEN


lamvacair.f

	LAMVACAIR=2997.92458_LDP/FREQ
	LAMVACAIR=2997.92458D0/FREQ

	IF(LAMVACAIR .GT. 1999.352_LDP)THEN
	IF(LAMVACAIR .GT. 1999.352D0)THEN

	  T1=1.0E+08_LDP/(LAMVACAIR*LAMVACAIR)
	  T1=1.0D+08/(LAMVACAIR*LAMVACAIR)

	  LAMVACAIR=LAMVACAIR/(  1.0_LDP+
	  LAMVACAIR=LAMVACAIR/(  1.0D0+

	1               1.0E-07_LDP*( 643.28_LDP+
	1               1.0D-07*( 643.28D0+

	1              294981.0_LDP/(146.0_LDP-T1)+2554.0_LDP/(41.0_LDP-T1) )  )
	1              294981.0D0/(146.0D0-T1)+2554.0D0/(41.0D0-T1) )  )

	IF(LAM_AIR .GT. 1999.352_LDP)THEN
	IF(LAM_AIR .GT. 1999.352D0)THEN

	  T1=1.0E+08_LDP/(LAM_AIR*LAM_AIR)
	  T1=1.0D+08/(LAM_AIR*LAM_AIR)

	  LAM_AIR=LAM_AIR/(  1.0_LDP+
	  LAM_AIR=LAM_AIR/(  1.0D0+

	1               1.0E-07_LDP*( 643.28_LDP+
	1               1.0D-07*( 643.28D0+

	1              294981.0_LDP/(146.0_LDP-T1)+2554.0_LDP/(41.0_LDP-T1) )  )
	1              294981.0D0/(146.0D0-T1)+2554.0D0/(41.0D0-T1) )  )


lam_vac.f

	IF(LAM_AIR .LT. 1999.352_LDP)THEN
	IF(LAM_AIR .LT. 1999.352D0)THEN

	  T1=1.0E+08_LDP/(LAM_VAC*LAM_VAC)
	  T1=1.0D+08/(LAM_VAC*LAM_VAC)

	  LAM_VAC=LAM_AIR*(  1.0_LDP+
	  LAM_VAC=LAM_AIR*(  1.0D0+

	1               1.0E-07_LDP*( 643.28_LDP+
	1               1.0D-07*( 643.28D0+

	1              294981.0_LDP/(146.0_LDP-T1)+2554.0_LDP/(41.0_LDP-T1) )  )
	1              294981.0D0/(146.0D0-T1)+2554.0D0/(41.0D0-T1) )  )


last2rays.f

	IF(TOR .GT. 0.01_LDP)THEN
	IF(TOR .GT. 0.01)THEN

	  T1=(1.0_LDP-EXP(-TOR))
	  T1=(1.0D0-EXP(-TOR))

	  T1=(1._LDP-TOR/2.0_LDP*(1.0_LDP-TOR/3.0_LDP*(1.0_LDP-TOR/4.0_LDP)))*TOR
	  T1=(1.D0-TOR/2.0*(1.0D0-TOR/3.0*(1.0-TOR/4.0)))*TOR

	  E2=1.0_LDP-(1.0_LDP-E1)/DTAU(1)
	  E2=1.0D0-(1.0D0-E1)/DTAU(1)

	  E3=(1.0_LDP-E1)/DTAU(1)-E1
	  E3=(1.0D0-E1)/DTAU(1)-E1

	  IF(DTAU(1) .LT. 1.0E-03_LDP)THEN
	  IF(DTAU(1) .LT. 1.0D-03)THEN

	    E2=DTAU(1)*0.5_LDP+DTAU(1)*DTAU(1)/6.0_LDP
	    E2=DTAU(1)*0.5+DTAU(1)*DTAU(1)/6.0D0

	    E3=DTAU(1)*0.5_LDP-DTAU(1)*DTAU(1)/3.0_LDP
	    E3=DTAU(1)*0.5-DTAU(1)*DTAU(1)/3.0D0

          XM(1)=0.5_LDP*(IBOUND+XM(2)*E1+ZETA(1)*E2+ZETA(2)*E3)
          XM(1)=0.5*(IBOUND+XM(2)*E1+ZETA(1)*E2+ZETA(2)*E3)

	  WM(1,1)=0.5_LDP*( WM(2,1)*E1-THETA(1)*(E2+T1) )
	  WM(1,1)=0.5*( WM(2,1)*E1-THETA(1)*(E2+T1) )

	  WM(1,2)=0.5_LDP*(WM(2,2)*E1-THETA(2)*E3)
	  WM(1,2)=0.5*(WM(2,2)*E1-THETA(2)*E3)


last2vki.f

	IF(TOR .GT. 0.01_LDP)THEN
	IF(TOR .GT. 0.01D0)THEN

	  T1=(1.0_LDP-EXP(-TOR))
	  T1=(1.0D0-EXP(-TOR))

	  T1=(1._LDP-TOR/2.0_LDP*(1.0_LDP-TOR/3.0_LDP*(1.0_LDP-TOR/4.0_LDP)))*TOR
	  T1=(1.D0-TOR/2.0D0*(1.0D0-TOR/3.0D0*(1.0-TOR/4.0D0)))*TOR

	  DE1=-E1*(Z(1)-Z(2))*0.5_LDP
	  DE1=-E1*(Z(1)-Z(2))*0.5D0

	  IF(DTAU(1) .LT. 1.0E-03_LDP)THEN
	  IF(DTAU(1) .LT. 1.0D-03)THEN

	    E2=DTAU(1)*0.5_LDP+DTAU(1)*DTAU(1)/6.0_LDP
	    E2=DTAU(1)*0.5D0+DTAU(1)*DTAU(1)/6.0D0

	    DE2=(0.5_LDP+DTAU(1)/3.0_LDP)*(Z(1)-Z(2))*0.5_LDP
	    DE2=(0.5+DTAU(1)/3.0D0)*(Z(1)-Z(2))*0.5D0

	    E3=DTAU(1)*0.5_LDP-DTAU(1)*DTAU(1)/3.0_LDP
	    E3=DTAU(1)*0.5D0-DTAU(1)*DTAU(1)/3.0D0

	    DE3=(0.5_LDP-2.0_LDP*DTAU(1)/3.0_LDP)*(Z(1)-Z(2))*0.5_LDP
	    DE3=(0.5-2.0*DTAU(1)/3.0D0)*(Z(1)-Z(2))*0.5D0

	    E2=1.0_LDP-(1.0_LDP-E1)/DTAU(1)
	    E2=1.0D0-(1.0D0-E1)/DTAU(1)

	    DE2=(1.0_LDP-E1-DTAU(1)*E1)/DTAU(1)/DTAU(1)*(Z(1)-Z(2))*0.5_LDP
	    DE2=(1.0D0-E1-DTAU(1)*E1)/DTAU(1)/DTAU(1)*(Z(1)-Z(2))*0.5D0

	    E3=(1.0_LDP-E1)/DTAU(1)-E1
	    E3=(1.0D0-E1)/DTAU(1)-E1

	    DE3=((E1-1.0_LDP+E1*DTAU(1))+E1*DTAU(1)*DTAU(1))*
	    DE3=((E1-1.0D0+E1*DTAU(1))+E1*DTAU(1)*DTAU(1))*

	1                    (Z(1)-Z(2))*0.5_LDP/DTAU(1)/DTAU(1)
	1                    (Z(1)-Z(2))*0.5D0/DTAU(1)/DTAU(1)

	  VK(1,1)=0.5_LDP*(  VK(2,1)*E1
	  VK(1,1)=0.5D0*(  VK(2,1)*E1

	  VK(1,2)=0.5_LDP*(  VK(2,2)*E1+SOURCE(2)*(DE3-E3/CHI(2))
	  VK(1,2)=0.5D0*(  VK(2,2)*E1+SOURCE(2)*(DE3-E3/CHI(2))


lin_interp.f

	IF((R(2)-R(1)) .GT. 0.0_LDP )THEN
	IF((R(2)-R(1)) .GT. 0.0D0 )THEN

	      V(J)=T1*W(L-1)+(1.0_LDP-T1)*W(L)
	      V(J)=T1*W(L-1)+(1.0D0-T1)*W(L)

	      V(J)=T1*W(L)+(1.0_LDP-T1)*W(L+1)
	      V(J)=T1*W(L)+(1.0D0-T1)*W(L+1)


locsolut.f

	    SCALE=1.0_LDP
	    SCALE=1.0D0

	    T1=0.95_LDP
	    T1=0.95D0

	    T2=-10.0_LDP
	    T2=-10.0D0

	    IF(T1 .GT. 0.95_LDP)SCALE=0.95_LDP/T1
	    IF(T1 .GT. 0.95D0)SCALE=0.95D0/T1

	    T2=-10.0_LDP/T2
	    T2=-10.0D0/T2

	    T3=0.2_LDP		!20%
	    T3=0.2D0		!20%

	    IF(T3 .GT. 1.0E-25_LDP)T3=0.2_LDP/T3
	    IF(T3 .GT. 1.0D-25)T3=0.2D0/T3

	      POPS(J,I)=POPS(J,I)*(1.0_LDP-STEQ(J,I)*SCALE)
	      POPS(J,I)=POPS(J,I)*(1.0D0-STEQ(J,I)*SCALE)

	      POPS(J,I)=POPS(J,I)*(1.0_LDP-STEQ(J,I)*SCALE)
	      POPS(J,I)=POPS(J,I)*(1.0D0-STEQ(J,I)*SCALE)


ltepop.f

	    RGU=2.07078E-22_LDP*ED(I)*DI(I)*( T(I)**(-1.5_LDP) )/GU
	    RGU=2.07078D-22*ED(I)*DI(I)*( T(I)**(-1.5D0) )/GU

	  RGU=2.07078E-22_LDP/GU
	  RGU=2.07078D-22/GU

	    Y=ED(I)*DI(I)*( T(I)**(-1.5_LDP) )
	    Y=ED(I)*DI(I)*( T(I)**(-1.5D0) )


lte_pop_sl.f

	    HNST_S(L,K)=0.0_LDP
	    HNST_S(L,K)=0.0D0

	    dlnHNST_S_dlnT(L,K)=0.0_LDP
	    dlnHNST_S_dlnT(L,K)=0.0D0

	    dlnHNST_S_dlnT(L,K)=-1.5_LDP -
	    dlnHNST_S_dlnT(L,K)=-1.5D0 -


lte_pop_sl_v2.f

	REAL(KIND=LDP), PARAMETER :: MAX_LOG_LTE_POP=600.0_LDP
	REAL(KIND=LDP), PARAMETER :: MAX_LOG_LTE_POP=600.0D0

	    HNST_S(L,K)=0.0_LDP
	    HNST_S(L,K)=0.0D0

	    dlnHNST_S_dlnT(L,K)=0.0_LDP
	    dlnHNST_S_dlnT(L,K)=0.0D0

	    SCALE_FAC(L)=0.0_LDP
	    SCALE_FAC(L)=0.0D0

	    IF(SCALE_FAC(L) .EQ. 0.0_LDP)SCALE_FAC(L)=LOG_HNST_F(I,K)
	    IF(SCALE_FAC(L) .EQ. 0.0D0)SCALE_FAC(L)=LOG_HNST_F(I,K)

	      HNST_S(L,K)=0.0_LDP
	      HNST_S(L,K)=0.0D0

	    IF(HNST_S(L,K) .EQ. 0.0_LDP)HNST_F(I,K)=0.0_LDP
	    IF(HNST_S(L,K) .EQ. 0.0D0)HNST_F(I,K)=0.0D0

	    dlnHNST_S_dlnT(L,K) = -1.5_LDP - HDKT*dlnHNST_S_dlnT(L,K)/T(K)
	    dlnHNST_S_dlnT(L,K) = -1.5D0 - HDKT*dlnHNST_S_dlnT(L,K)/T(K)


ltepop_wld_v1.f

	    RGU=2.07078E-22_LDP*ED(K)*DIC2(K)*( T(K)**(-1.5_LDP) )/GION_C2
	    RGU=2.07078D-22*ED(K)*DIC2(K)*( T(K)**(-1.5D0) )/GION_C2

	  RGU=LOG(2.07078E-22_LDP)
	  RGU=LOG(2.07078D-22)

	    Y=ED(K)*DIC2(K)*( T(K)**(-1.5_LDP) )/GION_C2
	    Y=ED(K)*DIC2(K)*( T(K)**(-1.5D0) )/GION_C2


ltepop_wld_v2.f

	C2LTE=0.0_LDP
	C2LTE=0.0D0

	 RGU=2.07078E-22_LDP*ED(K)*DIC2(K)*( T(K)**(-1.5_LDP) )/GION_C2
	 RGU=2.07078D-22*ED(K)*DIC2(K)*( T(K)**(-1.5D0) )/GION_C2


lum_from_eta.f

	  LINE_LUM(I)=0.5_LDP*(R(I)-R(I+1))*( LINE_LUM(I)+LINE_LUM(I+1)
	  LINE_LUM(I)=0.5D0*(R(I)-R(I+1))*( LINE_LUM(I)+LINE_LUM(I+1)

	1            +(R(I)-R(I+1))*(DERIV(I+1)-DERIV(I))/6.0_LDP )
	1            +(R(I)-R(I+1))*(DERIV(I+1)-DERIV(I))/6.0D0 )

	LINE_LUM(ND)=0.0_LDP
	LINE_LUM(ND)=0.0D0


lum_from_eta_v2.f

	  LINE_LUM(I)=0.5_LDP*(R(I)-R(I+1))*( LINE_LUM(I)+LINE_LUM(I+1)
	  LINE_LUM(I)=0.5D0*(R(I)-R(I+1))*( LINE_LUM(I)+LINE_LUM(I+1)

	1            +(R(I)-R(I+1))*(DERIV(I+1)-DERIV(I))/6.0_LDP )
	1            +(R(I)-R(I+1))*(DERIV(I+1)-DERIV(I))/6.0D0 )

	LINE_LUM(ND)=0.0_LDP
	LINE_LUM(ND)=0.0D0


marupv.f


mat5pen.f

	PARAMETER (DP_ZERO=0.0_LDP)
	PARAMETER (DP_ZERO=0.0D0)

	PARAMETER (DP_ONE=1.0_LDP)
	PARAMETER (DP_ONE=1.0D0)

	PARAMETER (DP_NEG_ONE=-1.0_LDP)
	PARAMETER (DP_NEG_ONE=-1.0D0)


mess.f


modifyba.f

	PARAMETER (TOL=1.0E-30_LDP)
	PARAMETER (TOL=1.0D-30)

	    BIG=0.0_LDP
	    BIG=0.0D0

	    RBIG=1.0_LDP/BIG
	    RBIG=1.0D0/BIG

	    BA(I,I,K,K)=1.0_LDP
	    BA(I,I,K,K)=1.0D0

	          BA(J,I,K,K)=0.0_LDP			!Need to set zero.
	          BA(J,I,K,K)=0.0D0			!Need to set zero.


mod_trap_derivatives.f


momjbar.f

	TA(:)=0.0_LDP;        TB(:)=0.0_LDP;      TC(:)=0.0_LDP
	TA(:)=0.0D0;        TB(:)=0.0D0;      TC(:)=0.0D0

	DTAU(:)=0.0_LDP;      TCHI(:)=0.0_LDP;    DTAUONQ(:)=0.0_LDP
	DTAU(:)=0.0D0;      TCHI(:)=0.0D0;    DTAUONQ(:)=0.0D0

	Q(:)=0.0_LDP;         XM(:)=0.0_LDP;      SOURCE(:)=0.0_LDP
	Q(:)=0.0D0;         XM(:)=0.0D0;      SOURCE(:)=0.0D0

        JEX_SCAT(:)=0.0_LDP;  VB(:)=0.0_LDP;      VC(:)=0.0_LDP
        JEX_SCAT(:)=0.0D0;  VB(:)=0.0D0;      VC(:)=0.0D0

        HU(:)=0.0_LDP;        HL(:)=0.0_LDP;      HS(:)=0.0_LDP
        HU(:)=0.0D0;        HL(:)=0.0D0;      HS(:)=0.0D0

	GAM(:)=0.0_LDP;       GAMH(:)=0.0_LDP;    W(:)=0.0_LDP;
	GAM(:)=0.0D0;       GAMH(:)=0.0D0;    W(:)=0.0D0;

	WPREV(:)=0.0_LDP;     PSI(:)=0.0_LDP;     PSIPREV(:)=0.0_LDP
	WPREV(:)=0.0D0;     PSI(:)=0.0D0;     PSIPREV(:)=0.0D0

	JBAR(:)=0.0_LDP
	JBAR(:)=0.0D0

	HBLANK(:)=0.0_LDP
	HBLANK(:)=0.0D0

	JBLANK(:)=0.0_LDP
	JBLANK(:)=0.0D0

	JNU(:,:)=0.0_LDP			!ND*(NLF+1)
	JNU(:,:)=0.0D0			!ND*(NLF+1)

	RSQHNU(:,:)=0.0_LDP		!ND*(NLF+1) )
	RSQHNU(:,:)=0.0D0		!ND*(NLF+1) )

	      GAMH(I)=2.0_LDP*3.33564E-06_LDP*(V(I)+V(I+1))/(R(I)+R(I+1))
	      GAMH(I)=2.0D0*3.33564D-06*(V(I)+V(I+1))/(R(I)+R(I+1))

	      W(I)=GAMH(I)*( 1.0_LDP+0.5_LDP*(SIGMA(I)+SIGMA(I+1))*G(I,ML) )
	      W(I)=GAMH(I)*( 1.0D0+0.5D0*(SIGMA(I)+SIGMA(I+1))*G(I,ML) )

	      WPREV(I)=GAMH(I)*( 1.0_LDP+
	      WPREV(I)=GAMH(I)*( 1.0D0+

	1                0.5_LDP*(SIGMA(I)+SIGMA(I+1))*G(I,ML-1) )
	1                0.5D0*(SIGMA(I)+SIGMA(I+1))*G(I,ML-1) )

	      GAM(I)=3.33564E-06_LDP*V(I)/R(I)/TCHI(I)/DNU
	      GAM(I)=3.33564D-06*V(I)/R(I)/TCHI(I)/DNU

	      DTAUONQ(I)=0.5_LDP*(DTAU(I)+DTAU(I-1))/Q(I)
	      DTAUONQ(I)=0.5D0*(DTAU(I)+DTAU(I-1))/Q(I)

	      PSI(I)=DTAUONQ(I)*GAM(I)*( 1.0_LDP+SIGMA(I)*F(I,ML) )
	      PSI(I)=DTAUONQ(I)*GAM(I)*( 1.0D0+SIGMA(I)*F(I,ML) )

	      PSIPREV(I)=DTAUONQ(I)*GAM(I)*(  1.0_LDP+SIGMA(I)*F(I,ML-1) )
	      PSIPREV(I)=DTAUONQ(I)*GAM(I)*(  1.0D0+SIGMA(I)*F(I,ML-1) )

	      DTAUONQ(I)=0.5_LDP*(DTAU(I)+DTAU(I-1))/Q(I)
	      DTAUONQ(I)=0.5D0*(DTAU(I)+DTAU(I-1))/Q(I)

	      GAMH(I)=0.0_LDP
	      GAMH(I)=0.0D0

	      W(I)=0.0_LDP
	      W(I)=0.0D0

	      WPREV(I)=0.0_LDP
	      WPREV(I)=0.0D0

	      GAM(I)=0.0_LDP
	      GAM(I)=0.0D0

	      PSI(I)=0.0_LDP
	      PSI(I)=0.0D0

	      PSIPREV(I)=0.0_LDP
	      PSIPREV(I)=0.0D0

	    SRCEBND=0.0_LDP
	    SRCEBND=0.0D0

	    HU(I)=F(I+1,ML)*Q(I+1)/(1.0_LDP+W(I))/DTAU(I)
	    HU(I)=F(I+1,ML)*Q(I+1)/(1.0D0+W(I))/DTAU(I)

	    HL(I)=F(I,ML)*Q(I)/(1.0_LDP+W(I))/DTAU(I)
	    HL(I)=F(I,ML)*Q(I)/(1.0D0+W(I))/DTAU(I)

	    HS(I)=WPREV(I)/(1.0_LDP+W(I))
	    HS(I)=WPREV(I)/(1.0D0+W(I))

	  TA(1)=0.0_LDP
	  TA(1)=0.0D0

	  VB(1)=0.0_LDP
	  VB(1)=0.0D0

	  VC(1)=0.0_LDP
	  VC(1)=0.0D0

	    XM(ND)=DBB*R(ND)*R(ND)/3.0_LDP/TCHI(ND)
	    XM(ND)=DBB*R(ND)*R(ND)/3.0D0/TCHI(ND)

	    XM(ND)=R(ND)*R(ND)*IC*(0.25_LDP+0.5_LDP*IN_HBC(ML))
	    XM(ND)=R(ND)*R(ND)*IC*(0.25D0+0.5D0*IN_HBC(ML))

	  TC(ND)=0.0_LDP
	  TC(ND)=0.0D0

	  VB(ND)=0.0_LDP
	  VB(ND)=0.0D0

	  VC(ND)=0.0_LDP
	  VC(ND)=0.0D0

	  PSIPREV(ND)=0.0_LDP
	  PSIPREV(ND)=0.0D0

	SCALE=0.0_LDP
	SCALE=0.0D0

	SCALE=1.0E+15_LDP*FL*(PF(1)-PF(NLF))/SCALE
	SCALE=1.0D+15*FL*(PF(1)-PF(NLF))/SCALE

	  ZNET(I)=1.0_LDP-JBAR(I)*CHIL(I)/ETAL(I)
	  ZNET(I)=1.0D0-JBAR(I)*CHIL(I)/ETAL(I)

	  T1=1.0E-15_LDP/FL
	  T1=1.0D-15/FL

	  JEX_SCAT(:)=0.0_LDP
	  JEX_SCAT(:)=0.0D0

	  DNU=3.33564E-06_LDP*V(1)*2.0_LDP
	  DNU=3.33564D-06*V(1)*2.0D0

	    GAMH(I)=2.0_LDP*3.33564E-06_LDP*(V(I)+V(I+1))/(R(I)+R(I+1))
	    GAMH(I)=2.0D0*3.33564D-06*(V(I)+V(I+1))/(R(I)+R(I+1))

	    W(I)=1.0_LDP+0.5_LDP*( SIGMA(I)+SIGMA(I+1) )*G(I,NLF)
	    W(I)=1.0D0+0.5D0*( SIGMA(I)+SIGMA(I+1) )*G(I,NLF)

	    WPREV(I)=1.0_LDP+0.5_LDP*( SIGMA(I)+SIGMA(I+1) )*G(I,1)
	    WPREV(I)=1.0D0+0.5D0*( SIGMA(I)+SIGMA(I+1) )*G(I,1)

	    GAM(I)=3.33564E-06_LDP*V(I)/R(I)/CHI(I)
	    GAM(I)=3.33564D-06*V(I)/R(I)/CHI(I)

	1        +GAM(I)*( (1.0_LDP+SIGMA(I)*F(I,NLF))*JNU(I,NLF)
	1        +GAM(I)*( (1.0D0+SIGMA(I)*F(I,NLF))*JNU(I,NLF)

	1        -(1.0_LDP+SIGMA(I)*F(I,1))*JNU(I,1) )  )/Q(I)
	1        -(1.0D0+SIGMA(I)*F(I,1))*JNU(I,1) )  )/Q(I)

	1        *2.0_LDP/(DTAU(I)+DTAU(I-1))
	1        *2.0D0/(DTAU(I)+DTAU(I-1))

	    XM(ND)=DNU*R(ND)*R(ND)*DBB/CHI(ND)/3.0_LDP
	    XM(ND)=DNU*R(ND)*R(ND)*DBB/CHI(ND)/3.0D0

	    XM(ND)=DNU*R(ND)*R(ND)*IC*( 0.25_LDP+0.5_LDP*IN_HBC(NLF+1) )
	    XM(ND)=DNU*R(ND)*R(ND)*IC*( 0.25D0+0.5D0*IN_HBC(NLF+1) )

	  T1=1.0E+15_LDP*FL
	  T1=1.0D+15*FL

	  T1=( (PF(1)-PF(NLF))+DNU )*FL*1.0E+15_LDP
	  T1=( (PF(1)-PF(NLF))+DNU )*FL*1.0D+15

	  EW=2.99794E-12_LDP*( HBLANK(1)-RSQHNU(1,1)*T1 )/
	  EW=2.99794D-12*( HBLANK(1)-RSQHNU(1,1)*T1 )/

	  CONT_INT=13.19868_LDP*RSQHNU(1,1)
	  CONT_INT=13.19868D0*RSQHNU(1,1)


mom_j_cmf_v5.f

	REAL(KIND=LDP), PARAMETER :: PROG_ID=1.46310043E+08_LDP  !Must be unique (MOM_J_CM)
	REAL(KIND=LDP), PARAMETER :: PROG_ID=1.46310043D+08  !Must be unique (MOM_J_CM)

	PSIPREV(NV-1)=1.0_LDP
	PSIPREV(NV-1)=1.0D0

	PSIPREV(NV)=1.0_LDP
	PSIPREV(NV)=1.0D0

	  PSIPREV(NV)=0.0_LDP
	  PSIPREV(NV)=0.0D0

	    MOM_ERR_ON_FREQ(I)=0.0_LDP
	    MOM_ERR_ON_FREQ(I)=0.0D0

	    COH_VEC(I)=0.0_LDP
	    COH_VEC(I)=0.0D0

	  IF(G(I) .GT. 1.0_LDP)G(I)=1.0_LDP
	  IF(G(I) .GT. 1.0D0)G(I)=1.0D0

	    GAMH(I)=0.0_LDP
	    GAMH(I)=0.0D0

	    GAM(I)=0.0_LDP
	    GAM(I)=0.0D0

	    W(I)=0.0_LDP
	    W(I)=0.0D0

	    WPREV(I)=0.0_LDP
	    WPREV(I)=0.0D0

	    PSI(I)=0.0_LDP
	    PSI(I)=0.0D0

	    PSIPREV(I)=0.0_LDP
	    PSIPREV(I)=0.0D0

	    JNU_PREV(I)=0.0_LDP
	    JNU_PREV(I)=0.0D0

	    RSQHNU_PREV(I)=0.0_LDP
	    RSQHNU_PREV(I)=0.0D0

	    EPS(I)=0.0_LDP
	    EPS(I)=0.0D0

	    EPS_PREV(I)=0.0_LDP
	    EPS_PREV(I)=0.0D0

	    CON_GAMH(I)=2.0_LDP*3.33564E-06_LDP*(V(I)+V(I+1))/(R(I)+R(I+1))
	    CON_GAMH(I)=2.0D0*3.33564D-06*(V(I)+V(I+1))/(R(I)+R(I+1))

	    AV_SIGMA(I)=0.5_LDP*(SIGMA(I)+SIGMA(I+1))
	    AV_SIGMA(I)=0.5D0*(SIGMA(I)+SIGMA(I+1))

	    CON_GAM(I)=3.33564E-06_LDP*V(I)/R(I)
	    CON_GAM(I)=3.33564D-06*V(I)/R(I)

	  CON_GAM(ND)=3.33564E-06_LDP*V(ND)/R(ND)
	  CON_GAM(ND)=3.33564D-06*V(ND)/R(ND)

	    W(I)=GAMH(I)*( 1.0_LDP+AV_SIGMA(I)*G(I) )
	    W(I)=GAMH(I)*( 1.0D0+AV_SIGMA(I)*G(I) )

	    WPREV(I)=GAMH(I)*( 1.0_LDP+AV_SIGMA(I)*G_PREV(I) )
	    WPREV(I)=GAMH(I)*( 1.0D0+AV_SIGMA(I)*G_PREV(I) )

	    EPS(I)=GAMH(I)*AV_SIGMA(I)*RSQN_ON_RSQJ(I)/(1.0_LDP+W(I))
	    EPS(I)=GAMH(I)*AV_SIGMA(I)*RSQN_ON_RSQJ(I)/(1.0D0+W(I))

	    EPS_PREV(I)=GAMH(I)*AV_SIGMA(I)*RSQN_ON_RSQJ_PREV(I)/(1.0_LDP+W(I))
	    EPS_PREV(I)=GAMH(I)*AV_SIGMA(I)*RSQN_ON_RSQJ_PREV(I)/(1.0D0+W(I))

	  DTAUONQ(I)=0.5_LDP*(DTAU(I)+DTAU(I-1))/Q(I)
	  DTAUONQ(I)=0.5D0*(DTAU(I)+DTAU(I-1))/Q(I)

	  PSI(I)=DTAUONQ(I)*GAM(I)*( 1.0_LDP+SIGMA(I)*F(I) )
	  PSI(I)=DTAUONQ(I)*GAM(I)*( 1.0D0+SIGMA(I)*F(I) )

	  PSIPREV(I)=DTAUONQ(I)*GAM(I)*(  1.0_LDP+SIGMA(I)*F_PREV(I) )
	  PSIPREV(I)=DTAUONQ(I)*GAM(I)*(  1.0D0+SIGMA(I)*F_PREV(I) )

	  HU(I)=F(I+1)*Q(I+1)/(1.0_LDP+W(I))/DTAU(I)
	  HU(I)=F(I+1)*Q(I+1)/(1.0D0+W(I))/DTAU(I)

	  HL(I)=F(I)*Q(I)/(1.0_LDP+W(I))/DTAU(I)
	  HL(I)=F(I)*Q(I)/(1.0D0+W(I))/DTAU(I)

	  HS(I)=WPREV(I)/(1.0_LDP+W(I))
	  HS(I)=WPREV(I)/(1.0D0+W(I))

	  TB(I)=DTAUONQ(I)*(1.0_LDP-COH_VEC(I)) + PSI(I) + HL(I) + HU(I-1)
	  TB(I)=DTAUONQ(I)*(1.0D0-COH_VEC(I)) + PSI(I) + HL(I) + HU(I-1)

	XM(1)=0.0_LDP
	XM(1)=0.0D0

	TA(1)=0.0_LDP
	TA(1)=0.0D0

	VB(1)=0.0_LDP
	VB(1)=0.0D0

	VC(1)=0.0_LDP
	VC(1)=0.0D0

	  XM(ND)=DBB*R(ND)*R(ND)/3.0_LDP/CHI(ND)
	  XM(ND)=DBB*R(ND)*R(ND)/3.0D0/CHI(ND)

	  XM(ND)=R(ND)*R(ND)*IC*(0.25_LDP+0.5_LDP*IN_HBC)
	  XM(ND)=R(ND)*R(ND)*IC*(0.25D0+0.5D0*IN_HBC)

	TC(ND)=0.0_LDP
	TC(ND)=0.0D0

	VB(ND)=0.0_LDP
	VB(ND)=0.0D0

	VC(ND)=0.0_LDP
	VC(ND)=0.0D0

	PSIPREV(ND)=0.0_LDP
	PSIPREV(ND)=0.0D0

	    XM(I)=ABS(XM(I))/10.0_LDP
	    XM(I)=ABS(XM(I))/10.0D0


mom_j_cmf_v6.f

	DATA VDOP_FRAC_SAV/-10001.1_LDP/    !Absurd value
	DATA VDOP_FRAC_SAV/-10001.1D0/    !Absurd value

	  ALLOCATE ( RSQJNU(ND) )             ; RSQJNU(1:ND)=0.0_LDP
	  ALLOCATE ( RSQJNU(ND) )             ; RSQJNU(1:ND)=0.0D0

	  ALLOCATE ( RSQHNU(ND) )             ; RSQHNU(1:ND)=0.0_LDP
	  ALLOCATE ( RSQHNU(ND) )             ; RSQHNU(1:ND)=0.0D0

	  ALLOCATE ( F_SAV(ND) )              ; F_SAV(1:ND)=0.0_LDP
	  ALLOCATE ( F_SAV(ND) )              ; F_SAV(1:ND)=0.0D0

	  ALLOCATE ( G_SAV(ND) )              ; G_SAV(1:ND)=0.0_LDP
	  ALLOCATE ( G_SAV(ND) )              ; G_SAV(1:ND)=0.0D0

	  ALLOCATE ( RSQN_ON_RSQJ_SAV(ND) )   ; RSQN_ON_RSQJ_SAV(1:ND)=0.0_LDP
	  ALLOCATE ( RSQN_ON_RSQJ_SAV(ND) )   ; RSQN_ON_RSQJ_SAV(1:ND)=0.0D0

	  ALLOCATE ( RSQJNU_PREV(ND) )        ; RSQJNU_PREV(1:ND)=0.0_LDP
	  ALLOCATE ( RSQJNU_PREV(ND) )        ; RSQJNU_PREV(1:ND)=0.0D0

	  ALLOCATE ( RSQHNU_PREV(ND) )        ; RSQHNU_PREV(1:ND)=0.0_LDP
	  ALLOCATE ( RSQHNU_PREV(ND) )        ; RSQHNU_PREV(1:ND)=0.0D0

	    T1=0.5_LDP*(R_SM(I)+R_SM(I+1))
	    T1=0.5D0*(R_SM(I)+R_SM(I+1))

	    MOM_ERR_ON_FREQ(I)=0.0_LDP
	    MOM_ERR_ON_FREQ(I)=0.0D0

	    COH_VEC(I)=0.0_LDP
	    COH_VEC(I)=0.0D0

	  IF(G(I) .GT. 1.0_LDP)G(I)=1.0_LDP
	  IF(G(I) .GT. 1.0D0)G(I)=1.0D0

	    GAMH(I)=0.0_LDP
	    GAMH(I)=0.0D0

	    GAM(I)=0.0_LDP
	    GAM(I)=0.0D0

	    W(I)=0.0_LDP
	    W(I)=0.0D0

	    WPREV(I)=0.0_LDP
	    WPREV(I)=0.0D0

	    PSI(I)=0.0_LDP
	    PSI(I)=0.0D0

	    PSIPREV(I)=0.0_LDP
	    PSIPREV(I)=0.0D0

	    RSQJNU_PREV(I)=0.0_LDP
	    RSQJNU_PREV(I)=0.0D0

	    RSQHNU_PREV(I)=0.0_LDP
	    RSQHNU_PREV(I)=0.0D0

	    EPS(I)=0.0_LDP
	    EPS(I)=0.0D0

	    EPS_PREV(I)=0.0_LDP
	    EPS_PREV(I)=0.0D0

	  HBC_PREV=0.0_LDP;  IN_HBC_PREV=0.0_LDP; NBC_PREV=0.0_LDP
	  HBC_PREV=0.0D0;  IN_HBC_PREV=0.0D0; NBC_PREV=0.0D0

	    CON_GAMH(I)=2.0_LDP*3.33564E-06_LDP*(V(I)+V(I+1))/(R(I)+R(I+1))
	    CON_GAMH(I)=2.0D0*3.33564D-06*(V(I)+V(I+1))/(R(I)+R(I+1))

	    AV_SIGMA(I)=0.5_LDP*(SIGMA(I)+SIGMA(I+1))
	    AV_SIGMA(I)=0.5D0*(SIGMA(I)+SIGMA(I+1))

	    CON_GAM(I)=3.33564E-06_LDP*V(I)/R(I)
	    CON_GAM(I)=3.33564D-06*V(I)/R(I)

	  CON_GAM(ND)=3.33564E-06_LDP*V(ND)/R(ND)
	  CON_GAM(ND)=3.33564D-06*V(ND)/R(ND)

	      W(I)=GAMH(I)*( 1.0_LDP+AV_SIGMA(I)*G(I) )
	      W(I)=GAMH(I)*( 1.0D0+AV_SIGMA(I)*G(I) )

	      WPREV(I)=GAMH(I)*( 1.0_LDP+AV_SIGMA(I)*G_PREV(I) )
	      WPREV(I)=GAMH(I)*( 1.0D0+AV_SIGMA(I)*G_PREV(I) )

	      W(I)=GAMH(I)*( 1.0_LDP+AV_SIGMA(I)*G(I) )
	      W(I)=GAMH(I)*( 1.0D0+AV_SIGMA(I)*G(I) )

	      WPREV(I)=GAMH(I)*( 1.0_LDP+AV_SIGMA(I)*G_PREV(I) )
	      WPREV(I)=GAMH(I)*( 1.0D0+AV_SIGMA(I)*G_PREV(I) )

	      EPS(I)=GAMH(I)*AV_SIGMA(I)*RSQN_ON_RSQJ(I)/(1.0_LDP+W(I))
	      EPS(I)=GAMH(I)*AV_SIGMA(I)*RSQN_ON_RSQJ(I)/(1.0D0+W(I))

	      EPS_PREV(I)=GAMH(I)*AV_SIGMA(I)*RSQN_ON_RSQJ_PREV(I)/(1.0_LDP+W(I))
	      EPS_PREV(I)=GAMH(I)*AV_SIGMA(I)*RSQN_ON_RSQJ_PREV(I)/(1.0D0+W(I))

	  DTAUONQ(I)=0.5_LDP*(DTAU(I)+DTAU(I-1))/Q(I)
	  DTAUONQ(I)=0.5D0*(DTAU(I)+DTAU(I-1))/Q(I)

	  PSI(I)=DTAUONQ(I)*GAM(I)*( 1.0_LDP+SIGMA(I)*F(I) )
	  PSI(I)=DTAUONQ(I)*GAM(I)*( 1.0D0+SIGMA(I)*F(I) )

	  PSIPREV(I)=DTAUONQ(I)*GAM(I)*(  1.0_LDP+SIGMA(I)*F_PREV(I) )
	  PSIPREV(I)=DTAUONQ(I)*GAM(I)*(  1.0D0+SIGMA(I)*F_PREV(I) )

	  HU(I)=F(I+1)*Q(I+1)/(1.0_LDP+W(I))/DTAU(I)
	  HU(I)=F(I+1)*Q(I+1)/(1.0D0+W(I))/DTAU(I)

	  HL(I)=F(I)*Q(I)/(1.0_LDP+W(I))/DTAU(I)
	  HL(I)=F(I)*Q(I)/(1.0D0+W(I))/DTAU(I)

	  HS(I)=WPREV(I)/(1.0_LDP+W(I))
	  HS(I)=WPREV(I)/(1.0D0+W(I))

	    TB(I)=DTAUONQ(I)*(1.0_LDP-COH_VEC(I)) + PSI(I) + HL(I) + HU(I-1)
	    TB(I)=DTAUONQ(I)*(1.0D0-COH_VEC(I)) + PSI(I) + HL(I) + HU(I-1)

	    TB(I)=DTAUONQ(I)*(1.0_LDP-COH_VEC(I)) + PSI(I) + HL(I) + HU(I-1)
	    TB(I)=DTAUONQ(I)*(1.0D0-COH_VEC(I)) + PSI(I) + HL(I) + HU(I-1)

	XM(1)=0.0_LDP
	XM(1)=0.0D0

	TA(1)=0.0_LDP
	TA(1)=0.0D0

	VB(1)=0.0_LDP
	VB(1)=0.0D0

	VC(1)=0.0_LDP
	VC(1)=0.0D0

	  XM(ND)=DBB*R(ND)*R(ND)/3.0_LDP/CHI(ND)
	  XM(ND)=DBB*R(ND)*R(ND)/3.0D0/CHI(ND)

	  XM(ND)=R(ND)*R(ND)*IC*(0.25_LDP+0.5_LDP*IN_HBC)
	  XM(ND)=R(ND)*R(ND)*IC*(0.25D0+0.5D0*IN_HBC)

	TC(ND)=0.0_LDP
	TC(ND)=0.0D0

	VB(ND)=0.0_LDP
	VB(ND)=0.0D0

	VC(ND)=0.0_LDP
	VC(ND)=0.0D0

	PSIPREV(ND)=0.0_LDP
	PSIPREV(ND)=0.0D0

	IF(MINVAL(XM(1:ND)) .LE. 0.0_LDP)THEN
	IF(MINVAL(XM(1:ND)) .LE. 0.0D0)THEN

	  IF(XM(1) .LT. 0.0_LDP)THEN
	  IF(XM(1) .LT. 0.0D0)THEN

	  IF(XM(I) .LT. 0.0_LDP)THEN
	  IF(XM(I) .LT. 0.0D0)THEN

	    XM(I)=ABS(XM(I))/10.0_LDP
	    XM(I)=ABS(XM(I))/10.0D0


mom_j_cmf_v7.f

	DATA VDOP_FRAC_SAV/-10001.1_LDP/    !Absurd value
	DATA VDOP_FRAC_SAV/-10001.1D0/    !Absurd value

	  ALLOCATE ( RSQJNU(ND) )             ; RSQJNU(1:ND)=0.0_LDP
	  ALLOCATE ( RSQJNU(ND) )             ; RSQJNU(1:ND)=0.0D0

	  ALLOCATE ( RSQHNU(ND) )             ; RSQHNU(1:ND)=0.0_LDP
	  ALLOCATE ( RSQHNU(ND) )             ; RSQHNU(1:ND)=0.0D0

	  ALLOCATE ( F_SAV(ND) )              ; F_SAV(1:ND)=0.0_LDP
	  ALLOCATE ( F_SAV(ND) )              ; F_SAV(1:ND)=0.0D0

	  ALLOCATE ( G_SAV(ND) )              ; G_SAV(1:ND)=0.0_LDP
	  ALLOCATE ( G_SAV(ND) )              ; G_SAV(1:ND)=0.0D0

	  ALLOCATE ( RSQN_ON_RSQJ_SAV(ND) )   ; RSQN_ON_RSQJ_SAV(1:ND)=0.0_LDP
	  ALLOCATE ( RSQN_ON_RSQJ_SAV(ND) )   ; RSQN_ON_RSQJ_SAV(1:ND)=0.0D0

	  ALLOCATE ( RSQJNU_PREV(ND) )        ; RSQJNU_PREV(1:ND)=0.0_LDP
	  ALLOCATE ( RSQJNU_PREV(ND) )        ; RSQJNU_PREV(1:ND)=0.0D0

	  ALLOCATE ( RSQHNU_PREV(ND) )        ; RSQHNU_PREV(1:ND)=0.0_LDP
	  ALLOCATE ( RSQHNU_PREV(ND) )        ; RSQHNU_PREV(1:ND)=0.0D0

	    T1=0.5_LDP*(R_SM(I)+R_SM(I+1))
	    T1=0.5D0*(R_SM(I)+R_SM(I+1))

	    MOM_ERR_ON_FREQ(I)=0.0_LDP
	    MOM_ERR_ON_FREQ(I)=0.0D0

	    COH_VEC(I)=0.0_LDP
	    COH_VEC(I)=0.0D0

	  IF(G(I) .GT. 1.0_LDP)G(I)=1.0_LDP
	  IF(G(I) .GT. 1.0D0)G(I)=1.0D0

	    GAMH(I)=0.0_LDP
	    GAMH(I)=0.0D0

	    GAM(I)=0.0_LDP
	    GAM(I)=0.0D0

	    W(I)=0.0_LDP
	    W(I)=0.0D0

	    WPREV(I)=0.0_LDP
	    WPREV(I)=0.0D0

	    PSI(I)=0.0_LDP
	    PSI(I)=0.0D0

	    PSIPREV(I)=0.0_LDP
	    PSIPREV(I)=0.0D0

	    RSQJNU_PREV(I)=0.0_LDP
	    RSQJNU_PREV(I)=0.0D0

	    RSQHNU_PREV(I)=0.0_LDP
	    RSQHNU_PREV(I)=0.0D0

	    EPS(I)=0.0_LDP
	    EPS(I)=0.0D0

	    EPS_PREV(I)=0.0_LDP
	    EPS_PREV(I)=0.0D0

	  HBC_PREV=0.0_LDP;  IN_HBC_PREV=0.0_LDP; NBC_PREV=0.0_LDP
	  HBC_PREV=0.0D0;  IN_HBC_PREV=0.0D0; NBC_PREV=0.0D0

	    CON_GAMH(I)=2.0_LDP*3.33564E-06_LDP*(V(I)+V(I+1))/(R(I)+R(I+1))
	    CON_GAMH(I)=2.0D0*3.33564D-06*(V(I)+V(I+1))/(R(I)+R(I+1))

	    AV_SIGMA(I)=0.5_LDP*(SIGMA(I)+SIGMA(I+1))
	    AV_SIGMA(I)=0.5D0*(SIGMA(I)+SIGMA(I+1))

	    CON_GAM(I)=3.33564E-06_LDP*V(I)/R(I)
	    CON_GAM(I)=3.33564D-06*V(I)/R(I)

	  CON_GAM(ND)=3.33564E-06_LDP*V(ND)/R(ND)
	  CON_GAM(ND)=3.33564D-06*V(ND)/R(ND)

	      W(I)=GAMH(I)*( 1.0_LDP+AV_SIGMA(I)*G(I) )
	      W(I)=GAMH(I)*( 1.0D0+AV_SIGMA(I)*G(I) )

	      WPREV(I)=GAMH(I)*( 1.0_LDP+AV_SIGMA(I)*G_PREV(I) )
	      WPREV(I)=GAMH(I)*( 1.0D0+AV_SIGMA(I)*G_PREV(I) )

	      W(I)=GAMH(I)*( 1.0_LDP+AV_SIGMA(I)*G(I) )
	      W(I)=GAMH(I)*( 1.0D0+AV_SIGMA(I)*G(I) )

	      WPREV(I)=GAMH(I)*( 1.0_LDP+AV_SIGMA(I)*G_PREV(I) )
	      WPREV(I)=GAMH(I)*( 1.0D0+AV_SIGMA(I)*G_PREV(I) )

	      EPS(I)=GAMH(I)*AV_SIGMA(I)*RSQN_ON_RSQJ(I)/(1.0_LDP+W(I))
	      EPS(I)=GAMH(I)*AV_SIGMA(I)*RSQN_ON_RSQJ(I)/(1.0D0+W(I))

	      EPS_PREV(I)=GAMH(I)*AV_SIGMA(I)*RSQN_ON_RSQJ_PREV(I)/(1.0_LDP+W(I))
	      EPS_PREV(I)=GAMH(I)*AV_SIGMA(I)*RSQN_ON_RSQJ_PREV(I)/(1.0D0+W(I))

	  DTAUONQ(I)=0.5_LDP*(DTAU(I)+DTAU(I-1))/Q(I)
	  DTAUONQ(I)=0.5D0*(DTAU(I)+DTAU(I-1))/Q(I)

	  PSI(I)=DTAUONQ(I)*GAM(I)*( 1.0_LDP+SIGMA(I)*F(I) )
	  PSI(I)=DTAUONQ(I)*GAM(I)*( 1.0D0+SIGMA(I)*F(I) )

	  PSIPREV(I)=DTAUONQ(I)*GAM(I)*(  1.0_LDP+SIGMA(I)*F_PREV(I) )
	  PSIPREV(I)=DTAUONQ(I)*GAM(I)*(  1.0D0+SIGMA(I)*F_PREV(I) )

	  HU(I)=F(I+1)*Q(I+1)/(1.0_LDP+W(I))/DTAU(I)
	  HU(I)=F(I+1)*Q(I+1)/(1.0D0+W(I))/DTAU(I)

	  HL(I)=F(I)*Q(I)/(1.0_LDP+W(I))/DTAU(I)
	  HL(I)=F(I)*Q(I)/(1.0D0+W(I))/DTAU(I)

	  HS(I)=WPREV(I)/(1.0_LDP+W(I))
	  HS(I)=WPREV(I)/(1.0D0+W(I))

	    TB(I)=DTAUONQ(I)*(1.0_LDP-COH_VEC(I)) + PSI(I) + HL(I) + HU(I-1)
	    TB(I)=DTAUONQ(I)*(1.0D0-COH_VEC(I)) + PSI(I) + HL(I) + HU(I-1)

	    TB(I)=DTAUONQ(I)*(1.0_LDP-COH_VEC(I)) + PSI(I) + HL(I) + HU(I-1)
	    TB(I)=DTAUONQ(I)*(1.0D0-COH_VEC(I)) + PSI(I) + HL(I) + HU(I-1)

	  XM(ND)=DBB*R(ND)*R(ND)/3.0_LDP/CHI(ND)
	  XM(ND)=DBB*R(ND)*R(ND)/3.0D0/CHI(ND)

	  XM(ND)=R(ND)*R(ND)*IC*(0.25_LDP+0.5_LDP*IN_HBC)
	  XM(ND)=R(ND)*R(ND)*IC*(0.25D0+0.5D0*IN_HBC)

	TC(ND)=0.0_LDP
	TC(ND)=0.0D0

	VB(ND)=0.0_LDP
	VB(ND)=0.0D0

	VC(ND)=0.0_LDP
	VC(ND)=0.0D0

	PSIPREV(ND)=0.0_LDP
	PSIPREV(ND)=0.0D0

	  TA(1)=0.0_LDP
	  TA(1)=0.0D0

	  VB(1)=0.0_LDP
	  VB(1)=0.0D0

	  VC(1)=0.0_LDP
	  VC(1)=0.0D0

	  PSI(1)=GAM(1)*(1.0_LDP+SIGMA(1)*F(1))
	  PSI(1)=GAM(1)*(1.0D0+SIGMA(1)*F(1))

	  PSIPREV(1)=GAM(1)*(1.0_LDP+SIGMA(1)*F_PREV(1))
	  PSIPREV(1)=GAM(1)*(1.0D0+SIGMA(1)*F_PREV(1))

	  T1=0.25_LDP*(CHI(2)+CHI(1))*(R(2)-R(1))
	  T1=0.25D0*(CHI(2)+CHI(1))*(R(2)-R(1))

	  TB(1)= (COH_VEC(1)-1.0_LDP) -(HL(1)+HBC+EPS(1))/T1 -PSI(1)
	  TB(1)= (COH_VEC(1)-1.0D0) -(HL(1)+HBC+EPS(1))/T1 -PSI(1)

	IF(MINVAL(XM(1:ND)) .LE. 0.0_LDP)THEN
	IF(MINVAL(XM(1:ND)) .LE. 0.0D0)THEN

	  IF(XM(I) .LT. 0.0_LDP)THEN
	  IF(XM(I) .LT. 0.0D0)THEN

	    XM(I)=ABS(XM(I))/10.0_LDP
	    XM(I)=ABS(XM(I))/10.0D0


mon_interp.f

	PARAMETER (ONE=1.0_LDP)
	PARAMETER (ONE=1.0D0)

	1            MIN(ABS(SI),0.5_LDP*ABS(DYI))
	1            MIN(ABS(SI),0.5D0*ABS(DYI))

	1            MIN(ABS(SI),ABS(SIP1),0.5_LDP*ABS(DYIP1))
	1            MIN(ABS(SI),ABS(SIP1),0.5D0*ABS(DYIP1))

                A=(DYI+DYIP1-2.0_LDP*SI)/HI/HI
                A=(DYI+DYIP1-2.0D0*SI)/HI/HI

	        B=(3.0_LDP*SI-2.0_LDP*DYI-DYIP1)/HI
	        B=(3.0D0*SI-2.0D0*DYI-DYIP1)/HI

	1            MIN(ABS(SIM1),ABS(SI),0.5_LDP*ABS(DYI))
	1            MIN(ABS(SIM1),ABS(SI),0.5D0*ABS(DYI))

	1            MIN(ABS(SI),0.5_LDP*ABS(DYIP1))
	1            MIN(ABS(SI),0.5D0*ABS(DYIP1))

                A=(DYI+DYIP1-2.0_LDP*SI)/HI/HI
                A=(DYI+DYIP1-2.0D0*SI)/HI/HI

	        B=(3.0_LDP*SI-2.0_LDP*DYI-DYIP1)/HI
	        B=(3.0D0*SI-2.0D0*DYI-DYIP1)/HI

	1            MIN(ABS(SIM1),ABS(SI),0.5_LDP*ABS(DYI))
	1            MIN(ABS(SIM1),ABS(SI),0.5D0*ABS(DYI))

	1            MIN(ABS(SI),ABS(SIP1),0.5_LDP*ABS(DYIP1))
	1            MIN(ABS(SI),ABS(SIP1),0.5D0*ABS(DYIP1))

                A=(DYI+DYIP1-2.0_LDP*SI)/HI/HI
                A=(DYI+DYIP1-2.0D0*SI)/HI/HI

	        B=(3.0_LDP*SI-2.0_LDP*DYI-DYIP1)/HI
	        B=(3.0D0*SI-2.0D0*DYI-DYIP1)/HI


mon_interp_fast.f

	PARAMETER (ONE=1.0_LDP)
	PARAMETER (ONE=1.0D0)

	    H(ND)=0.0_LDP
	    H(ND)=0.0D0

	  D(1)=( SIGN(ONE,S(1))+SIGN(ONE,D(1)) )*MIN(ABS(S(1)),0.5_LDP*ABS(D(1)))
	  D(1)=( SIGN(ONE,S(1))+SIGN(ONE,D(1)) )*MIN(ABS(S(1)),0.5D0*ABS(D(1)))

	1          MIN(ABS(S(I-1)),ABS(S(I)),0.5_LDP*ABS(D(I)))
	1          MIN(ABS(S(I-1)),ABS(S(I)),0.5D0*ABS(D(I)))

	1      MIN(ABS(S(ND-1)),0.5_LDP*ABS(D(ND)))
	1      MIN(ABS(S(ND-1)),0.5D0*ABS(D(ND)))

            A(I)=(D(I)+D(I+1)-2.0_LDP*S(I))/H(I)/H(I)
            A(I)=(D(I)+D(I+1)-2.0D0*S(I))/H(I)/H(I)

	    B(I)=(3.0_LDP*S(I)-2.0_LDP*D(I)-D(I+1))/H(I)
	    B(I)=(3.0*S(I)-2.0D0*D(I)-D(I+1))/H(I)


mon_interp_fast_v2.f

	PARAMETER (ONE=1.0_LDP)
	PARAMETER (ONE=1.0D0)

	    H(ND)=0.0_LDP
	    H(ND)=0.0D0

	  D(1)=( SIGN(ONE,S(1))+SIGN(ONE,D(1)) )*MIN(ABS(S(1)),0.5_LDP*ABS(D(1)))
	  D(1)=( SIGN(ONE,S(1))+SIGN(ONE,D(1)) )*MIN(ABS(S(1)),0.5*ABS(D(1)))

	1          MIN(ABS(S(I-1)),ABS(S(I)),0.5_LDP*ABS(D(I)))
	1          MIN(ABS(S(I-1)),ABS(S(I)),0.5*ABS(D(I)))

	1      MIN(ABS(S(ND-1)),0.5_LDP*ABS(D(ND)))
	1      MIN(ABS(S(ND-1)),0.5*ABS(D(ND)))

            A(I)=(D(I)+D(I+1)-2.0_LDP*S(I))/H(I)/H(I)
            A(I)=(D(I)+D(I+1)-2.0*S(I))/H(I)/H(I)

	    B(I)=(3.0_LDP*S(I)-2.0_LDP*D(I)-D(I+1))/H(I)
	    B(I)=(3.0*S(I)-2.0*D(I)-D(I+1))/H(I)


mon_interp_nonmon.f

	PARAMETER (ONE=1.0_LDP)
	PARAMETER (ONE=1.0D0)

	    H(ND)=0.0_LDP
	    H(ND)=0.0D0

	  D(1)=( SIGN(ONE,S(1))+SIGN(ONE,D(1)) )*MIN(ABS(S(1)),0.5_LDP*ABS(D(1)))
	  D(1)=( SIGN(ONE,S(1))+SIGN(ONE,D(1)) )*MIN(ABS(S(1)),0.5D0*ABS(D(1)))

	1          MIN(ABS(S(I-1)),ABS(S(I)),0.5_LDP*ABS(D(I)))
	1          MIN(ABS(S(I-1)),ABS(S(I)),0.5D0*ABS(D(I)))

	1      MIN(ABS(S(ND-1)),0.5_LDP*ABS(D(ND)))
	1      MIN(ABS(S(ND-1)),0.5D0*ABS(D(ND)))

            A(I)=(D(I)+D(I+1)-2.0_LDP*S(I))/H(I)/H(I)
            A(I)=(D(I)+D(I+1)-2.0D0*S(I))/H(I)/H(I)

	    B(I)=(3.0_LDP*S(I)-2.0_LDP*D(I)-D(I+1))/H(I)
	    B(I)=(3.0*S(I)-2.0D0*D(I)-D(I+1))/H(I)


mon_int_funs_v2.f

	PARAMETER (ONE=1.0_LDP)
	PARAMETER (ONE=1.0D0)

	D(1)=( SIGN(ONE,S(1))+SIGN(ONE,D(1)) )*MIN(ABS(S(1)),0.5_LDP*ABS(D(1)))
	D(1)=( SIGN(ONE,S(1))+SIGN(ONE,D(1)) )*MIN(ABS(S(1)),0.5D0*ABS(D(1)))

	1          MIN(ABS(S(I-1)),ABS(S(I)),0.5_LDP*ABS(D(I)))
	1          MIN(ABS(S(I-1)),ABS(S(I)),0.5D0*ABS(D(I)))

	1        MIN(ABS(S(ND-1)),0.5_LDP*ABS(D(ND)))
	1        MIN(ABS(S(ND-1)),0.5D0*ABS(D(ND)))

          COEF(I,1)=(D(I)+D(I+1)-2.0_LDP*S(I))/H(I)/H(I)
          COEF(I,1)=(D(I)+D(I+1)-2.0D0*S(I))/H(I)/H(I)

	  COEF(I,2)=(3.0_LDP*S(I)-2.0_LDP*D(I)-D(I+1))/H(I)
	  COEF(I,2)=(3.0D0*S(I)-2.0D0*D(I)-D(I+1))/H(I)

	COEF(ND,1:2)=0.0_LDP
	COEF(ND,1:2)=0.0D0


mon_int_ins_v1.f

	PARAMETER (ONE=1.0_LDP)
	PARAMETER (ONE=1.0D0)

	D(1)=( SIGN(ONE,S(1))+SIGN(ONE,D(1)) )*MIN(ABS(S(1)),0.5_LDP*ABS(D(1)))
	D(1)=( SIGN(ONE,S(1))+SIGN(ONE,D(1)) )*MIN(ABS(S(1)),0.5*ABS(D(1)))

	1          MIN(ABS(S(I-1)),ABS(S(I)),0.5_LDP*ABS(D(I)))
	1          MIN(ABS(S(I-1)),ABS(S(I)),0.5*ABS(D(I)))

	1        MIN(ABS(S(ND-1)),0.5_LDP*ABS(D(ND)))
	1        MIN(ABS(S(ND-1)),0.5*ABS(D(ND)))

          COEF(I,1)=(D(I)+D(I+1)-2.0_LDP*S(I))/H(I)/H(I)
          COEF(I,1)=(D(I)+D(I+1)-2.0*S(I))/H(I)/H(I)

	  COEF(I,2)=(3.0_LDP*S(I)-2.0_LDP*D(I)-D(I+1))/H(I)
	  COEF(I,2)=(3.0*S(I)-2.0*D(I)-D(I+1))/H(I)

	      dCHIdR_INS(I,K)=((3.0_LDP*COEF(I,1)*DELR+2.0_LDP*COEF(I,2))*DELR+
	      dCHIdR_INS(I,K)=((3.0D0*COEF(I,1)*DELR+2.0D0*COEF(I,2))*DELR+


monotonic_integrate.f

	PARAMETER (ONE=1.0_LDP)
	PARAMETER (ONE=1.0D0)

	D(1)=( SIGN(ONE,S(1))+SIGN(ONE,D(1)) )*MIN(ABS(S(1)),0.5_LDP*ABS(D(1)))
	D(1)=( SIGN(ONE,S(1))+SIGN(ONE,D(1)) )*MIN(ABS(S(1)),0.5D0*ABS(D(1)))

	1          MIN(ABS(S(I-1)),ABS(S(I)),0.5_LDP*ABS(D(I)))
	1          MIN(ABS(S(I-1)),ABS(S(I)),0.5D0*ABS(D(I)))

	1        MIN(ABS(S(ND-1)),0.5_LDP*ABS(D(ND)))
	1        MIN(ABS(S(ND-1)),0.5D0*ABS(D(ND)))

	INTEGRAL(1)=0.5_LDP*H(1)*( CHI(1)+CHI(2)+H(1)*(D(1)-D(2))/6.0_LDP )
	INTEGRAL(1)=0.5D0*H(1)*( CHI(1)+CHI(2)+H(1)*(D(1)-D(2))/6.0D0 )

	  INTEGRAL(I)=INTEGRAL(I-1)+0.5_LDP*H(I)*( CHI(I)+CHI(I+1)+H(I)*(D(I)-D(I+1))/6.0_LDP )
	  INTEGRAL(I)=INTEGRAL(I-1)+0.5D0*H(I)*( CHI(I)+CHI(I+1)+H(I)*(D(I)-D(I+1))/6.0D0 )


mult2d.f


multvec.f


nagminsol.f


newgsit.f

	FQ(:,:)=0.0_LDP
	FQ(:,:)=0.0D0

	  IF(IT .EQ. 1)RELAX=1.0_LDP
	  IF(IT .EQ. 1)RELAX=1.0D0

	    IF(ABS(WXX(J)-FQ(J,I)) .GT. ABS(FQ(J,I)/1000.0_LDP)
	    IF(ABS(WXX(J)-FQ(J,I)) .GT. ABS(FQ(J,I)/1000.0D0)

	    IF(ABS(FQ(J,I)) .GT. 1.0E+10_LDP)THEN
	    IF(ABS(FQ(J,I)) .GT. 1.0D+10)THEN


newjsold.f

	FB(:,:)=0.0_LDP
	FB(:,:)=0.0D0

	  FB(I,I)=1.0_LDP
	  FB(I,I)=1.0D0

	RJ(:)=0.0_LDP
	RJ(:)=0.0D0

	    TOR=CHI(1)*R(1)*R(1)*(1.570796_LDP-ACOS(P(LS)/R(1)))/P(LS)
	    TOR=CHI(1)*R(1)*R(1)*(1.570796D0-ACOS(P(LS)/R(1)))/P(LS)

	  IBOUND=ZETA(1)*(1.0_LDP-EXP(-TOR))
	  IBOUND=ZETA(1)*(1.0D0-EXP(-TOR))

	  TOR=0.0_LDP
	  TOR=0.0D0

	  IBOUND=0.0_LDP
	  IBOUND=0.0D0


newpertjd.f

	F2DA(:,:)=0.0_LDP
	F2DA(:,:)=0.0D0

	FC(:,:)=0.0_LDP
	FC(:,:)=0.0D0

	FA(:)=0.0_LDP
	FA(:)=0.0D0

	    IF(P(LS) .GT. 0.0_LDP)THEN
	    IF(P(LS) .GT. 0.0D0)THEN

	      TOR=CHI(1)*R(1)*R(1)*(1.570796_LDP-ACOS(P(LS)/R(1)))/P(LS)
	      TOR=CHI(1)*R(1)*R(1)*(1.570796D0-ACOS(P(LS)/R(1)))/P(LS)

	    TOR=0.0_LDP
	    TOR=0.0D0

	  IF(TOR .GT. 0.01_LDP)THEN
	  IF(TOR .GT. 0.01D0)THEN

	    IBOUND=SOURCE(1)*(1.0_LDP-EXP(-TOR))
	    IBOUND=SOURCE(1)*(1.0D0-EXP(-TOR))

	1             (1.0_LDP-TOR/2.0_LDP*(1.0_LDP-TOR/3.0_LDP*(1.0_LDP-TOR/4.0_LDP)))
	1             (1.0D0-TOR/2.0D0*(1.0D0-TOR/3.0D0*(1.0D0-TOR/4.0D0)))

	      VK(1,1)=SOURCE(1)*(1.0_LDP-EXP(-TOR))/CHI(1)
	      VK(1,1)=SOURCE(1)*(1.0D0-EXP(-TOR))/CHI(1)

	        XM(I)=0.0_LDP
	        XM(I)=0.0D0

	  FB(I,I)=FB(I,I)+1.0_LDP
	  FB(I,I)=FB(I,I)+1.0D0


new_r_scale_v2.f

	R_MAX=R(1)*100.0_LDP**(1.0_LDP/(ALPHA-1.0_LDP))
	R_MAX=R(1)*100.0D0**(1.0D0/(ALPHA-1.0D0))

	DELR=EXP( LOG(R_MAX/R(1))/50.0_LDP )
	DELR=EXP( LOG(R_MAX/R(1))/50.0D0 )

	TAU(1)=0.0_LDP
	TAU(1)=0.0D0

	  TAU(1)=TAU(1)+0.5_LDP*(Z_BIG-Z_SMALL)*(CHI_BIG+CHI_SMALL)
	  TAU(1)=TAU(1)+0.5D0*(Z_BIG-Z_SMALL)*(CHI_BIG+CHI_SMALL)

	  TAU(I)=TAU(I-1)+(CHI(I)+CHI(I-1))*(Z(I-1)-Z(I))*0.5_LDP
	  TAU(I)=TAU(I-1)+(CHI(I)+CHI(I-1))*(Z(I-1)-Z(I))*0.5D0

	  TAU_NEW(2)=TAU(1)+DTAU/64.0_LDP
	  TAU_NEW(2)=TAU(1)+DTAU/64.0D0

	  TAU_NEW(3)=TAU(1)+DTAU/16.0_LDP
	  TAU_NEW(3)=TAU(1)+DTAU/16.0D0

	  TAU_NEW(4)=TAU(1)+DTAU/4.0_LDP
	  TAU_NEW(4)=TAU(1)+DTAU/4.0D0

	  TAU_NEW(ND-1)=TAU(NI)-DTAU/64.0_LDP
	  TAU_NEW(ND-1)=TAU(NI)-DTAU/64.0D0

	  TAU_NEW(ND-2)=TAU(NI)-DTAU/16.0_LDP
	  TAU_NEW(ND-2)=TAU(NI)-DTAU/16.0D0

	  TAU_NEW(ND-3)=TAU(NI)-DTAU/4.0_LDP
	  TAU_NEW(ND-3)=TAU(NI)-DTAU/4.0D0


newvkimd.f

	W(:,:)=0.0_LDP
	W(:,:)=0.0D0

	ALPHA=0.5_LDP*(Z(1)-Z(2)) * (U(2)-U(1)) /DTAU(1)/DTAU(1)
	ALPHA=0.5D0*(Z(1)-Z(2)) * (U(2)-U(1)) /DTAU(1)/DTAU(1)

	W(1,1)=ALPHA*(  1.0_LDP+(Z(1)-Z(2))/6.0_LDP*( A(2)*Z(2)/R(2)
	W(1,1)=ALPHA*(  1.0D0+(Z(1)-Z(2))/6.0D0*( A(2)*Z(2)/R(2)

	W(1,2)=ALPHA*(  1.0_LDP+(Z(1)-Z(2))/6.0_LDP*( B(2)*Z(2)/R(2)
	W(1,2)=ALPHA*(  1.0D0+(Z(1)-Z(2))/6.0D0*( B(2)*Z(2)/R(2)

	W(1,3)=ALPHA*(Z(1)-Z(2))*Z(2)*C(2)/R(2)/6.0_LDP
	W(1,3)=ALPHA*(Z(1)-Z(2))*Z(2)*C(2)/R(2)/6.0D0

	  ALPHA=( 0.5_LDP*(U(I)-S(I)) + (U(J)-U(I))/DTAU(J)/DTAU(J) )
	  ALPHA=( 0.5D0*(U(I)-S(I)) + (U(J)-U(I))/DTAU(J)/DTAU(J) )

	1           *(Z(J)-Z(I))*0.5_LDP
	1           *(Z(J)-Z(I))*0.5D0

	  BETA=( 0.5_LDP*(U(I)-S(I)) + (U(K)-U(I))/DTAU(I)/DTAU(I) )
	  BETA=( 0.5D0*(U(I)-S(I)) + (U(K)-U(I))/DTAU(I)/DTAU(I) )

	1           *(Z(I)-Z(K))*0.5_LDP
	1           *(Z(I)-Z(K))*0.5D0

	1                   (Z(J)-Z(I))/6.0_LDP
	1                   (Z(J)-Z(I))/6.0D0

	  W(I,J)=ALPHA*(  1.0_LDP+(Z(J)-Z(I))/6.0_LDP*
	  W(I,J)=ALPHA*(  1.0D0+(Z(J)-Z(I))/6.0D0*

	1            -BETA/6.0_LDP* (Z(I)-Z(K)) *A(I)*Z(I)/R(I)
	1            -BETA/6.0D0* (Z(I)-Z(K)) *A(I)*Z(I)/R(I)

	  W(I,K)=BETA*(  1.0_LDP+(Z(I)-Z(K))/6.0_LDP*
	  W(I,K)=BETA*(  1.0D0+(Z(I)-Z(K))/6.0D0*

	1            +ALPHA/6.0_LDP* (Z(J)-Z(I)) *C(I)*Z(I)/R(I)
	1            +ALPHA/6.0D0* (Z(J)-Z(I)) *C(I)*Z(I)/R(I)

	  W(I,I)=ALPHA*(  1.0_LDP+(Z(J)-Z(I))/6.0_LDP*
	  W(I,I)=ALPHA*(  1.0D0+(Z(J)-Z(I))/6.0D0*

	1       +BETA*(  1.0_LDP+(Z(I)-Z(K))/6.0_LDP*
	1       +BETA*(  1.0D0+(Z(I)-Z(K))/6.0D0*

	1       +0.5_LDP*S(I)*(DTAU(J)+DTAU(I))/RKI(I)
	1       +0.5D0*S(I)*(DTAU(J)+DTAU(I))/RKI(I)

	1                   (Z(I)-Z(K))/6.0_LDP
	1                   (Z(I)-Z(K))/6.0D0

	IF(LS .GT. NC)ALPHA=ALPHA+0.5_LDP*( S(NI)-U(NI) )
	IF(LS .GT. NC)ALPHA=ALPHA+0.5D0*( S(NI)-U(NI) )

	ALPHA=0.5_LDP*(Z(NI-1)-Z(NI))*ALPHA
	ALPHA=0.5D0*(Z(NI-1)-Z(NI))*ALPHA

	W(NI,NI-2)=-ALPHA*(Z(NI-1)-Z(NI))*A(NI-1)*Z(NI-1)/R(NI-1)/6.0_LDP
	W(NI,NI-2)=-ALPHA*(Z(NI-1)-Z(NI))*A(NI-1)*Z(NI-1)/R(NI-1)/6.0D0

	W(NI,NI-1)=ALPHA*(  1.0_LDP + (Z(NI-1)-Z(NI))*( A(NI)*Z(NI)/R(NI)
	W(NI,NI-1)=ALPHA*(  1.0D0 + (Z(NI-1)-Z(NI))*( A(NI)*Z(NI)/R(NI)

	1                 - B(NI-1)*Z(NI-1)/R(NI-1) )/6.0_LDP  )
	1                 - B(NI-1)*Z(NI-1)/R(NI-1) )/6.0D0  )

	W(NI,NI)=ALPHA*(  1.0_LDP + (Z(NI-1)-Z(NI))*( B(NI)*Z(NI)/R(NI)
	W(NI,NI)=ALPHA*(  1.0D0 + (Z(NI-1)-Z(NI))*( B(NI)*Z(NI)/R(NI)

	1                 - C(NI-1)*Z(NI-1)/R(NI-1) )/6.0_LDP  )
	1                 - C(NI-1)*Z(NI-1)/R(NI-1) )/6.0D0  )

	  W(NI,NI)=W(NI,NI)-DTAU(NI-1)*S(NI)/RKI(NI)*0.5_LDP
	  W(NI,NI)=W(NI,NI)-DTAU(NI-1)*S(NI)/RKI(NI)*0.5D0


newwmat.f

	W(:,:)=0.0_LDP
	W(:,:)=0.0D0

	 IF(TOR .GT. 0.01_LDP)THEN
	 IF(TOR .GT. 0.01D0)THEN

	  W(1,1)=THETA(1)*(1.0_LDP-EXP(-TOR))
	  W(1,1)=THETA(1)*(1.0D0-EXP(-TOR))

	1   (1.0_LDP-TOR/2.0_LDP*(1.0_LDP-TOR/3.0_LDP*(1.0_LDP-TOR/4.0_LDP)))*TOR
	1   (1.0D0-TOR/2.0D0*(1.0D0-TOR/3.0D0*(1.0D0-TOR/4.0D0)))*TOR

	  W(I,I)=THETA(I)*(DTAU(I-1)+DTAU(I))*0.5_LDP
	  W(I,I)=THETA(I)*(DTAU(I-1)+DTAU(I))*0.5D0

	IF(LS .GT. NC)W(NI,NI)=-0.5_LDP*DTAU(NI-1)*THETA(NI)
	IF(LS .GT. NC)W(NI,NI)=-0.5D0*DTAU(NI-1)*THETA(NI)


ngaccel_arb_ord.f

	WEIGHT=1.0_LDP
	WEIGHT=1.0D0

          IF(USE_WEIGHTING .AND. PREVRJ(0,I) .NE. 0.0_LDP)WEIGHT(I)=1.0_LDP/PREVRJ(0,I)
          IF(USE_WEIGHTING .AND. PREVRJ(0,I) .NE. 0.0D0)WEIGHT(I)=1.0D0/PREVRJ(0,I)

	RHS=0.0_LDP
	RHS=0.0D0

	CMAT=0.0_LDP
	CMAT=0.0D0


ngaccel.f

	PRECIS=100.0_LDP*X02AJF()
	PRECIS=100.0D0*X02AJF()

	A1=0.0_LDP
	A1=0.0D0

	B1=0.0_LDP
	B1=0.0D0

	B2=0.0_LDP
	B2=0.0D0

	C1=0.0_LDP
	C1=0.0D0

	C2=0.0_LDP
	C2=0.0D0

	  W=1.0_LDP
	  W=1.0D0

          IF(WEIGHT .AND. PREVRJ(1,I) .NE. 0.0_LDP)W=1.0_LDP/PREVRJ(1,I)
          IF(WEIGHT .AND. PREVRJ(1,I) .NE. 0.0D0)W=1.0D0/PREVRJ(1,I)

	  IF(A1 .NE. 0.0_LDP)THEN
	  IF(A1 .NE. 0.0D0)THEN

	    B=0.0_LDP
	    B=0.0D0

	  ELSE IF(B2 .NE. 0.0_LDP)THEN
	  ELSE IF(B2 .NE. 0.0D0)THEN

	    A=0.0_LDP
	    A=0.0D0

	    A=0.0_LDP
	    A=0.0D0

	    B=0.0_LDP
	    B=0.0D0


nordangqw.f

	    TB(J)=0.0_LDP
	    TB(J)=0.0D0


nordangqw_v2.f

	    MU(J)=0.0_LDP
	    MU(J)=0.0D0


nordflux.f

	SOB(:)=0.0_LDP
	SOB(:)=0.0D0

	  IF(P(LS) .GT. 0.0_LDP)THEN
	  IF(P(LS) .GT. 0.0D0)THEN

	    TOR=CHI(1)*R(1)*R(1)*(1.570796_LDP-ACOS(P(LS)/R(1)))/P(LS)
	    TOR=CHI(1)*R(1)*R(1)*(1.570796D0-ACOS(P(LS)/R(1)))/P(LS)

	  IBOUND=S1*(1.0_LDP-EXP(-TOR))
	  IBOUND=S1*(1.0D0-EXP(-TOR))

	  IBOUND=0.0_LDP
	  IBOUND=0.0D0

	      DTAU(I)=0.5_LDP*(Z(I)-Z(I+1))*(CHI(I)+CHI(I+1)+(Z(I)-Z(I+1))
	      DTAU(I)=0.5D0*(Z(I)-Z(I+1))*(CHI(I)+CHI(I+1)+(Z(I)-Z(I+1))

	1     *(dCHIdR(I+1)*Z(I+1)/R(I+1)-dCHIdR(I)*Z(I)/R(I))/6.0_LDP)
	1     *(dCHIdR(I+1)*Z(I+1)/R(I+1)-dCHIdR(I)*Z(I)/R(I))/6.0D0)

	    XM(1)=0.0_LDP
	    XM(1)=0.0D0

	    TA(1)=0.0_LDP
	    TA(1)=0.0D0

	    TC(1)=1.0_LDP/DTAU(1)
	    TC(1)=1.0D0/DTAU(1)

	    TB(1)=-1.0_LDP-TC(1)
	    TB(1)=-1.0D0-TC(1)

	      TC(I)=1.0_LDP/DTAU(I)
	      TC(I)=1.0D0/DTAU(I)

	      TB(I)=-0.5_LDP*(DTAU(I-1)+DTAU(I))-TA(I)-TC(I)
	      TB(I)=-0.5D0*(DTAU(I-1)+DTAU(I))-TA(I)-TC(I)

	      XM(I)=-SOURCE(I)*(DTAU(I-1)+DTAU(I))*0.5_LDP
	      XM(I)=-SOURCE(I)*(DTAU(I-1)+DTAU(I))*0.5D0

	      TB(NI)=-TA(NI)+DTAU(NI-1)/2.0_LDP
	      TB(NI)=-TA(NI)+DTAU(NI-1)/2.0D0

	      XM(NI)=0.5_LDP*DTAU(NI-1)*SOURCE(NI)
	      XM(NI)=0.5D0*DTAU(NI-1)*SOURCE(NI)

	      TB(NI)=1.0_LDP-TA(NI)
	      TB(NI)=1.0D0-TA(NI)

	    TC(NI)=0.0_LDP
	    TC(NI)=0.0D0

	    TB(1)=(TC(1)*(2.0_LDP*DTAU(1)+DTAU(2))-DTAU(1)*TC(2))
	    TB(1)=(TC(1)*(2.0D0*DTAU(1)+DTAU(2))-DTAU(1)*TC(2))

	    TB(NI)=(TC(NI-1)*(2.0_LDP*DTAU(NI-1)+DTAU(NI-2))-
	    TB(NI)=(TC(NI-1)*(2.0D0*DTAU(NI-1)+DTAU(NI-2))-

	  E2=1.0_LDP-(1.0_LDP-E1)/DTAU(1)
	  E2=1.0D0-(1.0D0-E1)/DTAU(1)

	  E3=(1.0_LDP-E1)/DTAU(1)-E1
	  E3=(1.0D0-E1)/DTAU(1)-E1

	  IF(DTAU(1) .LT. 1.0E-03_LDP)THEN
	  IF(DTAU(1) .LT. 1.0D-03)THEN

	    E2=DTAU(1)*0.5_LDP+DTAU(1)*DTAU(1)/6.0_LDP
	    E2=DTAU(1)*0.5D0+DTAU(1)*DTAU(1)/6.0D0

	    E3=DTAU(1)*0.5_LDP-DTAU(1)*DTAU(1)/3.0_LDP
	    E3=DTAU(1)*0.5D0-DTAU(1)*DTAU(1)/3.0D0

          XM(1)=0.5_LDP*(IBOUND+XM(2)*E1+SOURCE(1)*E2+SOURCE(2)*E3)
          XM(1)=0.5D0*(IBOUND+XM(2)*E1+SOURCE(1)*E2+SOURCE(2)*E3)

	  TB(1)=XM(1)-0.5_LDP*IBOUND
	  TB(1)=XM(1)-0.5D0*IBOUND

	  TB(2)=0.0_LDP
	  TB(2)=0.0D0


nordtau.f

	  DTAU(I)=0.5_LDP*(Z(I)-Z(I+1))*(CHI(I)+CHI(I+1)+(Z(I)-Z(I+1))
	  DTAU(I)=0.5D0*(Z(I)-Z(I+1))*(CHI(I)+CHI(I+1)+(Z(I)-Z(I+1))

	1   *( dCHIdR(I+1)*Z(I+1)/R(I+1)-dCHIdR(I)*Z(I)/R(I) )/6.0_LDP)
	1   *( dCHIdR(I+1)*Z(I+1)/R(I+1)-dCHIdR(I)*Z(I)/R(I) )/6.0D0)

	REAL(KIND=LDP), PARAMETER :: ONE=1.0_LDP
	REAL(KIND=LDP), PARAMETER :: ONE=1.0D0

	LIM=3.0_LDP
	LIM=3.0D0

	1            MIN(ABS(SLOPE(1)),0.5_LDP*ABS(dCHIdR(1)))
	1            MIN(ABS(SLOPE(1)),0.5D0*ABS(dCHIdR(1)))

	1            MIN(ABS(SLOPE(I-1)),ABS(SLOPE(I)),0.5_LDP*ABS(dCHIdR(I)))
	1            MIN(ABS(SLOPE(I-1)),ABS(SLOPE(I)),0.5D0*ABS(dCHIdR(I)))

	1            MIN(ABS(SLOPE(ND-1)),0.5_LDP*ABS(dCHIdR(ND)))
	1            MIN(ABS(SLOPE(ND-1)),0.5D0*ABS(dCHIdR(ND)))

	1            MIN(ABS(SLOPE(1)),0.5_LDP*ABS(dCHIdR(1)))
	1            MIN(ABS(SLOPE(1)),0.5D0*ABS(dCHIdR(1)))

	1            MIN(ABS(SLOPE(I-1)),ABS(SLOPE(I)),0.5_LDP*ABS(dCHIdR(I)))
	1            MIN(ABS(SLOPE(I-1)),ABS(SLOPE(I)),0.5D0*ABS(dCHIdR(I)))

	1            MIN(ABS(SLOPE(ND-1)),0.5_LDP*ABS(dCHIdR(ND)))
	1            MIN(ABS(SLOPE(ND-1)),0.5D0*ABS(dCHIdR(ND)))

	    DCHIDR(I)=0.0_LDP
	    DCHIDR(I)=0.0D0

	REAL(KIND=LDP), PARAMETER :: ONE=1.0_LDP
	REAL(KIND=LDP), PARAMETER :: ONE=1.0D0

	LIM=3.0_LDP
	LIM=3.0D0

	  A(1)=0.0_LDP
	  A(1)=0.0D0

	  B(1)=dCHIdR(1)/CHI(1)+1.0_LDP/R(1)/( LOG(R(1))-LOG(R(2)) )
	  B(1)=dCHIdR(1)/CHI(1)+1.0D0/R(1)/( LOG(R(1))-LOG(R(2)) )

	    B(2)=dCHIdR(2)/CHI(2)-1.0_LDP/R(2)/( LOG(R(1))-LOG(R(2)) )
	    B(2)=dCHIdR(2)/CHI(2)-1.0D0/R(2)/( LOG(R(1))-LOG(R(2)) )

	    C(2)=0.0_LDP
	    C(2)=0.0D0

	    A(ND-1)=0.0_LDP
	    A(ND-1)=0.0D0

	    B(ND-1)=dCHIdR(ND-1)/CHI(ND-1)+1.0_LDP/R(ND-1)/
	    B(ND-1)=dCHIdR(ND-1)/CHI(ND-1)+1.0D0/R(ND-1)/

	  B(ND)=dCHIdR(ND)/CHI(ND) - 1.0_LDP/R(ND)/
	  B(ND)=dCHIdR(ND)/CHI(ND) - 1.0D0/R(ND)/

	  C(ND)=0.0_LDP
	  C(ND)=0.0D0

	  A(1)=0.0_LDP
	  A(1)=0.0D0

	  B(1)=dCHIdR(1)/CHI(1)+1.0_LDP/(R(1)-R(2))
	  B(1)=dCHIdR(1)/CHI(1)+1.0D0/(R(1)-R(2))

	    B(2)=dCHIdR(2)/CHI(2)-1.0_LDP/(R(1)-R(2))
	    B(2)=dCHIdR(2)/CHI(2)-1.0D0/(R(1)-R(2))

	    C(2)=0.0_LDP
	    C(2)=0.0D0

	    A(ND-1)=0.0_LDP
	    A(ND-1)=0.0D0

	    B(ND-1)=dCHIdR(ND-1)/CHI(ND-1)+1.0_LDP/(R(ND-1)-R(ND))
	    B(ND-1)=dCHIdR(ND-1)/CHI(ND-1)+1.0D0/(R(ND-1)-R(ND))

	  B(ND)=dCHIdR(ND)/CHI(ND) - 1.0_LDP/(R(ND-1)-R(ND))
	  B(ND)=dCHIdR(ND)/CHI(ND) - 1.0D0/(R(ND-1)-R(ND))

	  C(ND)=0.0_LDP
	  C(ND)=0.0D0

	    A(I)=1.0_LDP/(R(I-1)-R(I+1))
	    A(I)=1.0D0/(R(I-1)-R(I+1))

	    B(I)=0.0_LDP
	    B(I)=0.0D0

	    C(I)=-1.0_LDP/(R(I-1)-R(I+1))
	    C(I)=-1.0D0/(R(I-1)-R(I+1))

	  A(1)=0.0_LDP
	  A(1)=0.0D0

	  B(1)=1.0_LDP/(R(1)-R(2))
	  B(1)=1.0D0/(R(1)-R(2))

	    C(2)=0.0_LDP
	    C(2)=0.0D0

	    A(ND-1)=0.0_LDP
	    A(ND-1)=0.0D0

	    B(ND-1)=1.0_LDP/(R(ND-1)-R(ND))
	    B(ND-1)=1.0D0/(R(ND-1)-R(ND))

	  A(ND)=1.0_LDP/(R(ND-1)-R(ND))
	  A(ND)=1.0D0/(R(ND-1)-R(ND))

	  C(ND)=0.0_LDP
	  C(ND)=0.0D0

	  A(1:ND)=0.0_LDP
	  A(1:ND)=0.0D0

	  B(1:ND)=0.0_LDP
	  B(1:ND)=0.0D0

	  C(1:ND)=0.0_LDP
	  C(1:ND)=0.0D0

	    T1=1.0_LDP/(H(I-1)+H(I))
	    T1=1.0D0/(H(I-1)+H(I))

	  B(ND)=1.0_LDP/H(ND-1)/CHI(ND)
	  B(ND)=1.0D0/H(ND-1)/CHI(ND)

	  A(ND)=-1.0_LDP/H(ND-1)/CHI(ND-1)
	  A(ND)=-1.0D0/H(ND-1)/CHI(ND-1)

	  IF(dCHIdR(1) .EQ. 0.0_LDP)THEN
	  IF(dCHIdR(1) .EQ. 0.0D0)THEN

	    B(1)=0.0_LDP
	    B(1)=0.0D0

	    C(1)=0.0_LDP
	    C(1)=0.0D0

	  ELSE IF(ABS(SLOPE(1)) .LT. 0.5_LDP*ABS(ORIG_dCHIdR))THEN
	  ELSE IF(ABS(SLOPE(1)) .LT. 0.5D0*ABS(ORIG_dCHIdR))THEN

	    B(1)=-2.0_LDP/LIN_H(1)
	    B(1)=-2.0D0/LIN_H(1)

	    C(1)=2.0_LDP/LIN_H(1)
	    C(1)=2.0D0/LIN_H(1)

	    IF(dCHIdR(I) .EQ. 0.0_LDP)THEN
	    IF(dCHIdR(I) .EQ. 0.0D0)THEN

	      A(I)=0.0_LDP
	      A(I)=0.0D0

	      B(I)=0.0_LDP
	      B(I)=0.0D0

	      C(I)=0.0_LDP
	      C(I)=0.0D0

	1                             .LT. 0.5_LDP*ABS(ORIG_dCHIdR) )THEN
	1                             .LT. 0.5D0*ABS(ORIG_dCHIdR) )THEN

	        A(I)=-2.0_LDP/LIN_H(I-1)
	        A(I)=-2.0D0/LIN_H(I-1)

	        B(I)=2.0_LDP/LIN_H(I-1)
	        B(I)=2.0D0/LIN_H(I-1)

	        C(I)=0.0_LDP
	        C(I)=0.0D0

	        A(I)=0.0_LDP
	        A(I)=0.0D0

	        B(I)=-2.0_LDP/LIN_H(I)
	        B(I)=-2.0D0/LIN_H(I)

	        C(I)=2.0_LDP/LIN_H(I)
	        C(I)=2.0D0/LIN_H(I)

	  IF(dCHIdR(ND) .EQ. 0.0_LDP)THEN
	  IF(dCHIdR(ND) .EQ. 0.0D0)THEN

	    A(ND)=0.0_LDP
	    A(ND)=0.0D0

	    B(ND)=0.0_LDP
	    B(ND)=0.0D0

	  ELSE IF(ABS(SLOPE(ND-1)) .LT. 0.5_LDP*ABS(ORIG_dCHIdR))THEN
	  ELSE IF(ABS(SLOPE(ND-1)) .LT. 0.5D0*ABS(ORIG_dCHIdR))THEN

	    A(ND)=-2.0_LDP/LIN_H(ND-1)
	    A(ND)=-2.0D0/LIN_H(ND-1)

	    B(ND)=2.0_LDP/LIN_H(ND-1)
	    B(ND)=2.0D0/LIN_H(ND-1)

	  A(1:ND)=0.0_LDP
	  A(1:ND)=0.0D0

	  B(1:ND)=0.0_LDP
	  B(1:ND)=0.0D0

	  C(1:ND)=0.0_LDP
	  C(1:ND)=0.0D0

	  IF( ABS(SLOPE(1)) .LT. 0.5_LDP*ABS(ORIG_dCHIdR) )THEN
	  IF( ABS(SLOPE(1)) .LT. 0.5D0*ABS(ORIG_dCHIdR) )THEN

	    C(1)=2.0_LDP/H(1)
	    C(1)=2.0D0/H(1)

	  ELSE IF(T1 .NE. 0.0_LDP)THEN
	  ELSE IF(T1 .NE. 0.0D0)THEN

	    IF( ABS(SLOPE(I-1)) .LT. 0.5_LDP*ABS(ORIG_dCHIdR) .OR.
	    IF( ABS(SLOPE(I-1)) .LT. 0.5D0*ABS(ORIG_dCHIdR) .OR.

	1	ABS(SLOPE(I)) .LT. 0.5_LDP*ABS(ORIG_dCHIdR) )THEN
	1	ABS(SLOPE(I)) .LT. 0.5D0*ABS(ORIG_dCHIdR) )THEN

	      T2=0.5_LDP
	      T2=0.5D0

	  IF( ABS(SLOPE(ND-1)) .LT. 0.5_LDP*ABS(ORIG_dCHIdR) )THEN
	  IF( ABS(SLOPE(ND-1)) .LT. 0.5D0*ABS(ORIG_dCHIdR) )THEN

	    B(ND)=2.0_LDP/H(ND-1)
	    B(ND)=2.0D0/H(ND-1)

	    B(ND)=1.0_LDP/H(ND-1)
	    B(ND)=1.0D0/H(ND-1)

	   A(I)=0.0_LDP
	   A(I)=0.0D0

	   B(I)=0.0_LDP
	   B(I)=0.0D0

	   C(I)=0.0_LDP
	   C(I)=0.0D0


ntrpwgt.f

	W(:)=0.0_LDP
	W(:)=0.0D0

	  T1=0.25_LDP*(X(I)+X(I+1)) * (X(I)*X(I)+X(I+1)*X(I+1))
	  T1=0.25D0*(X(I)+X(I+1)) * (X(I)*X(I)+X(I+1)*X(I+1))

	1      + (X(I+1)**3)*X(I) + (X(I+1)**4) )/5.0_LDP
	1      + (X(I+1)**3)*X(I) + (X(I+1)**4) )/5.0D0

	IF(X(N) .NE. 0.0_LDP)THEN
	IF(X(N) .NE. 0.0D0)THEN

	  W(N)=W(N)+(X(N)**4)/5.0_LDP
	  W(N)=W(N)+(X(N)**4)/5.0D0

	SUM=0.0_LDP
	SUM=0.0D0

	SUM=0.2_LDP/SUM
	SUM=0.2D0/SUM

	IF(ABS(SUM-1.0_LDP) .GT. 1.0E-12_LDP)THEN
	IF(ABS(SUM-1.0D0) .GT. 1.0D-12)THEN

	SUM=0.0_LDP
	SUM=0.0D0

	IF(X(N) .EQ. 0.0_LDP)THEN
	IF(X(N) .EQ. 0.0D0)THEN

	  T1=0.25_LDP
	  T1=0.25D0

	  T1=0.25_LDP*( 1.0_LDP-(X(N)**4) )+0.2_LDP*(X(N)**4)
	  T1=0.25D0*( 1.0D0-(X(N)**4) )+0.2D0*(X(N)**4)

	IF(ABS(SUM-1.0_LDP) .GT. 1.0E-12_LDP)THEN
	IF(ABS(SUM-1.0D0) .GT. 1.0D-12)THEN


ntrpwgt_v2.f

	W(:)=0.0_LDP
	W(:)=0.0D0

	  W(I)=W(I)+0.05_LDP*T1*dX(I)
	  W(I)=W(I)+0.05D0*T1*dX(I)

	  W(I+1)=W(I+1)+0.05_LDP*T2*dX(I)
	  W(I+1)=W(I+1)+0.05D0*T2*dX(I)

	IF(X(N) .NE. 0.0_LDP)THEN
	IF(X(N) .NE. 0.0D0)THEN

	  W(N)=W(N)+(X(N)**4)/5.0_LDP
	  W(N)=W(N)+(X(N)**4)/5.0D0

	XSUM=0.0_LDP
	XSUM=0.0D0

	XSUM=XSUM/0.2_LDP
	XSUM=XSUM/0.2D0

	SUM=0.0_LDP
	SUM=0.0D0

	IF(X(N) .EQ. 0.0_LDP)THEN
	IF(X(N) .EQ. 0.0D0)THEN

	  T1=0.25_LDP
	  T1=0.25D0

	  T1=0.25_LDP*( 1.0_LDP-(X(N)**4) )+0.2_LDP*(X(N)**4)
	  T1=0.25D0*( 1.0D0-(X(N)**4) )+0.2D0*(X(N)**4)

	IF(ABS(SUM-1.0_LDP) .GT. 1.0E-12_LDP .OR. ABS(XSUM-1.0_LDP) .GT. 1.0E-12_LDP)THEN
	IF(ABS(SUM-1.0D0) .GT. 1.0D-12 .OR. ABS(XSUM-1.0D0) .GT. 1.0D-12)THEN

	  SUM=0.0_LDP
	  SUM=0.0D0


nweight.f

	W(:)=0.0_LDP
	W(:)=0.0D0

	RF=( (X(1)**3)-0.3_LDP*X(1)*H*H ) * H*(R+2*H)/(R+H)/12.0_LDP
	RF=( (X(1)**3)-0.3D0*X(1)*H*H ) * H*(R+2*H)/(R+H)/12.0D0

	T1=( (X(1)**3)-0.3_LDP*X(1)*H*H ) * (H**3)/R/(R+H)/12.0_LDP
	T1=( (X(1)**3)-0.3D0*X(1)*H*H ) * (H**3)/R/(R+H)/12.0D0

	RE=H*H*( (X(2)**3)-0.3_LDP*H*H*X(2) )/(X(1)-X(3))/12.0_LDP
	RE=H*H*( (X(2)**3)-0.3D0*H*H*X(2) )/(X(1)-X(3))/12.0D0

	W(1)=W(1)+0.5_LDP*H*(  (X(1)**3) -0.5_LDP*H*(X(1)**2)
	W(1)=W(1)+0.5D0*H*(  (X(1)**3) -0.5D0*H*(X(1)**2)

	1         +(H**3)/60.0_LDP  )+RE-RF
	1         +(H**3)/60.0D0  )+RE-RF

	W(2)=W(2)+0.5_LDP*H*(  (X(2)**3) +0.5_LDP*H*(X(2)**2)
	W(2)=W(2)+0.5D0*H*(  (X(2)**3) +0.5D0*H*(X(2)**2)

	1         -(H**3)/60.0_LDP  )+RF+T1
	1         -(H**3)/60.0D0  )+RF+T1

	  RF=H*H*(X(I-1)**3-0.3_LDP*H*H*X(I-1))/(X(I-2)-X(I))/12.0_LDP
	  RF=H*H*(X(I-1)**3-0.3D0*H*H*X(I-1))/(X(I-2)-X(I))/12.0D0

	  RE=H*H*(X(I)**3-0.3_LDP*H*H*X(I))/(X(I-1)-X(I+1))/12.0_LDP
	  RE=H*H*(X(I)**3-0.3D0*H*H*X(I))/(X(I-1)-X(I+1))/12.0D0

	  W(I-1)=W(I-1)+0.5_LDP*H*(  (X(I-1)**3) -0.5_LDP*H*(X(I-1)**2)
	  W(I-1)=W(I-1)+0.5D0*H*(  (X(I-1)**3) -0.5D0*H*(X(I-1)**2)

	1         +(H**3)/60.0_LDP  )+RE
	1         +(H**3)/60.0D0  )+RE

	  W(I)=W(I)+0.5_LDP*H*(  (X(I)**3) +0.5_LDP*H*(X(I)**2)
	  W(I)=W(I)+0.5D0*H*(  (X(I)**3) +0.5D0*H*(X(I)**2)

	1         -(H**3)/60.0_LDP  )+RF
	1         -(H**3)/60.0D0  )+RF

	  W(N-1)=W(N-1)+0.2_LDP*(X(N-1)**4)
	  W(N-1)=W(N-1)+0.2D0*(X(N-1)**4)

	  RF=H*H*(X(N-1)**3-0.3_LDP*H*H*X(N-1))/(X(N-2)-X(N))/12.0_LDP
	  RF=H*H*(X(N-1)**3-0.3D0*H*H*X(N-1))/(X(N-2)-X(N))/12.0D0

	  RE=H*H*(X(N)**3-0.3_LDP*H*H*X(N))/X(N)/12.0_LDP
	  RE=H*H*(X(N)**3-0.3D0*H*H*X(N))/X(N)/12.0D0

	  W(N-1)=W(N-1)+0.5_LDP*H*(  (X(N-1)**3) -0.5_LDP*H*(X(N-1)**2)
	  W(N-1)=W(N-1)+0.5D0*H*(  (X(N-1)**3) -0.5D0*H*(X(N-1)**2)

	1         +(H**3)/60.0_LDP  )
	1         +(H**3)/60.0D0  )

	  W(N)=W(N)+0.5_LDP*H*(  (X(N)**3) +0.5_LDP*H*(X(N)**2)
	  W(N)=W(N)+0.5D0*H*(  (X(N)**3) +0.5D0*H*(X(N)**2)

	1         -(H**3)/60.0_LDP  )+RF+RE
	1         -(H**3)/60.0D0  )+RF+RE

	  W(N)=W(N)+0.2_LDP*(X(N)**4)
	  W(N)=W(N)+0.2D0*(X(N)**4)

	SUM=0.0_LDP
	SUM=0.0D0

	SUM=0.2_LDP/SUM
	SUM=0.2D0/SUM

	IF(ABS(SUM-1.0_LDP) .GT. 1.0E-12_LDP)THEN
	IF(ABS(SUM-1.0D0) .GT. 1.0D-12)THEN


nweight_v2.f

	W(:)=0.0_LDP
	W(:)=0.0D0

	RF=( (X(1)**3)-0.3_LDP*X(1)*H*H ) * H*(R+2*H)/(R+H)/12.0_LDP
	RF=( (X(1)**3)-0.3D0*X(1)*H*H ) * H*(R+2*H)/(R+H)/12.0D0

	T1=( (X(1)**3)-0.3_LDP*X(1)*H*H ) * (H**3)/R/(R+H)/12.0_LDP
	T1=( (X(1)**3)-0.3D0*X(1)*H*H ) * (H**3)/R/(R+H)/12.0D0

	RE=H*H*( (X(2)**3)-0.3_LDP*H*H*X(2) )/(X(1)-X(3))/12.0_LDP
	RE=H*H*( (X(2)**3)-0.3D0*H*H*X(2) )/(X(1)-X(3))/12.0D0

	W(1)=W(1)+0.5_LDP*H*(  (X(1)**3) -0.5_LDP*H*(X(1)**2)
	W(1)=W(1)+0.5D0*H*(  (X(1)**3) -0.5D0*H*(X(1)**2)

	1         +(H**3)/60.0_LDP  )+RE-RF
	1         +(H**3)/60.0D0  )+RE-RF

	W(2)=W(2)+0.5_LDP*H*(  (X(2)**3) +0.5_LDP*H*(X(2)**2)
	W(2)=W(2)+0.5D0*H*(  (X(2)**3) +0.5D0*H*(X(2)**2)

	1         -(H**3)/60.0_LDP  )+RF+T1
	1         -(H**3)/60.0D0  )+RF+T1

	  RF=H*H*(X(I-1)**3-0.3_LDP*H*H*X(I-1))/RF/12.0_LDP
	  RF=H*H*(X(I-1)**3-0.3D0*H*H*X(I-1))/RF/12.0D0

	  RE=H*H*(X(I)**3-0.3_LDP*H*H*X(I))/RE/12.0_LDP
	  RE=H*H*(X(I)**3-0.3D0*H*H*X(I))/RE/12.0D0

	  W(I-1)=W(I-1)+0.5_LDP*H*(  (X(I-1)**3) -0.5_LDP*H*(X(I-1)**2)
	  W(I-1)=W(I-1)+0.5D0*H*(  (X(I-1)**3) -0.5D0*H*(X(I-1)**2)

	1         +(H**3)/60.0_LDP  )+RE
	1         +(H**3)/60.0D0  )+RE

	  W(I)=W(I)+0.5_LDP*H*(  (X(I)**3) +0.5_LDP*H*(X(I)**2)
	  W(I)=W(I)+0.5D0*H*(  (X(I)**3) +0.5D0*H*(X(I)**2)

	1         -(H**3)/60.0_LDP  )+RF
	1         -(H**3)/60.0D0  )+RF

	  W(N-1)=W(N-1)+0.2_LDP*(X(N-1)**4)
	  W(N-1)=W(N-1)+0.2D0*(X(N-1)**4)

	  RF=H*H*(X(N-1)**3-0.3_LDP*H*H*X(N-1))/(X(N-2)-X(N))/12.0_LDP
	  RF=H*H*(X(N-1)**3-0.3D0*H*H*X(N-1))/(X(N-2)-X(N))/12.0D0

	  RE=H*H*(X(N)**3-0.3_LDP*H*H*X(N))/X(N)/12.0_LDP
	  RE=H*H*(X(N)**3-0.3D0*H*H*X(N))/X(N)/12.0D0

	  W(N-1)=W(N-1)+0.5_LDP*H*(  (X(N-1)**3) -0.5_LDP*H*(X(N-1)**2)
	  W(N-1)=W(N-1)+0.5D0*H*(  (X(N-1)**3) -0.5D0*H*(X(N-1)**2)

	1         +(H**3)/60.0_LDP  )
	1         +(H**3)/60.0D0  )

	  W(N)=W(N)+0.5_LDP*H*(  (X(N)**3) +0.5_LDP*H*(X(N)**2)
	  W(N)=W(N)+0.5D0*H*(  (X(N)**3) +0.5D0*H*(X(N)**2)

	1         -(H**3)/60.0_LDP  )+RF+RE
	1         -(H**3)/60.0D0  )+RF+RE

	  W(N)=W(N)+0.2_LDP*(X(N)**4)
	  W(N)=W(N)+0.2D0*(X(N)**4)

	SUM=0.0_LDP
	SUM=0.0D0

	SUM=0.2_LDP/SUM
	SUM=0.2D0/SUM

	IF(ABS(SUM-1.0_LDP) .GT. 1.0E-12_LDP)THEN
	IF(ABS(SUM-1.0D0) .GT. 1.0D-12)THEN


occupation_prob.f

	    T1=3.289395_LDP*ZC2*ZC2/EDGE_C2(LEV)
	    T1=3.289395D0*ZC2*ZC2/EDGE_C2(LEV)

	    NEFF=0.0_LDP
	    NEFF=0.0D0

	    IF(T1 .GT. 0.0_LDP .AND. T1 .LT. 961.0_LDP)NEFF=SQRT(T1)
	    IF(T1 .GT. 0.0D0 .AND. T1 .LT. 961.0D0)NEFF=SQRT(T1)

	    IF(NEFF .LE. 2.01_LDP*ZC2)THEN			!0.01 allows for atomic mass
	    IF(NEFF .LE. 2.01D0*ZC2)THEN			!0.01 allows for atomic mass

	        W_C2(LEV,I)=1.0_LDP
	        W_C2(LEV,I)=1.0D0

	      REAL_K=16.0_LDP*NEFF/(1+NEFF)/(1+NEFF)/3 .0_LDP
	      REAL_K=16.0D0*NEFF/(1+NEFF)/(1+NEFF)/3 .0D0

	      IF(NEFF .LE. 3.0_LDP)REAL_K=1.0_LDP
	      IF(NEFF .LE. 3.0D0)REAL_K=1.0D0

	      REAL_K=( REAL_K/ZC2*(ZC2/NEFF)**4 )**1.5_LDP
	      REAL_K=( REAL_K/ZC2*(ZC2/NEFF)**4 )**1.5D0

	        Y=1.091_LDP*(X_LEV_DIS(I)+4.0_LDP*(ZC2-1.0_LDP)*A_LEV_DIS(I))
	        Y=1.091D0*(X_LEV_DIS(I)+4.0D0*(ZC2-1.0D0)*A_LEV_DIS(I))

	        F=Y*BETA*BETA/(7.782_LDP+X_LEV_DIS(I)*BETA)
	        F=Y*BETA*BETA/(7.782D0+X_LEV_DIS(I)*BETA)

	        W_C2(LEV,I)=F/(1.0_LDP+F)
	        W_C2(LEV,I)=F/(1.0D0+F)

	        IF(W_C2(LEV,I) .GT. 0.99999999_LDP)W_C2(LEV,I)=1.0_LDP
	        IF(W_C2(LEV,I) .GT. 0.99999999D0)W_C2(LEV,I)=1.0D0

	  W_C2(:,:)=1.0_LDP
	  W_C2(:,:)=1.0D0


omega_gen_v2.f

	REAL(KIND=LDP), PARAMETER :: THREE=3.0_LDP
	REAL(KIND=LDP), PARAMETER :: THREE=3.0D0

	REAL(KIND=LDP), PARAMETER :: ZERO=0.0_LDP
	REAL(KIND=LDP), PARAMETER :: ZERO=0.0D0

	OMEGA(:,:)=0.0_LDP			!NLEV*NLEV
	OMEGA(:,:)=0.0D0			!NLEV*NLEV

	dln_OMEGA_dlnT(:,:)=0.0_LDP		!NLEV*NLEV
	dln_OMEGA_dlnT(:,:)=0.0D0		!NLEV*NLEV

	    IF(OMEGA(I,J) .EQ. 0.0_LDP .AND. EIN_A(I,J) .NE. 0.0_LDP)THEN
	    IF(OMEGA(I,J) .EQ. 0.0D0 .AND. EIN_A(I,J) .NE. 0.0D0)THEN

	        IF(X .LE. 14.0_LDP)THEN
	        IF(X .LE. 14.0D0)THEN

	          GBAR=0.276_LDP*EX_E1X
	          GBAR=0.276D0*EX_E1X

	          dln_GBAR_dlnT=(1.0_LDP/EX_E1X-X)
	          dln_GBAR_dlnT=(1.0D0/EX_E1X-X)

	          GBAR=0.066_LDP*(1.0_LDP+1.5_LDP/X)/SQRT(X)
	          GBAR=0.066D0*(1.0D0+1.5D0/X)/SQRT(X)

	          dln_GBAR_dlnT=-0.5_LDP+0.099_LDP/X/GBAR
	          dln_GBAR_dlnT=-0.5D0+0.099D0/X/GBAR

	        G1=0.2_LDP
	        G1=0.2D0

	        IF( SAME_N(LEVELNAME(I),LEVELNAME(J)) )G1=0.7_LDP
	        IF( SAME_N(LEVELNAME(I),LEVELNAME(J)) )G1=0.7D0

	        G2=0.276_LDP*EX_E1X
	        G2=0.276D0*EX_E1X

	          dln_GBAR_dlnT=0.0_LDP
	          dln_GBAR_dlnT=0.0D0

	          dln_GBAR_dlnT=(1.0_LDP/EX_E1X-X)
	          dln_GBAR_dlnT=(1.0D0/EX_E1X-X)

	      OMEGA(I,J)=47.972_LDP*OMEGA_SCALE*GBAR*EIN_A(I,J)*STAT_WT(I)/FL
	      OMEGA(I,J)=47.972D0*OMEGA_SCALE*GBAR*EIN_A(I,J)*STAT_WT(I)/FL

	    ELSE IF(OMEGA(I,J) .EQ. 0.0_LDP)THEN
	    ELSE IF(OMEGA(I,J) .EQ. 0.0D0)THEN

	      dln_OMEGA_dlnT(I,J)=0.0_LDP
	      dln_OMEGA_dlnT(I,J)=0.0D0

	PHOT_CONST=0.1_LDP*MIN(ZION,THREE)*3.23_LDP/8.63E-08_LDP
	PHOT_CONST=0.1D0*MIN(ZION,THREE)*3.23D0/8.63D-08

	  IF(OMEGA(I,I) .EQ. 0.0_LDP)THEN
	  IF(OMEGA(I,I) .EQ. 0.0D0)THEN

	    dln_OMEGA_dlnT(I,I)=1.0_LDP
	    dln_OMEGA_dlnT(I,I)=1.0D0


open_dir_acc_v1.f


par_fun_v2.f

	  IF(W_HE2(1,I) .NE. 1.0_LDP)THEN
	  IF(W_HE2(1,I) .NE. 1.0)THEN

	RGU=2.07078E-22_LDP
	RGU=2.07078D-22

	  PHI(I,NSPEC+1)=0.0_LDP
	  PHI(I,NSPEC+1)=0.0D0


par_fun_v3.f

	  IF(W_HE2(1,I) .NE. 1.0_LDP)THEN
	  IF(W_HE2(1,I) .NE. 1.0)THEN

	      CONST=HE2(J,I)*(T2**1.5_LDP)*GION/GHE2(J)/W_HE2(J,I)/2.07078E-22_LDP/OLD_ED(I)/DHE2(I)
	      CONST=HE2(J,I)*(T2**1.5D0)*GION/GHE2(J)/W_HE2(J,I)/2.07078D-22/OLD_ED(I)/DHE2(I)

	      IF(CONST .LT. 2.8_LDP)THEN
	      IF(CONST .LT. 2.8)THEN

	        TEXCITE(J)=CONST**(0.67_LDP)
	        TEXCITE(J)=CONST**(0.67)

	      DELTA_T=1.0E+10_LDP
	      DELTA_T=1.0D+10

	      DO WHILE( ABS(DELTA_T/TEXCITE(J)) .GT. 1.0E-10_LDP)
	      DO WHILE( ABS(DELTA_T/TEXCITE(J)) .GT. 1.0E-10)

	        DELTA_T=(T1*TEXCITE(J)*T3 - CONST)/T3/T1/(1.5_LDP+TEXCITE(J))
	        DELTA_T=(T1*TEXCITE(J)*T3 - CONST)/T3/T1/(1.5D0+TEXCITE(J))

	        IF(DELTA_T .GT. 0.8_LDP*TEXCITE(J))DELTA_T=0.8_LDP*TEXCITE(J)
	        IF(DELTA_T .GT. 0.8*TEXCITE(J))DELTA_T=0.8*TEXCITE(J)

	        IF(DELTA_T .LT. -0.8_LDP*TEXCITE(J))DELTA_T=-0.8_LDP*TEXCITE(J)
	        IF(DELTA_T .LT. -0.8*TEXCITE(J))DELTA_T=-0.8*TEXCITE(J)

	      HE2(J,I)=EXP(HDKT*EDGE(J)*(1.0_LDP/TEXCITE(J)-1.0_LDP/T(I)))*
	      HE2(J,I)=EXP(HDKT*EDGE(J)*(1.0D0/TEXCITE(J)-1.0D0/T(I)))*

	1                    (T(I)/TEXCITE(J))**1.5_LDP
	1                    (T(I)/TEXCITE(J))**1.5D0

	  PHI(I,NSPEC+1)=0.0_LDP
	  PHI(I,NSPEC+1)=0.0D0

	  LOG_RGU=2.07078E-22_LDP*HE2(1,I)
	  LOG_RGU=2.07078D-22*HE2(1,I)


par_fun_v4.f

	  IF(W_HE2(1,I) .NE. 1.0_LDP)THEN
	  IF(W_HE2(1,I) .NE. 1.0)THEN

	      CONST=HE2(J,I)+1.5_LDP*LOG(T2)+LOG( GION/GHE2(J)/W_HE2(J,I)/2.07078E-22_LDP/OLD_ED(I)/DHE2(I) )
	      CONST=HE2(J,I)+1.5D0*LOG(T2)+LOG( GION/GHE2(J)/W_HE2(J,I)/2.07078D-22/OLD_ED(I)/DHE2(I) )

	      IF(CONST .LT. 1.0_LDP)THEN
	      IF(CONST .LT. 1.0D0)THEN

	        TEXCITE(J)=EXP(CONST*0.67_LDP)
	        TEXCITE(J)=EXP(CONST*0.67D0)

	      DELTA_T=1.0E+10_LDP
	      DELTA_T=1.0D+10

	      DO WHILE( ABS(DELTA_T/TEXCITE(J)) .GT. 1.0E-10_LDP)
	      DO WHILE( ABS(DELTA_T/TEXCITE(J)) .GT. 1.0D-10)

	        DELTA_T=(T1*TEXCITE(J) - CONST)/T1/(1.5_LDP+TEXCITE(J))
	        DELTA_T=(T1*TEXCITE(J) - CONST)/T1/(1.5D0+TEXCITE(J))

	        IF(DELTA_T .GT. 0.8_LDP*TEXCITE(J))DELTA_T=0.8_LDP*TEXCITE(J)
	        IF(DELTA_T .GT. 0.8D0*TEXCITE(J))DELTA_T=0.8D0*TEXCITE(J)

	        IF(DELTA_T .LT. -0.8_LDP*TEXCITE(J))DELTA_T=-0.8_LDP*TEXCITE(J)
	        IF(DELTA_T .LT. -0.8D0*TEXCITE(J))DELTA_T=-0.8D0*TEXCITE(J)

	      HE2(J,I)=HDKT*EDGE(J)*(1.0_LDP/TEXCITE(J)-1.0_LDP/T(I)) + 1.5_LDP*LOG(T(I)/TEXCITE(J))
	      HE2(J,I)=HDKT*EDGE(J)*(1.0D0/TEXCITE(J)-1.0D0/T(I)) + 1.5D0*LOG(T(I)/TEXCITE(J))

	  PHI(I,NSPEC+1)=0.0_LDP
	  PHI(I,NSPEC+1)=0.0D0

	  LOG_RGU=LOG(2.07078E-22_LDP)+HE2(1,I)
	  LOG_RGU=LOG(2.07078D-22)+HE2(1,I)


pertjfeau_ibc.f

	FC(:,:)=0.0_LDP
	FC(:,:)=0.0D0

	  FA(ND)=R(ND)*R(ND)/CHI(ND)/3.0_LDP
	  FA(ND)=R(ND)*R(ND)/CHI(ND)/3.0D0


phys_con.f


poptoion.f


prrr_lowt_v1.f

        H=6.6261965E-12_LDP                                 !ergs/s (*1.0E+15 due to *nu)
        H=6.6261965D-12                                 !ergs/s (*1.0E+15 due to *nu)

	      LOG_JB_RAT=0.0_LDP
	      LOG_JB_RAT=0.0D0

	          IF(ATM(ID)%WSXzV(I,J,IPR) .NE. 0 .AND. ATM(ID)%XzVLTE(I,J) .EQ. 0.0_LDP)THEN
	          IF(ATM(ID)%WSXzV(I,J,IPR) .NE. 0 .AND. ATM(ID)%XzVLTE(I,J) .EQ. 0.0D0)THEN


prrr_lowt_v2.f

	      XzVLTE_MIN(ID)=0.0_LDP
	      XzVLTE_MIN(ID)=0.0D0

        H=PLANCKS_CONSTANT()*1.0E+15_LDP                                 !ergs/s (*1.0E+15 due to *nu)
        H=PLANCKS_CONSTANT()*1.0D+15                                 !ergs/s (*1.0E+15 due to *nu)

          IF(ATM(ID)%XzV_PRES .AND. XzVLTE_MIN(ID) .EQ. 0.0_LDP)THEN
          IF(ATM(ID)%XzV_PRES .AND. XzVLTE_MIN(ID) .EQ. 0.0D0)THEN

	      LOG_JB_RAT=0.0_LDP
	      LOG_JB_RAT=0.0D0

	          IF(ATM(ID)%WSXzV(I,J,IPR) .NE. 0 .AND. ATM(ID)%XzVLTE(I,J) .EQ. 0.0_LDP)THEN
	          IF(ATM(ID)%WSXzV(I,J,IPR) .NE. 0 .AND. ATM(ID)%XzVLTE(I,J) .EQ. 0.0D0)THEN


prrr_sl_v3.f

	H=6.6261965E-12_LDP					!ergs/s (*1.0E+15 due to *nu)
	H=6.6261965D-12					!ergs/s (*1.0E+15 due to *nu)

	  PR(:,:)=0.0_LDP				!NLEV,ND
	  PR(:,:)=0.0D0				!NLEV,ND

	  RR(:,:)=0.0_LDP				!NLEV,ND
	  RR(:,:)=0.0D0				!NLEV,ND

	  BFCR(:,:)=0.0_LDP			!NLEV,ND
	  BFCR(:,:)=0.0D0			!NLEV,ND

	  FF(:)=0.0_LDP				!ND
	  FF(:)=0.0D0				!ND

	T2=1.256637E-09_LDP*ZHYD*ZHYD*CHIFF/(NU_CONT**3)
	T2=1.256637E-09*ZHYD*ZHYD*CHIFF/(NU_CONT**3)

	  FF(J) =FF(J)+T2*ED(J)*DI(ION_LEV,J)/SQRT(T(J))*(1.0_LDP-A1)
	  FF(J) =FF(J)+T2*ED(J)*DI(ION_LEV,J)/SQRT(T(J))*(1.0D0-A1)


prrr_sl_v4.f

	H=6.6261965E-12_LDP					!ergs/s (*1.0E+15 due to *nu)
	H=6.6261965D-12					!ergs/s (*1.0E+15 due to *nu)

	  PR(:,:)=0.0_LDP				!NLEV,ND
	  PR(:,:)=0.0D0				!NLEV,ND

	  RR(:,:)=0.0_LDP				!NLEV,ND
	  RR(:,:)=0.0D0				!NLEV,ND

	  BFCR(:,:)=0.0_LDP			!NLEV,ND
	  BFCR(:,:)=0.0D0			!NLEV,ND

	  FF(:)=0.0_LDP				!ND
	  FF(:)=0.0D0				!ND

	T2=1.256637E-09_LDP*ZHYD*ZHYD*CHIFF/(NU_CONT**3)
	T2=1.256637E-09*ZHYD*ZHYD*CHIFF/(NU_CONT**3)

	  FF(J) =FF(J)+T2*ED(J)*DI(ION_LEV,J)/SQRT(T(J))*(1.0_LDP-A1)
	  FF(J) =FF(J)+T2*ED(J)*DI(ION_LEV,J)/SQRT(T(J))*(1.0D0-A1)


prrr_sl_v5.f

	H=PLANCKS_CONSTANT*1.0E+15_LDP					!ergs/s (*1.0E+15 due to *nu)
	H=PLANCKS_CONSTANT*1.0D+15					!ergs/s (*1.0E+15 due to *nu)

	  PR(:,:)=0.0_LDP				!NLEV,ND
	  PR(:,:)=0.0D0				!NLEV,ND

	  RR(:,:)=0.0_LDP				!NLEV,ND
	  RR(:,:)=0.0D0				!NLEV,ND

	  BFCR(:,:)=0.0_LDP			!NLEV,ND
	  BFCR(:,:)=0.0D0			!NLEV,ND

	  FF(:)=0.0_LDP				!ND
	  FF(:)=0.0D0				!ND

	T2=1.256637061E-09_LDP*ZHYD*ZHYD*CHIFF/(NU_CONT**3)
	T2=1.256637061D-09*ZHYD*ZHYD*CHIFF/(NU_CONT**3)

	  FF(J) =FF(J)+T2*ED(J)*DI(ION_LEV,J)/SQRT(T(J))*(1.0_LDP-A1)
	  FF(J) =FF(J)+T2*ED(J)*DI(ION_LEV,J)/SQRT(T(J))*(1.0D0-A1)


prrr_sl_v6.f

	H=PLANCKS_CONSTANT()*1.0E+15_LDP   		 !ergs/s (*1.0E+15 due to *nu)
	H=PLANCKS_CONSTANT()*1.0D+15   		 !ergs/s (*1.0E+15 due to *nu)

	  PR(:,:)=0.0_LDP				!NLEV,ND
	  PR(:,:)=0.0D0				!NLEV,ND

	  RR(:,:)=0.0_LDP				!NLEV,ND
	  RR(:,:)=0.0D0				!NLEV,ND

	  BFCR(:,:)=0.0_LDP			!NLEV,ND
	  BFCR(:,:)=0.0D0			!NLEV,ND

	  FF(:)=0.0_LDP				!ND
	  FF(:)=0.0D0				!ND

	  IF(JREC(J) .GT. 0.0_LDP)THEN
	  IF(JREC(J) .GT. 0.0D0)THEN

	    JB_RAT=0.0_LDP
	    JB_RAT=0.0D0

	  IF(JREC_CR(J) .GT. 0.0_LDP)THEN
	  IF(JREC_CR(J) .GT. 0.0D0)THEN

	    JC_RAT=0.0_LDP
	    JC_RAT=0.0D0

	IF(ZHYD .EQ. 0.0_LDP)THEN
	IF(ZHYD .EQ. 0.0D0)THEN

	  T2=1.256637061E-09_LDP*ZHYD*ZHYD*CHIFF/(NU_CONT**3)
	  T2=1.256637061D-09*ZHYD*ZHYD*CHIFF/(NU_CONT**3)

	    FF(J) =FF(J)+T2*ED(J)*POP_SUM/SQRT(T(J))*(1.0_LDP-A1)
	    FF(J) =FF(J)+T2*ED(J)*POP_SUM/SQRT(T(J))*(1.0D0-A1)


qfromf.f

	REAL(KIND=LDP), PARAMETER :: TWO=2.0_LDP
	REAL(KIND=LDP), PARAMETER :: TWO=2.0D0

	  TA(ND-I+1)=(3.0_LDP*F(I)-1.0_LDP)/R(I)/F(I)
	  TA(ND-I+1)=(3.0D0*F(I)-1.0D0)/R(I)/F(I)

	Q(ND)=1.0_LDP
	Q(ND)=1.0D0


qkim.f

	    QH(I)=GAMH(I)*2.0_LDP/((TCHI(I)+TCHI(I+1))*DNU)
	    QH(I)=GAMH(I)*2.0D0/((TCHI(I)+TCHI(I+1))*DNU)

	  QH(NI)=0.0_LDP
	  QH(NI)=0.0D0

	    Q(I)=0.0_LDP
	    Q(I)=0.0D0

	    QH(I)=0.0_LDP
	    QH(I)=0.0D0


quad_multi_v5.f

	FOUR_PI_D_H=1.8965E+02_LDP		!4*PI/H*DEX(-10)*DEX(-15)
	FOUR_PI_D_H=1.8965D+02		!4*PI/H*DEX(-10)*DEX(-15)

	DIS_CONST(1:N_F)=-1.0_LDP
	DIS_CONST(1:N_F)=-1.0D0

	      NEFF=SQRT(3.289395_LDP*ZION*ZION/(EDGE_F(I_F)-NU_CONT))
	      NEFF=SQRT(3.289395*ZION*ZION/(EDGE_F(I_F)-NU_CONT))

	        T1=MIN(1.0_LDP,16.0_LDP*NEFF/(1+NEFF)/(1+NEFF)/3.0_LDP)
	        T1=MIN(1.0D0,16.0D0*NEFF/(1+NEFF)/(1+NEFF)/3.0D0)

	         DIS_CONST(I_F)=( T1*ZION_CUBED/(NEFF**4) )**1.5_LDP
	         DIS_CONST(I_F)=( T1*ZION_CUBED/(NEFF**4) )**1.5D0

	    YDIS(J)=1.091_LDP*(X_LEV_DIS(J)+4.0_LDP*(ZION-1)*A_LEV_DIS(J))*
	    YDIS(J)=1.091*(X_LEV_DIS(J)+4.0D0*(ZION-1)*A_LEV_DIS(J))*

	1        (dlnHNST_S_dlnT(I_S,J)+1.5_LDP+HDKT*EDGE_F(I_F)/T(J))/T(J)
	1        (dlnHNST_S_dlnT(I_S,J)+1.5D0+HDKT*EDGE_F(I_F)/T(J))/T(J)

	      T2=7.782_LDP+XDIS(J)*DIS_CONST(I_F)
	      T2=7.782+XDIS(J)*DIS_CONST(I_F)

	1          (dlnHNST_S_dlnT(I_S,J)+1.5_LDP+HDKT*EDGE_F(I_F)/T(J))/T(J)
	1          (dlnHNST_S_dlnT(I_S,J)+1.5D0+HDKT*EDGE_F(I_F)/T(J))/T(J)


quad_x_gen_v4.f

	WSE(:,:)=0.0_LDP		!N_S,ND
	WSE(:,:)=0.0D0		!N_S,ND

	WCR(:,:)=0.0_LDP		!N_S,ND
	WCR(:,:)=0.0D0		!N_S,ND

	FOUR_PI_ON_H=1.8965E+02_LDP		!4*PI/H*DEX(-10)/1.0D+15
	FOUR_PI_ON_H=1.8965D+02		!4*PI/H*DEX(-10)/1.0D+15


quad_x_gen_v5.f

	WSE(:,:)=0.0_LDP		!N_S,ND
	WSE(:,:)=0.0D0		!N_S,ND

	WCR(:,:)=0.0_LDP		!N_S,ND
	WCR(:,:)=0.0D0		!N_S,ND

	FOUR_PI_ON_H=1.8965E+02_LDP		!4*PI/H*DEX(-10)/1.0D+15
	FOUR_PI_ON_H=1.8965D+02		!4*PI/H*DEX(-10)/1.0D+15


quad_x_lit_v3.f

	  FOUR_PI_ON_H=1.8965E+02_LDP		!4*PI/H*DEX(-10)/1.0D+15
	  FOUR_PI_ON_H=1.8965D+02		!4*PI/H*DEX(-10)/1.0D+15


rd_free_val.f


rd_f_to_s_ids.f


rd_f_to_s_ids_v2.f


rd_f_to_s_ids_v3.f


rd_f_to_s_ids_v4.f


rdgendie_v3.f

	  A1=0.0_LDP
	  A1=0.0D0

	  A2=0.0_LDP
	  A2=0.0D0

	  A3=0.0_LDP
	  A3=0.0D0

	  M1=0.0_LDP
	  M1=0.0D0

	  M2=0.0_LDP
	  M2=0.0D0

	  M3=0.0_LDP
	  M3=0.0D0

	  WIA1=0.0_LDP
	  WIA1=0.0D0

	  WIA2=0.0_LDP
	  WIA2=0.0D0

	  WIA3=0.0_LDP
	  WIA3=0.0D0

	  WIM1=0.0_LDP
	  WIM1=0.0D0

	  WIM2=0.0_LDP
	  WIM2=0.0D0

	  WIM3=0.0_LDP
	  WIM3=0.0D0

	    A10=2.07E-10_LDP*GUPDIE(ML)*EINADIE(ML)/GION
	    A10=2.07D-10*GUPDIE(ML)*EINADIE(ML)/GION

	    A20=A10*EXP(0.5_LDP*T1)/(2.0_LDP**1.5_LDP)
	    A20=A10*EXP(0.5D0*T1)/(2.0D0**1.5)

	    A30=A10*EXP(T1/3.0_LDP)/(3.0_LDP**1.5_LDP)
	    A30=A10*EXP(T1/3.0D0)/(3.0D0**1.5)

	    M1=100.0_LDP*M1/(A1+M1)
	    M1=100.0*M1/(A1+M1)

	    M2=100.0_LDP*M2/(A2+M2)
	    M2=100.0*M2/(A2+M2)

	    M3=100.0_LDP*M3/(A3+M3)
	    M3=100.0*M3/(A3+M3)

	    WIM1=100.0_LDP*WIM1/(WIA1+WIM1)
	    WIM1=100.0*WIM1/(WIA1+WIM1)

	    WIM2=100.0_LDP*WIM2/(WIA2+WIM2)
	    WIM2=100.0*WIM2/(WIA2+WIM2)

	    WIM3=100.0_LDP*WIM3/(WIA3+WIM3)
	    WIM3=100.0*WIM3/(WIA3+WIM3)


rdgendie_v4.f

	  A1=0.0_LDP
	  A1=0.0D0

	  A2=0.0_LDP
	  A2=0.0D0

	  A3=0.0_LDP
	  A3=0.0D0

	  M1=0.0_LDP
	  M1=0.0D0

	  M2=0.0_LDP
	  M2=0.0D0

	  M3=0.0_LDP
	  M3=0.0D0

	  WIA1=0.0_LDP
	  WIA1=0.0D0

	  WIA2=0.0_LDP
	  WIA2=0.0D0

	  WIA3=0.0_LDP
	  WIA3=0.0D0

	  WIM1=0.0_LDP
	  WIM1=0.0D0

	  WIM2=0.0_LDP
	  WIM2=0.0D0

	  WIM3=0.0_LDP
	  WIM3=0.0D0

	    A10=2.07E-10_LDP*GUPDIE(ML)*EINADIE(ML)/GION
	    A10=2.07D-10*GUPDIE(ML)*EINADIE(ML)/GION

	    A20=A10*EXP(0.5_LDP*T1)/(2.0_LDP**1.5_LDP)
	    A20=A10*EXP(0.5D0*T1)/(2.0D0**1.5)

	    A30=A10*EXP(T1/3.0_LDP)/(3.0_LDP**1.5_LDP)
	    A30=A10*EXP(T1/3.0D0)/(3.0D0**1.5)

	    M1=100.0_LDP*M1/(A1+M1)
	    M1=100.0*M1/(A1+M1)

	    M2=100.0_LDP*M2/(A2+M2)
	    M2=100.0*M2/(A2+M2)

	    M3=100.0_LDP*M3/(A3+M3)
	    M3=100.0*M3/(A3+M3)

	    WIM1=100.0_LDP*WIM1/(WIA1+WIM1)
	    WIM1=100.0*WIM1/(WIA1+WIM1)

	    WIM2=100.0_LDP*WIM2/(WIA2+WIM2)
	    WIM2=100.0*WIM2/(WIA2+WIM2)

	    WIM3=100.0_LDP*WIM3/(WIA3+WIM3)
	    WIM3=100.0*WIM3/(WIA3+WIM3)


rd_log.f


rd_sol_abund_scale.f

	IF(MUST_GET_SET)SOL_ABUND_HSCL=0.0_LDP
	IF(MUST_GET_SET)SOL_ABUND_HSCL=0.0D0

	ABUND=0.0_LDP
	ABUND=0.0D0

	    IF(SOL_ABUND_HSCL(I) .EQ. 0.0_LDP .AND. AT_NO(I) .LE. 92)THEN
	    IF(SOL_ABUND_HSCL(I) .EQ. 0.0D0 .AND. AT_NO(I) .LE. 92)THEN

	T1=0.0_LDP
	T1=0.0D0

	  SOL_MASS_FRAC(I)=10.0_LDP**(SOL_ABUND_HSCL(I)-12.0_LDP)
	  SOL_MASS_FRAC(I)=10.0D0**(SOL_ABUND_HSCL(I)-12.0D0)


rd_t_ed.f


readba.f


regrid_b_on_ne.f

	  CONST=0.0_LDP
	  CONST=0.0D0

	ELSE IF( ABS((HYD(NZ,NDOLD)-1.0_LDP)) .LT. 0.1_LDP)THEN
	ELSE IF( ABS((HYD(NZ,NDOLD)-1.0D0)) .LT. 0.1)THEN

	  CONST=0.0_LDP
	  CONST=0.0D0

	ELSE IF( ABS(HYD(NZ,NDOLD)) .LT. 0.1_LDP) THEN
	ELSE IF( ABS(HYD(NZ,NDOLD)) .LT. 0.1) THEN

	  CONST=1.0_LDP
	  CONST=1.0D0

	CONST=0.0_LDP
	CONST=0.0D0


regrid_b_on_sph_tau.f

	  CONST=0.0_LDP
	  CONST=0.0D0

	ELSE IF( ABS((HYD(NZ,NDOLD)-1.0_LDP)) .LT. 0.1_LDP)THEN
	ELSE IF( ABS((HYD(NZ,NDOLD)-1.0D0)) .LT. 0.1)THEN

	  CONST=0.0_LDP
	  CONST=0.0D0

	ELSE IF( ABS(HYD(NZ,NDOLD)) .LT. 0.1_LDP) THEN
	ELSE IF( ABS(HYD(NZ,NDOLD)) .LT. 0.1) THEN

	  CONST=1.0_LDP
	  CONST=1.0D0

	CONST=0.0_LDP
	CONST=0.0D0

        TAU(1)=6.65E-15_LDP*NEW_ED(1)*R(1)
        TAU(1)=6.65D-15*NEW_ED(1)*R(1)

          TAU(I)=TAU(I-1)+6.65E-15_LDP*(NEW_ED(I-1)+NEW_ED(I))*(R(I-1)-R(I))*0.5_LDP
          TAU(I)=TAU(I-1)+6.65D-15*(NEW_ED(I-1)+NEW_ED(I))*(R(I-1)-R(I))*0.5D0

          IF(TAU(I) .LE. 1.0_LDP)K=I
          IF(TAU(I) .LE. 1.0D0)K=I

	T1=(1.0_LDP-TAU(K))/(TAU(K+1)-TAU(K))
	T1=(1.0D0-TAU(K))/(TAU(K+1)-TAU(K))

        RTAU1=T1*R(K+1)+(1.0_LDP-T1)*R(K)
        RTAU1=T1*R(K+1)+(1.0D0-T1)*R(K)

        TAU(1)=6.65E-15_LDP*NEW_ED(1)*R(1)/3.0_LDP
        TAU(1)=6.65D-15*NEW_ED(1)*R(1)/3.0D0

          TAU(I)=TAU(I-1)+6.65E-15_LDP*(NEW_ED(I-1)+NEW_ED(I))*(R(I-1)-R(I))*0.5_LDP
          TAU(I)=TAU(I-1)+6.65D-15*(NEW_ED(I-1)+NEW_ED(I))*(R(I-1)-R(I))*0.5D0

        OLDTAU(1)=6.65E-15_LDP*OLDED(1)*ROLD(1)
        OLDTAU(1)=6.65D-15*OLDED(1)*ROLD(1)

          OLDTAU(I)=OLDTAU(I-1)+6.65E-15_LDP*(OLDED(I-1)+OLDED(I))*(ROLD(I-1)-ROLD(I))*0.5_LDP
          OLDTAU(I)=OLDTAU(I-1)+6.65D-15*(OLDED(I-1)+OLDED(I))*(ROLD(I-1)-ROLD(I))*0.5D0

          IF(OLDTAU(I) .LE. 1.0_LDP)K=I
          IF(OLDTAU(I) .LE. 1.0D0)K=I

        T1=(1.0_LDP-OLDTAU(K))/(OLDTAU(K+1)-OLDTAU(K))
        T1=(1.0D0-OLDTAU(K))/(OLDTAU(K+1)-OLDTAU(K))

        RTAU1_OLD=T1*ROLD(K+1)+(1.0_LDP-T1)*ROLD(K)
        RTAU1_OLD=T1*ROLD(K+1)+(1.0D0-T1)*ROLD(K)

        OLDTAU(1)=6.65E-15_LDP*OLDED(1)*ROLD(1)/3.0_LDP
        OLDTAU(1)=6.65D-15*OLDED(1)*ROLD(1)/3.0D0

          OLDTAU(I)=OLDTAU(I-1)+6.65E-15_LDP*(OLDED(I-1)+OLDED(I))*(ROLD(I-1)-ROLD(I))*0.5_LDP
          OLDTAU(I)=OLDTAU(I-1)+6.65D-15*(OLDED(I-1)+OLDED(I))*(ROLD(I-1)-ROLD(I))*0.5D0


regrid_dchi.f

	F2DA(:,:)=0.0_LDP
	F2DA(:,:)=0.0D0


regrid_h.f

	  MIDR(I)=0.5_LDP*(R(I)+R(I+1))
	  MIDR(I)=0.5D0*(R(I)+R(I+1))


regrid_log_dc_v1.f

	          IF(FIRST .AND. T(I) .GT. 1.0001_LDP*TMAX)THEN
	          IF(FIRST .AND. T(I) .GT. 1.0001*TMAX)THEN

	          IF(FIRST .AND. T(I) .LT. 0.9999_LDP*TMIN)THEN
	          IF(FIRST .AND. T(I) .LT. 0.9999*TMIN)THEN

	      DO WHILE(ABS(DELTA_T/T_EXCITE) .GT. 1.0E-08_LDP)
	      DO WHILE(ABS(DELTA_T/T_EXCITE) .GT. 1.0D-08)

	    DO WHILE(ABS(DELTA_T/T_EXCITE) .GT. 1.0E-04_LDP .AND. COUNT .LT. 100)
	    DO WHILE(ABS(DELTA_T/T_EXCITE) .GT. 1.0D-04 .AND. COUNT .LT. 100)


regrid_t_ed.f

	IF(ABS(OLDR(NDOLD)/R(ND)-1.0_LDP) .GT. 0.0001_LDP)THEN
	IF(ABS(OLDR(NDOLD)/R(ND)-1.0D0) .GT. 0.0001D0)THEN


regrid_t_ed_v2.f

	IF(ABS(OLDR(NDOLD)/R(ND)-1.0_LDP) .GT. 0.0001_LDP)THEN
	IF(ABS(OLDR(NDOLD)/R(ND)-1.0D0) .GT. 0.0001D0)THEN

	IF( ABS(1.0_LDP-OLDR(1)/R(1)) .LE. 1.0E-10_LDP )OLDR(1)=R(1)
	IF( ABS(1.0D0-OLDR(1)/R(1)) .LE. 1.0D-10 )OLDR(1)=R(1)


regrid_t_ed_v3.f

	  IF(ABS(OLDR(NDOLD)/R(ND)-1.0_LDP) .GT. 0.0001_LDP)THEN
	  IF(ABS(OLDR(NDOLD)/R(ND)-1.0D0) .GT. 0.0001D0)THEN


regrid_tx_r.f

	IF( ABS( TA(NOLD) ) .LT. 0.2_LDP .AND. CHECK_DC)DPOP=DPOP+1.0_LDP
	IF( ABS( TA(NOLD) ) .LT. 0.2D0 .AND. CHECK_DC)DPOP=DPOP+1.0D0

	IF(ABS(OLDR(NDOLD)/R(ND)-1.0_LDP) .GT. 0.0001_LDP)THEN
	IF(ABS(OLDR(NDOLD)/R(ND)-1.0D0) .GT. 0.0001D0)THEN

	    DO WHILE(ABS(DELTA_T/T_EXCITE) .GT. 1.0E-08_LDP)
	    DO WHILE(ABS(DELTA_T/T_EXCITE) .GT. 1.0E-08)

	      FX=DPOP(I,J)*EXP(HDKT*EDGE(I)*(1.0_LDP/OLDT(J)-1.0_LDP/T_EXCITE))*
	      FX=DPOP(I,J)*EXP(HDKT*EDGE(I)*(1.0D0/OLDT(J)-1.0D0/T_EXCITE))*

	1         (T_EXCITE/OLDT(J))**1.5_LDP
	1         (T_EXCITE/OLDT(J))**1.5D0

	      DELTA_T=(FX-1.0_LDP)*T_EXCITE/FX/(1.5_LDP+HDKT*EDGE(I)/T_EXCITE)
	      DELTA_T=(FX-1.0D0)*T_EXCITE/FX/(1.5D0+HDKT*EDGE(I)/T_EXCITE)

	      IF(DELTA_T .GT.  0.8_LDP*T_EXCITE)DELTA_T=0.8_LDP*T_EXCITE
	      IF(DELTA_T .GT.  0.8D0*T_EXCITE)DELTA_T=0.8D0*T_EXCITE

	      IF(DELTA_T .LT. -0.8_LDP*T_EXCITE)DELTA_T=-0.8_LDP*T_EXCITE
	      IF(DELTA_T .LT. -0.8D0*T_EXCITE)DELTA_T=-0.8D0*T_EXCITE

	    DHEN(J,I)=EXP(HDKT*EDGE(J)*(1.0_LDP/T1-1.0_LDP/T_MOD(I)))*(T_MOD(I)/T1)**1.5_LDP
	    DHEN(J,I)=EXP(HDKT*EDGE(J)*(1.0D0/T1-1.0D0/T_MOD(I)))*(T_MOD(I)/T1)**1.5D0

	    DHEN(J,I)=EXP(HDKT*EDGE(J)*(1.0_LDP/T1-1.0_LDP/T_MOD(I)))*(T_MOD(I)/T1)**1.5_LDP
	    DHEN(J,I)=EXP(HDKT*EDGE(J)*(1.0D0/T1-1.0D0/T_MOD(I)))*(T_MOD(I)/T1)**1.5D0

	    TA(:)=0.0_LDP
	    TA(:)=0.0D0

	      IF(TA(F_TO_S(J)) .EQ. 0.0_LDP)TA(F_TO_S(J))=DHEN(J,I)
	      IF(TA(F_TO_S(J)) .EQ. 0.0D0)TA(F_TO_S(J))=DHEN(J,I)


regridwsc.f

	ADD1=0.0_LDP
	ADD1=0.0D0

	IF( ABS( TA(NOLD) ) .LT. 0.2_LDP )ADD1=1.0_LDP
	IF( ABS( TA(NOLD) ) .LT. 0.2 )ADD1=1.0D0

	IF(ABS(OLDR(NDOLD)/R(ND)-1.0_LDP) .GT. 0.0001_LDP)THEN
	IF(ABS(OLDR(NDOLD)/R(ND)-1.0D0) .GT. 0.0001)THEN

	    DELTA_T=10.0_LDP
	    DELTA_T=10.0D0

	    DO WHILE( ABS(DELTA_T) .GT. 1.0E-06_LDP .AND. COUNT .LT. 100 )
	    DO WHILE( ABS(DELTA_T) .GT. 1.0E-06 .AND. COUNT .LT. 100 )

	      T1=( (T(I)/TX)**(1.5_LDP) )*EXP(HDKT*EDGE(NZ)*(T(I)-TX)/T(I)/TX)
	      T1=( (T(I)/TX)**(1.5) )*EXP(HDKT*EDGE(NZ)*(T(I)-TX)/T(I)/TX)

	      DELTA_T= (DHEN(NZ,I)-T1)*TX/T1/(1.0_LDP+HDKT*EDGE(NZ)/TX)
	      DELTA_T= (DHEN(NZ,I)-T1)*TX/T1/(1.0D0+HDKT*EDGE(NZ)/TX)

	      IF(ABS(DELTA_T) .GT. 0.8_LDP*TX)DELTA_T=0.5_LDP*DELTA_T
	      IF(ABS(DELTA_T) .GT. 0.8*TX)DELTA_T=0.5D0*DELTA_T


regridwsc_v2.f

	ADD1=0.0_LDP
	ADD1=0.0D0

	IF( ABS( TA(NOLD) ) .LT. 0.2_LDP .AND. CHECK_DC)ADD1=1.0_LDP
	IF( ABS( TA(NOLD) ) .LT. 0.2 .AND. CHECK_DC)ADD1=1.0D0

	IF(ABS(OLDR(NDOLD)/R(ND)-1.0_LDP) .GT. 0.0001_LDP)THEN
	IF(ABS(OLDR(NDOLD)/R(ND)-1.0D0) .GT. 0.0001)THEN

	    DELTA_T=10.0_LDP
	    DELTA_T=10.0D0

	    DC_MOD=LOG(DHEN(NZ,I)) + HDKT*EDGE(NZ)/T(I) - 1.5_LDP*LOG(T(I))
	    DC_MOD=LOG(DHEN(NZ,I)) + HDKT*EDGE(NZ)/T(I) - 1.5D0*LOG(T(I))

	    DO WHILE( ABS(DELTA_T) .GT. 1.0E-06_LDP .AND. COUNT .LT. 100 )
	    DO WHILE( ABS(DELTA_T) .GT. 1.0E-06 .AND. COUNT .LT. 100 )

             IF(HDKT*EDGE(NZ)/TX .GT. 1.5_LDP)THEN
             IF(HDKT*EDGE(NZ)/TX .GT. 1.5D0)THEN

               TX=HDKT*EDGE(NZ)/(DC_MOD+1.5_LDP*LOG(TX))
               TX=HDKT*EDGE(NZ)/(DC_MOD+1.5D0*LOG(TX))

               TX= ( EXP(HDKT*EDGE(NZ)/TX-DC_MOD) )**(2.0_LDP/3.0_LDP)
               TX= ( EXP(HDKT*EDGE(NZ)/TX-DC_MOD) )**(2.0D0/3.0D0)

	    TA(:)=0.0_LDP
	    TA(:)=0.0D0

	      IF(TA(F_TO_S(J)) .EQ. 0.0_LDP)TA(F_TO_S(J))=DHEN(J,I)
	      IF(TA(F_TO_S(J)) .EQ. 0.0D0)TA(F_TO_S(J))=DHEN(J,I)


regridwsc_v3.f

	IF( ABS( TA(NOLD) ) .LT. 0.2_LDP .AND. CHECK_DC)DPOP=DPOP+1.0_LDP
	IF( ABS( TA(NOLD) ) .LT. 0.2D0 .AND. CHECK_DC)DPOP=DPOP+1.0D0

	IF(ABS(OLDR(NDOLD)/R(ND)-1.0_LDP) .GT. 0.0001_LDP)THEN
	IF(ABS(OLDR(NDOLD)/R(ND)-1.0D0) .GT. 0.0001D0)THEN

	    T2=MIN(1.0_LDP, ABS(LOG(DPOP(J,1)))/ABS(LOG(DPOP(1,1))) )
	    T2=MIN(1.0D0, ABS(LOG(DPOP(J,1)))/ABS(LOG(DPOP(1,1))) )

	    DO WHILE(ABS(DELTA_T) .GT. 1.0E-08_LDP .AND. COUNT .LT. 100)
	    DO WHILE(ABS(DELTA_T) .GT. 1.0D-08 .AND. COUNT .LT. 100)

	      FX=DHEN(NZ,I)*EXP(HDKT*EDGE(NZ)*(1.0_LDP/T(I)-1.0_LDP/TX))*
	      FX=DHEN(NZ,I)*EXP(HDKT*EDGE(NZ)*(1.0D0/T(I)-1.0D0/TX))*

	1           (TX/T(I))**1.5_LDP
	1           (TX/T(I))**1.5D0

	      DELTA_T=(FX-1.0_LDP)*TX/FX/(1.5_LDP+HDKT*EDGE(NZ)/TX)
	      DELTA_T=(FX-1.0D0)*TX/FX/(1.5D0+HDKT*EDGE(NZ)/TX)

	      IF(DELTA_T .GT.  0.8_LDP*TX)DELTA_T=0.8_LDP*TX
	      IF(DELTA_T .GT.  0.8D0*TX)DELTA_T=0.8D0*TX

	      IF(DELTA_T .LT. -0.8_LDP*TX)DELTA_T=-0.8_LDP*TX
	      IF(DELTA_T .LT. -0.8D0*TX)DELTA_T=-0.8D0*TX

	        DHEN(J,I)=EXP(HDKT*EDGE(J)*(1.0_LDP/TX-1.0_LDP/T(I)))*(T(I)/TX)**1.5_LDP
	        DHEN(J,I)=EXP(HDKT*EDGE(J)*(1.0D0/TX-1.0D0/T(I)))*(T(I)/TX)**1.5D0

	IF(SUM(INT_SEQ) .EQ. 0.0_LDP)THEN
	IF(SUM(INT_SEQ) .EQ. 0.0D0)THEN

	    TA(:)=0.0_LDP
	    TA(:)=0.0D0

	      IF(TA(F_TO_S(J)) .EQ. 0.0_LDP)TA(F_TO_S(J))=DHEN(J,I)
	      IF(TA(F_TO_S(J)) .EQ. 0.0D0)TA(F_TO_S(J))=DHEN(J,I)


rext_coef_v2.f

	    IF(T1 .LT. 0.1_LDP)THEN
	    IF(T1 .LT. 0.1D0)THEN

	      REXT(2)=(REXT(1)+T1*REXT(3))/(1.0_LDP+T1)
	      REXT(2)=(REXT(1)+T1*REXT(3))/(1.0D0+T1)

	      REXT(2)=REXT(1)-0.1_LDP*(REXT(1)-REXT(2))
	      REXT(2)=REXT(1)-0.1D0*(REXT(1)-REXT(2))

	    T1=MIN(T1,0.1_LDP)
	    T1=MIN(T1,0.1D0)

	    REXT(NX-1)=(REXT(NX)+T1*REXT(NX-2))/(1.0_LDP+T1)
	    REXT(NX-1)=(REXT(NX)+T1*REXT(NX-2))/(1.0D0+T1)

	COEF(:,:)=0._LDP      	!4:NX
	COEF(:,:)=0.D0      	!4:NX

	COEF(1,1)=1.0_LDP
	COEF(1,1)=1.0D0

	      COEF(1,I)=1.0_LDP-T1
	      COEF(1,I)=1.0D0-T1

	      A2=T2*T2*(3.0_LDP-2*T2)
	      A2=T2*T2*(3.0-2*T2)

	      A1=1.0_LDP-A2
	      A1=1.0-A2

	      A3=T1*(1.0_LDP-T2*(2.0_LDP-T2))/(LOG(R(M))-LOG(R(M-2)))
	      A3=T1*(1.0-T2*(2.0-T2))/(LOG(R(M))-LOG(R(M-2)))

	      A4=T1*T2*(T2-1.0_LDP)/(LOG(R(M+1))-LOG(R(M-1)))
	      A4=T1*T2*(T2-1.0)/(LOG(R(M+1))-LOG(R(M-1)))


rite_asc.f


rite_atmdes_v2.f


rite_atmdes_v3.f


rite_atmdes_v4.f


rite_gam_v2.f

	IF(GAM(ND) .EQ. 0.0_LDP .AND. GAM(1) .EQ. 0.0_LDP)RETURN
	IF(GAM(ND) .EQ. 0.0D0 .AND. GAM(1) .EQ. 0.0D0)RETURN


rv_sn_model.f

	IF(BETA1 .LT. 0.0_LDP)THEN
	IF(BETA1 .LT. 0.0D0)THEN

	    SIGMA(I)=BETA1-1.0_LDP
	    SIGMA(I)=BETA1-1.0D0

	  R(ND-1)=R(ND)+(TA(MND-1)-TA(MND))/20.0_LDP
	  R(ND-1)=R(ND)+(TA(MND-1)-TA(MND))/20.0D0

	  R(2)=TA(1)-(TA(1)-TA(2))/50.0_LDP
	  R(2)=TA(1)-(TA(1)-TA(2))/50.0D0

	  R(ND-1)=R(ND)+(TA(MND-1)-TA(MND))/10.0_LDP
	  R(ND-1)=R(ND)+(TA(MND-1)-TA(MND))/10.0D0

	  R(3)=TA(1)-(TA(1)-TA(2))/5.0_LDP
	  R(3)=TA(1)-(TA(1)-TA(2))/5.0D0

	  R(ND-2)=R(ND)+(TA(MND-1)-TA(MND))/3.0_LDP
	  R(ND-2)=R(ND)+(TA(MND-1)-TA(MND))/3.0D0

	  R(2)=TA(1)-(TA(1)-TA(2))/20.0_LDP
	  R(2)=TA(1)-(TA(1)-TA(2))/20.0D0

	  R(ND-1)=R(ND)+(TA(MND-1)-TA(MND))/20.0_LDP
	  R(ND-1)=R(ND)+(TA(MND-1)-TA(MND))/20.0D0

	  R(3)=TA(1)-(TA(1)-TA(2))/8.0_LDP
	  R(3)=TA(1)-(TA(1)-TA(2))/8.0D0

	  R(ND-2)=R(ND)+(TA(MND-1)-TA(MND))/8.0_LDP
	  R(ND-2)=R(ND)+(TA(MND-1)-TA(MND))/8.0D0

	  R(4)=TA(1)-(TA(1)-TA(2))/3.0_LDP
	  R(4)=TA(1)-(TA(1)-TA(2))/3.0D0

	  R(ND-3)=R(ND)+(TA(MND-1)-TA(MND))/3.0_LDP
	  R(ND-3)=R(ND)+(TA(MND-1)-TA(MND))/3.0D0

	  SIGMA(I)=BETA1-1.0_LDP
	  SIGMA(I)=BETA1-1.0D0


rv_sn_model_v2.f

	IF(BETA1 .LT. 0.0_LDP)THEN
	IF(BETA1 .LT. 0.0D0)THEN

	    SIGMA(I)=BETA1-1.0_LDP
	    SIGMA(I)=BETA1-1.0D0

	  R(ND-1)=R(ND)+(TA(MND-1)-TA(MND))/20.0_LDP
	  R(ND-1)=R(ND)+(TA(MND-1)-TA(MND))/20.0D0

	  R(2)=TA(1)-(TA(1)-TA(2))/50.0_LDP
	  R(2)=TA(1)-(TA(1)-TA(2))/50.0D0

	  R(ND-1)=R(ND)+(TA(MND-1)-TA(MND))/10.0_LDP
	  R(ND-1)=R(ND)+(TA(MND-1)-TA(MND))/10.0D0

	  R(3)=TA(1)-(TA(1)-TA(2))/5.0_LDP
	  R(3)=TA(1)-(TA(1)-TA(2))/5.0D0

	  R(ND-2)=R(ND)+(TA(MND-1)-TA(MND))/3.0_LDP
	  R(ND-2)=R(ND)+(TA(MND-1)-TA(MND))/3.0D0

	  R(2)=TA(1)-(TA(1)-TA(2))/20.0_LDP
	  R(2)=TA(1)-(TA(1)-TA(2))/20.0D0

	  R(ND-1)=R(ND)+(TA(MND-1)-TA(MND))/20.0_LDP
	  R(ND-1)=R(ND)+(TA(MND-1)-TA(MND))/20.0D0

	  R(3)=TA(1)-(TA(1)-TA(2))/8.0_LDP
	  R(3)=TA(1)-(TA(1)-TA(2))/8.0D0

	  R(ND-2)=R(ND)+(TA(MND-1)-TA(MND))/8.0_LDP
	  R(ND-2)=R(ND)+(TA(MND-1)-TA(MND))/8.0D0

	  R(4)=TA(1)-(TA(1)-TA(2))/3.0_LDP
	  R(4)=TA(1)-(TA(1)-TA(2))/3.0D0

	  R(ND-3)=R(ND)+(TA(MND-1)-TA(MND))/3.0_LDP
	  R(ND-3)=R(ND)+(TA(MND-1)-TA(MND))/3.0D0

	  SIGMA(I)=BETA1-1.0_LDP
	  SIGMA(I)=BETA1-1.0D0


s15adf.f

      DATA               P(1)/113.8641541510502_LDP/,
      DATA               P(1)/113.8641541510502D0/,

     *                   P(2)/377.4852376853020_LDP/,
     *                   P(2)/377.4852376853020D0/,

     *                   P(3)/3209.377589138469_LDP/,
     *                   P(3)/3209.377589138469D0/,

     *                   P(4)/.1857777061846032_LDP/,
     *                   P(4)/.1857777061846032D0/,

     *                   P(5)/3.161123743870566_LDP/
     *                   P(5)/3.161123743870566D0/

      DATA               Q(1)/244.0246379344442_LDP/,
      DATA               Q(1)/244.0246379344442D0/,

     *                   Q(2)/1282.616526077372_LDP/,
     *                   Q(2)/1282.616526077372D0/,

     *                   Q(3)/2844.236833439171_LDP/,
     *                   Q(3)/2844.236833439171D0/,

     *                   Q(4)/23.60129095234412_LDP/
     *                   Q(4)/23.60129095234412D0/

      DATA               P1(1)/8.883149794388376_LDP/,
      DATA               P1(1)/8.883149794388376D0/,

     *                   P1(2)/66.11919063714163_LDP/,
     *                   P1(2)/66.11919063714163D0/,

     *                   P1(3)/298.6351381974001_LDP/,
     *                   P1(3)/298.6351381974001D0/,

     *                   P1(4)/881.9522212417691_LDP/,
     *                   P1(4)/881.9522212417691D0/,

     *                   P1(5)/1712.047612634071_LDP/,
     *                   P1(5)/1712.047612634071D0/,

     *                   P1(6)/2051.078377826071_LDP/,
     *                   P1(6)/2051.078377826071D0/,

     *                   P1(7)/1230.339354797997_LDP/,
     *                   P1(7)/1230.339354797997D0/,

     *                   P1(8)/2.153115354744038E-8_LDP/,
     *                   P1(8)/2.153115354744038D-8/,

     *                   P1(9)/.5641884969886701_LDP/
     *                   P1(9)/.5641884969886701D0/

      DATA               Q1(1)/117.6939508913125_LDP/,
      DATA               Q1(1)/117.6939508913125D0/,

     *                   Q1(2)/537.1811018620099_LDP/,
     *                   Q1(2)/537.1811018620099D0/,

     *                   Q1(3)/1621.389574566690_LDP/,
     *                   Q1(3)/1621.389574566690D0/,

     *                   Q1(4)/3290.799235733460_LDP/,
     *                   Q1(4)/3290.799235733460D0/,

     *                   Q1(5)/4362.619090143247_LDP/,
     *                   Q1(5)/4362.619090143247D0/,

     *                   Q1(6)/3439.367674143722_LDP/,
     *                   Q1(6)/3439.367674143722D0/,

     *                   Q1(7)/1230.339354803749_LDP/,
     *                   Q1(7)/1230.339354803749D0/,

     *                   Q1(8)/15.74492611070983_LDP/
     *                   Q1(8)/15.74492611070983D0/

      DATA               P2(1)/-3.603448999498044E-01_LDP/,
      DATA               P2(1)/-3.603448999498044D-01/,

     *                   P2(2)/-1.257817261112292E-01_LDP/,
     *                   P2(2)/-1.257817261112292D-01/,

     *                   P2(3)/-1.608378514874228E-02_LDP/,
     *                   P2(3)/-1.608378514874228D-02/,

     *                   P2(4)/-6.587491615298378E-04_LDP/,
     *                   P2(4)/-6.587491615298378D-04/,

     *                   P2(5)/-1.631538713730210E-02_LDP/,
     *                   P2(5)/-1.631538713730210D-02/,

     *                   P2(6)/-3.053266349612323E-01_LDP/
     *                   P2(6)/-3.053266349612323D-01/

      DATA               Q2(1)/1.872952849923460_LDP/,
      DATA               Q2(1)/1.872952849923460D0/,

     *                   Q2(2)/5.279051029514284E-01_LDP/,
     *                   Q2(2)/5.279051029514284D-01/,

     *                   Q2(3)/6.051834131244132E-02_LDP/,
     *                   Q2(3)/6.051834131244132D-02/,

     *                   Q2(4)/2.335204976268692E-03_LDP/,
     *                   Q2(4)/2.335204976268692D-03/,

     *                   Q2(5)/2.568520192289822_LDP/
     *                   Q2(5)/2.568520192289822D0/

      DATA               XMIN/1.0E-10_LDP/,XLARGE/6.375_LDP/
      DATA               XMIN/1.0D-10/,XLARGE/6.375D0/

      DATA               XBIG/13.3_LDP/
      DATA               XBIG/13.3D0/

      DATA               SQRPI/.5641895835477563_LDP/
      DATA               SQRPI/.5641895835477563D0/

      IF (X.GE.0.0_LDP) GO TO 5
      IF (X.GE.0.0D0) GO TO 5

    5 IF (X.LT..477_LDP) GO TO 10
    5 IF (X.LT..477D0) GO TO 10

      IF (X.LE.4.0_LDP) GO TO 30
      IF (X.LE.4.0D0) GO TO 30

      RES = 2.0_LDP
      RES = 2.0D0

      RES = 1.0_LDP-RES
      RES = 1.0D0-RES

      XI = 1.0_LDP/XSQ
      XI = 1.0D0/XSQ

      IF (ISW.EQ.-1) RES = 2.0_LDP-RES
      IF (ISW.EQ.-1) RES = 2.0D0-RES

   65 RES = 0.0_LDP
   65 RES = 0.0D0


same_n.f


scale_grey.f

	OLD_TAU(ND_RD)=MAX(LOG_TAU(ND),OLD_TAU(ND_RD-1)+0.1_LDP)
	OLD_TAU(ND_RD)=MAX(LOG_TAU(ND),OLD_TAU(ND_RD-1)+0.1)

	OLD_SCALE_FAC(ND_RD)=1.0_LDP
	OLD_SCALE_FAC(ND_RD)=1.0D0

	OLD_TAU(1)=MIN(LOG_TAU(1),OLD_TAU(2)-0.1_LDP)
	OLD_TAU(1)=MIN(LOG_TAU(1),OLD_TAU(2)-0.1)


scale_pops.f


scr_read_v2.f


set_acc_dmu.f

	A(1)=0.5_LDP
	A(1)=0.5D0

	A(2)=1.0_LDP/8.0_LDP
	A(2)=1.0D0/8.0D0

	A(3)=1.0_LDP/16.0_LDP
	A(3)=1.0D0/16.0D0

	A(4)=5.0_LDP/128.0_LDP
	A(4)=5.0D0/128.0D0

	A(5)=7.0_LDP/256.0_LDP
	A(5)=7.0D0/256.0D0

	A(6)=21.0_LDP/1024.0_LDP
	A(6)=21.0D0/1024.0D0

	dX(N)=0.0_LDP
	dX(N)=0.0D0

          IF(X(I+1) .LT. 0.999_LDP)THEN
          IF(X(I+1) .LT. 0.999D0)THEN


set_case.f


set_cont_freq.f

        REAL(KIND=LDP), PARAMETER :: RZERO=0.0_LDP
        REAL(KIND=LDP), PARAMETER :: RZERO=0.0D0

        REAL(KIND=LDP), PARAMETER :: RHALF=0.5_LDP
        REAL(KIND=LDP), PARAMETER :: RHALF=0.5D0

        REAL(KIND=LDP), PARAMETER :: RONE=1.0_LDP
        REAL(KIND=LDP), PARAMETER :: RONE=1.0D0

        REAL(KIND=LDP), PARAMETER :: RTWO=2.0_LDP
        REAL(KIND=LDP), PARAMETER :: RTWO=2.0D0

	EQUAL_FAC=1.0E-11_LDP
	EQUAL_FAC=1.0D-11

	    dV=2.998E+05_LDP*(NEW_FREQ(K)-NEW_FREQ(K_BEG))/NEW_FREQ(K)
	    dV=2.998D+05*(NEW_FREQ(K)-NEW_FREQ(K_BEG))/NEW_FREQ(K)

	        IF( dV_LEV*AMP_DIS**(J+1) .LT. 2.998E+05_LDP*
	        IF( dV_LEV*AMP_DIS**(J+1) .LT. 2.998D+05*

	      T1=0.0_LDP
	      T1=0.0D0

	        T1=T1+dV_NEW*(AMP_DIS**(J-L))/2.998E+05_LDP
	        T1=T1+dV_NEW*(AMP_DIS**(J-L))/2.998D+05

	T1=1.0E-04_LDP
	T1=1.0D-04

	  FREQ(I)=0.0_LDP
	  FREQ(I)=0.0D0


set_cont_freq_v2.f

	INTEGER, PARAMETER :: RZERO=0.0_LDP
	INTEGER, PARAMETER :: RZERO=0.0D0

	INTEGER, PARAMETER :: RONE=1.0_LDP
	INTEGER, PARAMETER :: RONE=1.0D0

	INTEGER, PARAMETER :: RTWO=2.0_LDP
	INTEGER, PARAMETER :: RTWO=2.0D0

	COINCIDENT_FRAC=0.2_LDP
	COINCIDENT_FRAC=0.2D0

	C_KMS=1.0E-05_LDP*SPEED_OF_LIGHT()
	C_KMS=1.0D-05*SPEED_OF_LIGHT()

	    RN=LOG( 1.0_LDP+T1*(BIG_AMP-1.0_LDP))/LOG(BIG_AMP) - 1.0_LDP
	    RN=LOG( 1.0D0+T1*(BIG_AMP-1.0D0))/LOG(BIG_AMP) - 1.0D0

	  T1=NEW_FREQ(K)*(SMALL_RAT-1.0_LDP)
	  T1=NEW_FREQ(K)*(SMALL_RAT-1.0D0)

	    RN=LOG( 1.0_LDP+T1*(AMP_DIS-1.0_LDP))/LOG(AMP_DIS) - 1.0_LDP
	    RN=LOG( 1.0D0+T1*(AMP_DIS-1.0D0))/LOG(AMP_DIS) - 1.0D0

	  EDGE(I)=0.0_LDP
	  EDGE(I)=0.0D0


set_cont_freq_v3.f

	EQUAL_FAC=1.0E-11_LDP
	EQUAL_FAC=1.0D-11

	      T1=0.0_LDP
	      T1=0.0D0

	T1=1.0E-04_LDP
	T1=1.0D-04

          IF(T1 .GT. 1.25_LDP*DELV_XRAY .AND. FREQ(ML) .GT. NU_END_XRAY)THEN
          IF(T1 .GT. 1.25D0*DELV_XRAY .AND. FREQ(ML) .GT. NU_END_XRAY)THEN

            J=T1/DELV_XRAY/1.2_LDP
            J=T1/DELV_XRAY/1.2D0

              NEW_FREQ(K)=FREQ(ML-1)-L*(FREQ(ML-1)-FREQ(ML))/(J+1.0_LDP)
              NEW_FREQ(K)=FREQ(ML-1)-L*(FREQ(ML-1)-FREQ(ML))/(J+1.0D0)

          ELSE IF(T1 .GT. 1.25_LDP*DELV_CONT .AND. FREQ(ML) .LE. NU_END_XRAY)THEN
          ELSE IF(T1 .GT. 1.25D0*DELV_CONT .AND. FREQ(ML) .LE. NU_END_XRAY)THEN

            J=T1/DELV_CONT/1.2_LDP
            J=T1/DELV_CONT/1.2D0

              NEW_FREQ(K)=FREQ(ML-1)-L*(FREQ(ML-1)-FREQ(ML))/(J+1.0_LDP)
              NEW_FREQ(K)=FREQ(ML-1)-L*(FREQ(ML-1)-FREQ(ML))/(J+1.0D0)

	  FREQ(I)=0.0_LDP
	  FREQ(I)=0.0D0


set_cont_freq_v4.f

	EQUAL_FAC=1.0E-11_LDP
	EQUAL_FAC=1.0D-11


set_dc_lte.f

	  DXzV(I)=1.0_LDP
	  DXzV(I)=1.0D0

	    XzVLTE(:,I)=1.0_LDP
	    XzVLTE(:,I)=1.0D0

	      XzVLTE(J,I)=EXP(HDKT*EDGE(J)*(1.0_LDP/TMIN-1.0_LDP/T(I)))
	      XzVLTE(J,I)=EXP(HDKT*EDGE(J)*(1.0D0/TMIN-1.0D0/T(I)))


set_dc_lte_v2.f

	TMIN_LOC=TMIN*(1.0_LDP+(MAX(0.0_LDP,(EDGE(1)-3.5_LDP))/20.0_LDP))
	TMIN_LOC=TMIN*(1.0D0+(MAX(0.0D0,(EDGE(1)-3.5D0))/20.0D0))

	  DXzV(I)=1.0_LDP
	  DXzV(I)=1.0D0

	    XzVLTE(:,I)=0.0_LDP
	    XzVLTE(:,I)=0.0D0

	      XzVLTE(J,I)=HDKT*EDGE(J)*(1.0_LDP/TMIN_LOC-1.0_LDP/T(I))
	      XzVLTE(J,I)=HDKT*EDGE(J)*(1.0D0/TMIN_LOC-1.0D0/T(I))


set_edge_freq_v2.f

	REAL(KIND=LDP), PARAMETER :: ZERO=0.0_LDP
	REAL(KIND=LDP), PARAMETER :: ZERO=0.0D0


set_gf_values_small.f

	      VEC_OSCIL(K)=1.0E-10_LDP*VEC_OSCIL(K)
	      VEC_OSCIL(K)=1.0D-10*VEC_OSCIL(K)

	      VEC_EINA(K)=1.0E-10_LDP*VEC_EINA(K)
	      VEC_EINA(K)=1.0D-10*VEC_EINA(K)


set_gm_all.f

	     K=LOG10(0.1_LDP+I)+1
	     K=LOG10(0.1D0+I)+1


set_t_ed_grid.f

	DELTA_T=0.0_LDP
	DELTA_T=0.0D0

	DELTA_ED=0.0_LDP
	DELTA_ED=0.0D0


set_x_freq.f

	CON_FAC=0.24191_LDP				!ev to 10^15 Hz
	CON_FAC=0.24191				!ev to 10^15 Hz


set_z_pop.f


simq.f

        BIGA=0.0_LDP
        BIGA=0.0D0


sobew.f

	  LINE_FLUX(I)=0.0_LDP
	  LINE_FLUX(I)=0.0D0

	  GAMH(I)=CHIL(I)*3.0E-10_LDP*R(I)/V(I)/FL    	!C/dex(15)/dex(5)
	  GAMH(I)=CHIL(I)*3.0D-10*R(I)/V(I)/FL    	!C/dex(15)/dex(5)

	EW=0.0_LDP
	EW=0.0D0

	CONT_FLUX=0.0_LDP
	CONT_FLUX=0.0D0

	    GAMH(I)=0.0_LDP
	    GAMH(I)=0.0D0

	      TOR=CHI(1)*R(1)*R(1)*(1.570796_LDP-ACOS(P(LS)/R(1)))/P(LS)
	      TOR=CHI(1)*R(1)*R(1)*(1.570796-ACOS(P(LS)/R(1)))/P(LS)

	    IBOUND=SOURCE(1)*(1.0_LDP-EXP(-TOR))
	    IBOUND=SOURCE(1)*(1.0D0-EXP(-TOR))

	    TB(1)=0.0_LDP			!Flux at grid point.
	    TB(1)=0.0D0			!Flux at grid point.

	    E2=1.0_LDP-(1.0_LDP-E1)/DTAU(1)
	    E2=1.0D0-(1.0D0-E1)/DTAU(1)

	    E3=(1.0_LDP-E1)/DTAU(1)-E1
	    E3=(1.0D0-E1)/DTAU(1)-E1

	    IF(DTAU(1) .LT. 1.0E-03_LDP)THEN
	    IF(DTAU(1) .LT. 1.0D-03)THEN

	      E2=DTAU(1)*0.5_LDP+DTAU(1)*DTAU(1)/6.0_LDP
	      E2=DTAU(1)*0.5+DTAU(1)*DTAU(1)/6.0D0

	      E3=DTAU(1)*0.5_LDP-DTAU(1)*DTAU(1)/3.0_LDP
	      E3=DTAU(1)*0.5-DTAU(1)*DTAU(1)/3.0D0

            AV(1)=0.5_LDP*(IBOUND+AV(2)*E1+SOURCE(1)*E2+SOURCE(2)*E3)
            AV(1)=0.5*(IBOUND+AV(2)*E1+SOURCE(1)*E2+SOURCE(2)*E3)

            TB(2)=0.0_LDP
            TB(2)=0.0D0

	      GAM(I)=GAMH(I)/ABS(1.0_LDP+Z(I)*Z(I)/R(I)/R(I)*SIGMA(I))
	      GAM(I)=GAMH(I)/ABS(1.0D0+Z(I)*Z(I)/R(I)/R(I)*SIGMA(I))

	    TB(NI)=0.0_LDP		     !Symmetry
	    TB(NI)=0.0D0		     !Symmetry

	    DTAU(I)=DTAU(I-1)+0.5_LDP*(NOES(I-1)+NOES(I))*(Z(I-1)-Z(I))
	    DTAU(I)=DTAU(I-1)+0.5D0*(NOES(I-1)+NOES(I))*(Z(I-1)-Z(I))

	      T3=0.0_LDP
	      T3=0.0D0

	      T4=0.0_LDP
	      T4=0.0D0

	1         +0.5_LDP*T2*AQW(I,LS)
	1         +0.5D0*T2*AQW(I,LS)

	CONT_FLUX=CONT_FLUX*R(1)*R(1)*13.19868_LDP
	CONT_FLUX=CONT_FLUX*R(1)*R(1)*13.19868

	T1=13.19868_LDP*(2.997924E-12_LDP/FL/FL)/CONT_FLUX
	T1=13.19868*(2.997924D-12/FL/FL)/CONT_FLUX

	EW=0.0_LDP
	EW=0.0D0

	1      +LOG(R(I)/R(I+1))*(T2-T1)/6.0_LDP )
	1      +LOG(R(I)/R(I+1))*(T2-T1)/6.0 )

	1            +LOG(R(ND-1)/R(ND))*(T2-T1)/6.0_LDP )
	1            +LOG(R(ND-1)/R(ND))*(T2-T1)/6.0 )

	EW=EW*0.5_LDP
	EW=EW*0.5D0


sobew_grad.f

	  LINE_FLUX(I)=0.0_LDP
	  LINE_FLUX(I)=0.0D0

	  GAMH(I)=CHIL(I)*3.0E-10_LDP*R(I)/V(I)/FL    	!C/dex(15)/dex(5)
	  GAMH(I)=CHIL(I)*3.0D-10*R(I)/V(I)/FL    	!C/dex(15)/dex(5)

	EW=0.0_LDP
	EW=0.0D0

	CONT_FLUX=0.0_LDP
	CONT_FLUX=0.0D0

	GLINE(1:ND)=0.0_LDP
	GLINE(1:ND)=0.0D0

	    GAMH(I)=0.0_LDP
	    GAMH(I)=0.0D0

	      TOR=CHI(1)*R(1)*R(1)*(1.570796_LDP-ACOS(P(LS)/R(1)))/P(LS)
	      TOR=CHI(1)*R(1)*R(1)*(1.570796-ACOS(P(LS)/R(1)))/P(LS)

	    IBOUND=SOURCE(1)*(1.0_LDP-EXP(-TOR))
	    IBOUND=SOURCE(1)*(1.0D0-EXP(-TOR))

	    TB(1)=0.0_LDP			!Flux at grid point.
	    TB(1)=0.0D0			!Flux at grid point.

	    E2=1.0_LDP-(1.0_LDP-E1)/DTAU(1)
	    E2=1.0D0-(1.0D0-E1)/DTAU(1)

	    E3=(1.0_LDP-E1)/DTAU(1)-E1
	    E3=(1.0D0-E1)/DTAU(1)-E1

	    IF(DTAU(1) .LT. 1.0E-03_LDP)THEN
	    IF(DTAU(1) .LT. 1.0D-03)THEN

	      E2=DTAU(1)*0.5_LDP+DTAU(1)*DTAU(1)/6.0_LDP
	      E2=DTAU(1)*0.5+DTAU(1)*DTAU(1)/6.0D0

	      E3=DTAU(1)*0.5_LDP-DTAU(1)*DTAU(1)/3.0_LDP
	      E3=DTAU(1)*0.5-DTAU(1)*DTAU(1)/3.0D0

            AV(1)=0.5_LDP*(IBOUND+AV(2)*E1+SOURCE(1)*E2+SOURCE(2)*E3)
            AV(1)=0.5*(IBOUND+AV(2)*E1+SOURCE(1)*E2+SOURCE(2)*E3)

            TB(2)=0.0_LDP
            TB(2)=0.0D0

	      GAM(I)=GAMH(I)/(1.0_LDP+Z(I)*Z(I)/R(I)/R(I)*SIGMA(I))
	      GAM(I)=GAMH(I)/(1.0D0+Z(I)*Z(I)/R(I)/R(I)*SIGMA(I))

	    TB(NI)=0.0_LDP		     !Symmetry
	    TB(NI)=0.0D0		     !Symmetry

	    DTAU(I)=DTAU(I-1)+0.5_LDP*(NOES(I-1)+NOES(I))*(Z(I-1)-Z(I))
	    DTAU(I)=DTAU(I-1)+0.5D0*(NOES(I-1)+NOES(I))*(Z(I-1)-Z(I))

	      T3=0.0_LDP
	      T3=0.0D0

	      T4=0.0_LDP
	      T4=0.0D0

	1         +0.5_LDP*T2*AQW(I,LS)
	1         +0.5D0*T2*AQW(I,LS)

	CONT_FLUX=CONT_FLUX*R(1)*R(1)*13.19868_LDP
	CONT_FLUX=CONT_FLUX*R(1)*R(1)*13.19868

	T1=13.19868_LDP*(2.997924E-12_LDP/FL/FL)/CONT_FLUX
	T1=13.19868*(2.997924D-12/FL/FL)/CONT_FLUX

	EW=0.0_LDP
	EW=0.0D0

	1      +LOG(R(I)/R(I+1))*(T2-T1)/6.0_LDP )
	1      +LOG(R(I)/R(I+1))*(T2-T1)/6.0 )

	1            +LOG(R(ND-1)/R(ND))*(T2-T1)/6.0_LDP )
	1            +LOG(R(ND-1)/R(ND))*(T2-T1)/6.0 )

	EW=EW*0.5_LDP
	EW=EW*0.5D0

	T1=16.0E+20_LDP*(3.14159_LDP)**2/RLUM/3.845E+33_LDP
	T1=16.0D+20*(3.14159)**2/RLUM/3.845D+33


sobew_grad_v2.f

	  LINE_FLUX(I)=0.0_LDP
	  LINE_FLUX(I)=0.0D0

	  GAMH(I)=CHIL(I)*3.0E-10_LDP*R(I)/V(I)/FL    	!C/dex(15)/dex(5)
	  GAMH(I)=CHIL(I)*3.0D-10*R(I)/V(I)/FL    	!C/dex(15)/dex(5)

	EW=0.0_LDP
	EW=0.0D0

	CONT_FLUX=0.0_LDP
	CONT_FLUX=0.0D0

	GLINE(1:ND)=0.0_LDP
	GLINE(1:ND)=0.0D0

	JFLUX=0.0_LDP
	JFLUX=0.0D0

	    GAMH(I)=0.0_LDP
	    GAMH(I)=0.0D0

	      TOR=CHI(1)*R(1)*R(1)*(1.570796_LDP-ACOS(P(LS)/R(1)))/P(LS)
	      TOR=CHI(1)*R(1)*R(1)*(1.570796-ACOS(P(LS)/R(1)))/P(LS)

	    IBOUND=SOURCE(1)*(1.0_LDP-EXP(-TOR))
	    IBOUND=SOURCE(1)*(1.0D0-EXP(-TOR))

	    TB(1)=0.0_LDP			!Flux at grid point.
	    TB(1)=0.0D0			!Flux at grid point.

	    E2=1.0_LDP-(1.0_LDP-E1)/DTAU(1)
	    E2=1.0D0-(1.0D0-E1)/DTAU(1)

	    E3=(1.0_LDP-E1)/DTAU(1)-E1
	    E3=(1.0D0-E1)/DTAU(1)-E1

	    IF(DTAU(1) .LT. 1.0E-03_LDP)THEN
	    IF(DTAU(1) .LT. 1.0D-03)THEN

	      E2=DTAU(1)*0.5_LDP+DTAU(1)*DTAU(1)/6.0_LDP
	      E2=DTAU(1)*0.5+DTAU(1)*DTAU(1)/6.0D0

	      E3=DTAU(1)*0.5_LDP-DTAU(1)*DTAU(1)/3.0_LDP
	      E3=DTAU(1)*0.5-DTAU(1)*DTAU(1)/3.0D0

            AV(1)=0.5_LDP*(IBOUND+AV(2)*E1+SOURCE(1)*E2+SOURCE(2)*E3)
            AV(1)=0.5*(IBOUND+AV(2)*E1+SOURCE(1)*E2+SOURCE(2)*E3)

            TB(2)=0.0_LDP
            TB(2)=0.0D0

	      GAM(I)=GAMH(I)/ABS(1.0_LDP+Z(I)*Z(I)/R(I)/R(I)*SIGMA(I))
	      GAM(I)=GAMH(I)/ABS(1.0D0+Z(I)*Z(I)/R(I)/R(I)*SIGMA(I))

	    TA(1)=0.0_LDP
	    TA(1)=0.0D0

	    TB(1)=1.0_LDP
	    TB(1)=1.0D0

	      TC(I)=1.0_LDP/DTAU(I)
	      TC(I)=1.0D0/DTAU(I)

	      TB(I)=0.5_LDP*(DTAU(I-1)+DTAU(I))
	      TB(I)=0.5D0*(DTAU(I-1)+DTAU(I))

	      AV(I)=-SOURCE(I)*(DTAU(I-1)+DTAU(I))*0.5_LDP
	      AV(I)=-SOURCE(I)*(DTAU(I-1)+DTAU(I))*0.5D0

	      TB(NI)=-DTAU(NI-1)/2.0_LDP
	      TB(NI)=-DTAU(NI-1)/2.0D0

	      AV(NI)=0.5_LDP*DTAU(NI-1)*SOURCE(NI)
	      AV(NI)=0.5D0*DTAU(NI-1)*SOURCE(NI)

	      TB(NI)=0.0_LDP
	      TB(NI)=0.0D0

	      TB(NI)=-1.0_LDP
	      TB(NI)=-1.0D0

	      TB(NI)=-0.5_LDP*DTAU(NI-1)
	      TB(NI)=-0.5D0*DTAU(NI-1)

	      AV(NI)=0.5_LDP*DTAU(NI-1)*SOURCE(NI)
	      AV(NI)=0.5D0*DTAU(NI-1)*SOURCE(NI)

	    TC(NI)=0.0_LDP
	    TC(NI)=0.0D0

	        TB(NI)=0.0_LDP            !Hollow core and zero_flux options.
	        TB(NI)=0.0D0            !Hollow core and zero_flux options.

	      TB(NI)=0.0_LDP		!Symmetry
	      TB(NI)=0.0D0		!Symmetry

	    DTAU(I)=DTAU(I-1)+0.5_LDP*(NOES(I-1)+NOES(I))*(Z(I-1)-Z(I))
	    DTAU(I)=DTAU(I-1)+0.5D0*(NOES(I-1)+NOES(I))*(Z(I-1)-Z(I))

	      T3=0.0_LDP
	      T3=0.0D0

	      T4=0.0_LDP
	      T4=0.0D0

	1         +0.5_LDP*T2*AQW(I,LS)
	1         +0.5D0*T2*AQW(I,LS)

	CONT_FLUX=CONT_FLUX*R(1)*R(1)*13.19868_LDP
	CONT_FLUX=CONT_FLUX*R(1)*R(1)*13.19868

	T1=13.19868_LDP*(2.997924E-12_LDP/FL/FL)/CONT_FLUX
	T1=13.19868*(2.997924D-12/FL/FL)/CONT_FLUX

	EW=0.0_LDP
	EW=0.0D0

	1      +LOG(R(I)/R(I+1))*(T2-T1)/6.0_LDP )
	1      +LOG(R(I)/R(I+1))*(T2-T1)/6.0 )

	1            +LOG(R(ND-1)/R(ND))*(T2-T1)/6.0_LDP )
	1            +LOG(R(ND-1)/R(ND))*(T2-T1)/6.0 )

	EW=EW*0.5_LDP
	EW=EW*0.5D0

	T1=16.0E+20_LDP*(3.14159_LDP)**2/RLUM/3.845E+33_LDP
	T1=16.0D+20*(3.14159)**2/RLUM/3.845D+33


sobew_grad_v3.f

	  EMISS_LINE_FLUX(I)=0.0_LDP
	  EMISS_LINE_FLUX(I)=0.0D0

	  LINE_FLUX(I)=0.0_LDP
	  LINE_FLUX(I)=0.0D0

	  GAMH(I)=CHIL(I)*3.0E-10_LDP*R(I)/V(I)/FL    	!C/dex(15)/dex(5)
	  GAMH(I)=CHIL(I)*3.0D-10*R(I)/V(I)/FL    	!C/dex(15)/dex(5)

	EW=0.0_LDP
	EW=0.0D0

	CONT_FLUX=0.0_LDP
	CONT_FLUX=0.0D0

	GLINE(1:ND)=0.0_LDP
	GLINE(1:ND)=0.0D0

	JFLUX=0.0_LDP
	JFLUX=0.0D0

	    GAMH(I)=0.0_LDP
	    GAMH(I)=0.0D0

	      TOR=CHI(1)*R(1)*R(1)*(1.570796_LDP-ACOS(P(LS)/R(1)))/P(LS)
	      TOR=CHI(1)*R(1)*R(1)*(1.570796-ACOS(P(LS)/R(1)))/P(LS)

	    IBOUND=SOURCE(1)*(1.0_LDP-EXP(-TOR))
	    IBOUND=SOURCE(1)*(1.0D0-EXP(-TOR))

	    TB(1)=0.0_LDP			!Flux at grid point.
	    TB(1)=0.0D0			!Flux at grid point.

	    E2=1.0_LDP-(1.0_LDP-E1)/DTAU(1)
	    E2=1.0D0-(1.0D0-E1)/DTAU(1)

	    E3=(1.0_LDP-E1)/DTAU(1)-E1
	    E3=(1.0D0-E1)/DTAU(1)-E1

	    IF(DTAU(1) .LT. 1.0E-03_LDP)THEN
	    IF(DTAU(1) .LT. 1.0D-03)THEN

	      E2=DTAU(1)*0.5_LDP+DTAU(1)*DTAU(1)/6.0_LDP
	      E2=DTAU(1)*0.5+DTAU(1)*DTAU(1)/6.0D0

	      E3=DTAU(1)*0.5_LDP-DTAU(1)*DTAU(1)/3.0_LDP
	      E3=DTAU(1)*0.5-DTAU(1)*DTAU(1)/3.0D0

            AV(1)=0.5_LDP*(IBOUND+AV(2)*E1+SOURCE(1)*E2+SOURCE(2)*E3)
            AV(1)=0.5*(IBOUND+AV(2)*E1+SOURCE(1)*E2+SOURCE(2)*E3)

            TB(2)=0.0_LDP
            TB(2)=0.0D0

	      GAM(I)=GAMH(I)/ABS(1.0_LDP+Z(I)*Z(I)/R(I)/R(I)*SIGMA(I))
	      GAM(I)=GAMH(I)/ABS(1.0D0+Z(I)*Z(I)/R(I)/R(I)*SIGMA(I))

	    TA(1)=0.0_LDP
	    TA(1)=0.0D0

	    TB(1)=1.0_LDP
	    TB(1)=1.0D0

	      TC(I)=1.0_LDP/DTAU(I)
	      TC(I)=1.0D0/DTAU(I)

	      TB(I)=0.5_LDP*(DTAU(I-1)+DTAU(I))
	      TB(I)=0.5D0*(DTAU(I-1)+DTAU(I))

	      AV(I)=-SOURCE(I)*(DTAU(I-1)+DTAU(I))*0.5_LDP
	      AV(I)=-SOURCE(I)*(DTAU(I-1)+DTAU(I))*0.5D0

	      TB(NI)=-DTAU(NI-1)/2.0_LDP
	      TB(NI)=-DTAU(NI-1)/2.0D0

	      AV(NI)=0.5_LDP*DTAU(NI-1)*SOURCE(NI)
	      AV(NI)=0.5D0*DTAU(NI-1)*SOURCE(NI)

	      TB(NI)=0.0_LDP
	      TB(NI)=0.0D0

	      TB(NI)=-1.0_LDP
	      TB(NI)=-1.0D0

	      TB(NI)=-0.5_LDP*DTAU(NI-1)
	      TB(NI)=-0.5D0*DTAU(NI-1)

	      AV(NI)=0.5_LDP*DTAU(NI-1)*SOURCE(NI)
	      AV(NI)=0.5D0*DTAU(NI-1)*SOURCE(NI)

	    TC(NI)=0.0_LDP
	    TC(NI)=0.0D0

	        TB(NI)=0.0_LDP            !Hollow core and zero_flux options.
	        TB(NI)=0.0D0            !Hollow core and zero_flux options.

	      TB(NI)=0.0_LDP		!Symmetry
	      TB(NI)=0.0D0		!Symmetry

	    DTAU(I)=DTAU(I-1)+0.5_LDP*(NOES(I-1)+NOES(I))*(Z(I-1)-Z(I))
	    DTAU(I)=DTAU(I-1)+0.5D0*(NOES(I-1)+NOES(I))*(Z(I-1)-Z(I))

	      T3=0.0_LDP
	      T3=0.0D0

	      T4=0.0_LDP
	      T4=0.0D0

	1         +0.5_LDP*T2*AQW(I,LS)
	1         +0.5D0*T2*AQW(I,LS)

	    EMISS_LINE_FLUX(I)=EMISS_LINE_FLUX(I)+0.5_LDP*T2*AQW(I,LS)*(T3+T4)
	    EMISS_LINE_FLUX(I)=EMISS_LINE_FLUX(I)+0.5D0*T2*AQW(I,LS)*(T3+T4)

	CONT_FLUX=CONT_FLUX*R(1)*R(1)*13.19868_LDP
	CONT_FLUX=CONT_FLUX*R(1)*R(1)*13.19868

	T1=13.19868_LDP*(2.997924E-12_LDP/FL/FL)/CONT_FLUX
	T1=13.19868*(2.997924D-12/FL/FL)/CONT_FLUX

	EW=0.0_LDP
	EW=0.0D0

	1      +LOG(R(I)/R(I+1))*(T2-T1)/6.0_LDP )
	1      +LOG(R(I)/R(I+1))*(T2-T1)/6.0 )

	1            +LOG(R(ND-1)/R(ND))*(T2-T1)/6.0_LDP )
	1            +LOG(R(ND-1)/R(ND))*(T2-T1)/6.0 )

	EW=EW*0.5_LDP
	EW=EW*0.5D0

	EMISS_EW=0.0_LDP
	EMISS_EW=0.0D0

	1      +LOG(R(I)/R(I+1))*(T2-T1)/6.0_LDP )
	1      +LOG(R(I)/R(I+1))*(T2-T1)/6.0 )

	1            +LOG(R(ND-1)/R(ND))*(T2-T1)/6.0_LDP )
	1            +LOG(R(ND-1)/R(ND))*(T2-T1)/6.0 )

	EMISS_EW=EMISS_EW*0.5_LDP
	EMISS_EW=EMISS_EW*0.5D0

	T1=16.0E+20_LDP*(3.14159_LDP)**2/RLUM/3.845E+33_LDP
	T1=16.0D+20*(3.14159)**2/RLUM/3.845D+33


sobjbar_sim.f

	  JBAR(I)=0.0_LDP
	  JBAR(I)=0.0D0

	  BETA(I)=0.0_LDP
	  BETA(I)=0.0D0

	  GAMH(I)=CHIL(I)*3.0E-10_LDP*R(I)/V(I)/FL    	!C/dex(15)/dex(5)
	  GAMH(I)=CHIL(I)*3.0D-10*R(I)/V(I)/FL    	!C/dex(15)/dex(5)

	  ZNET_BL(I)=0.0_LDP
	  ZNET_BL(I)=0.0D0

	  VB_BL(I)=0.0_LDP
	  VB_BL(I)=0.0D0

	  VC_BL(I)=0.0_LDP
	  VC_BL(I)=0.0D0

	  BETAC_BL(I)=0.0_LDP
	  BETAC_BL(I)=0.0D0

	  AV(1:NI)=0.0_LDP
	  AV(1:NI)=0.0D0

	    GAM(I)=GAMH(I)/ABS(1.0_LDP+Z(I)*Z(I)/R(I)/R(I)*SIGMA(I))
	    GAM(I)=GAMH(I)/ABS(1.0D0+Z(I)*Z(I)/R(I)/R(I)*SIGMA(I))

	      TOR=CHI(1)*R(1)*R(1)*(1.570796_LDP-ACOS(P(LS)/R(1)))/P(LS)
	      TOR=CHI(1)*R(1)*R(1)*(1.570796-ACOS(P(LS)/R(1)))/P(LS)

	    IBOUND=SOURCE(1)*(1.0_LDP-EXP(-TOR))
	    IBOUND=SOURCE(1)*(1.0D0-EXP(-TOR))

	    E2=1.0_LDP-(1.0_LDP-E1)/DTAU(1)
	    E2=1.0D0-(1.0D0-E1)/DTAU(1)

	    E3=(1.0_LDP-E1)/DTAU(1)-E1
	    E3=(1.0D0-E1)/DTAU(1)-E1

	    IF(DTAU(1) .LT. 1.0E-03_LDP)THEN
	    IF(DTAU(1) .LT. 1.0D-03)THEN

	      E2=DTAU(1)*0.5_LDP+DTAU(1)*DTAU(1)/6.0_LDP
	      E2=DTAU(1)*0.5+DTAU(1)*DTAU(1)/6.0D0

	      E3=DTAU(1)*0.5_LDP-DTAU(1)*DTAU(1)/3.0_LDP
	      E3=DTAU(1)*0.5-DTAU(1)*DTAU(1)/3.0D0

            AV(1)=0.5_LDP*(IBOUND+AV(2)*E1+SOURCE(1)*E2+SOURCE(2)*E3)
            AV(1)=0.5*(IBOUND+AV(2)*E1+SOURCE(1)*E2+SOURCE(2)*E3)

	    T1=1.0_LDP-T2
	    T1=1.0D0-T2

	    ZNET(I,J)=ST_ON_SL*ZNET_BL(I)+(1.0_LDP-ST_ON_SL)
	    ZNET(I,J)=ST_ON_SL*ZNET_BL(I)+(1.0D0-ST_ON_SL)

            VB(I,J)=ST_ON_SL*( VB_BL(I)+(ZNET_BL(I)-1.0_LDP)*
            VB(I,J)=ST_ON_SL*( VB_BL(I)+(ZNET_BL(I)-1.0D0)*

	1                      (1.0_LDP/CHIL_MAT(I,J)-1.0_LDP/CHIL(I)) )
	1                      (1.0D0/CHIL_MAT(I,J)-1.0D0/CHIL(I)) )

            VC(I,J)=ST_ON_SL*( VC_BL(I)+(ZNET_BL(I)-1.0_LDP)*
            VC(I,J)=ST_ON_SL*( VC_BL(I)+(ZNET_BL(I)-1.0D0)*

	1                      (BBCOR(I,J)/ETAL(I)-1.0_LDP/ETAL_MAT(I,J)) )
	1                      (BBCOR(I,J)/ETAL(I)-1.0D0/ETAL_MAT(I,J)) )

          VB_2(I)=VB_BL(I)-(ZNET_BL(I)-1.0_LDP)/CHIL(I)
          VB_2(I)=VB_BL(I)-(ZNET_BL(I)-1.0D0)/CHIL(I)

          VC_2(I)=VC_BL(I)+(ZNET_BL(I)-1.0_LDP)/ETAL(I)
          VC_2(I)=VC_BL(I)+(ZNET_BL(I)-1.0D0)/ETAL(I)

	  JBAR(I)=(1.0_LDP-ZNET_BL(I))*ETAL(I)/CHIL(I)
	  JBAR(I)=(1.0D0-ZNET_BL(I))*ETAL(I)/CHIL(I)


solveba_v2.f

	BIG_LIM=(CHANGE_LIM-1.0_LDP)/CHANGE_LIM
	BIG_LIM=(CHANGE_LIM-1.0D0)/CHANGE_LIM

	MINSCALE=1.0_LDP
	MINSCALE=1.0D0

	    T1=0.2_LDP
	    T1=0.2D0

	      POPS(J,I)=POPS(J,I)*(1.0_LDP-STEQ(J,I)*SCALE)
	      POPS(J,I)=POPS(J,I)*(1.0D0-STEQ(J,I)*SCALE)

	        POPS(J,I)=POPS(J,I)*(1.0_LDP-BIG_LIM)
	        POPS(J,I)=POPS(J,I)*(1.0D0-BIG_LIM)

	        POPS(J,I)=POPS(J,I)*(1.0_LDP-LIT_LIM)
	        POPS(J,I)=POPS(J,I)*(1.0D0-LIT_LIM)

	        POPS(J,I)=POPS(J,I)*(1.0_LDP-STEQ(J,I))
	        POPS(J,I)=POPS(J,I)*(1.0D0-STEQ(J,I))

	    SCALE=0.2_LDP/MAX( 0.2_LDP,ABS(STEQ(NT,I)) )
	    SCALE=0.2D0/MAX( 0.2D0,ABS(STEQ(NT,I)) )

	    POPS(NT,I)=POPS(NT,I)*(1.0_LDP-STEQ(NT,I)*SCALE)
	    POPS(NT,I)=POPS(NT,I)*(1.0D0-STEQ(NT,I)*SCALE)

	      IF(POPS(J,I) .GT. 1.0E-10_LDP*POPS(NT-1,I))THEN
	      IF(POPS(J,I) .GT. 1.0E-10*POPS(NT-1,I))THEN

	    T3=MAX( 0.2_LDP,ABS(STEQ(NT,I)) )
	    T3=MAX( 0.2D0,ABS(STEQ(NT,I)) )

	    SCALE=MIN( 0.2_LDP/T3,SCALE )
	    SCALE=MIN( 0.2D0/T3,SCALE )

	      POPS(J,I)=POPS(J,I)*(1.0_LDP-T1)
	      POPS(J,I)=POPS(J,I)*(1.0D0-T1)

	  T3=MAX( 0.2_LDP,ABS(STEQ(NT,I)) )
	  T3=MAX( 0.2D0,ABS(STEQ(NT,I)) )

	  SCALE=MIN( 0.2_LDP/T3,SCALE )
	  SCALE=MIN( 0.2D0/T3,SCALE )

	      POPS(J,I)=POPS(J,I)*(1.0_LDP-STEQ(J,I)*SCALE)
	      POPS(J,I)=POPS(J,I)*(1.0D0-STEQ(J,I)*SCALE)

	DECREASE=0.0_LDP
	DECREASE=0.0D0

	INCREASE=0.0_LDP
	INCREASE=0.0D0

	DECREASE=100.0_LDP*DECREASE
	DECREASE=100.0D0*DECREASE

	INCREASE=100.0_LDP*INCREASE
	INCREASE=100.0D0*INCREASE

	IF(DECREASE .LT. 99.999_LDP)THEN
	IF(DECREASE .LT. 99.999D0)THEN

	  DECREASE=100.0_LDP*DECREASE/(100.0_LDP-DECREASE)
	  DECREASE=100.0D0*DECREASE/(100.0D0-DECREASE)

	  DECREASE=1.0E+07_LDP
	  DECREASE=1.0D+07


solveba_v3.f

	BIG_LIM=(CHANGE_LIM-1.0_LDP)/CHANGE_LIM
	BIG_LIM=(CHANGE_LIM-1.0D0)/CHANGE_LIM

	MINSCALE=1.0_LDP
	MINSCALE=1.0D0

	    T1=0.2_LDP
	    T1=0.2D0

	      POPS(J,I)=POPS(J,I)*(1.0_LDP-STEQ(J,I)*SCALE)
	      POPS(J,I)=POPS(J,I)*(1.0D0-STEQ(J,I)*SCALE)

	        POPS(J,I)=POPS(J,I)*(1.0_LDP-BIG_LIM)
	        POPS(J,I)=POPS(J,I)*(1.0D0-BIG_LIM)

	        POPS(J,I)=POPS(J,I)*(1.0_LDP-LIT_LIM)
	        POPS(J,I)=POPS(J,I)*(1.0D0-LIT_LIM)

	        POPS(J,I)=POPS(J,I)*(1.0_LDP-STEQ(J,I))
	        POPS(J,I)=POPS(J,I)*(1.0D0-STEQ(J,I))

	    SCALE=0.2_LDP/MAX( 0.2_LDP,ABS(STEQ(NT,I)) )
	    SCALE=0.2D0/MAX( 0.2D0,ABS(STEQ(NT,I)) )

	    POPS(NT,I)=POPS(NT,I)*(1.0_LDP-STEQ(NT,I)*SCALE)
	    POPS(NT,I)=POPS(NT,I)*(1.0D0-STEQ(NT,I)*SCALE)

	      IF(POPS(J,I) .GT. 1.0E-10_LDP*POPS(NT-1,I))THEN
	      IF(POPS(J,I) .GT. 1.0E-10*POPS(NT-1,I))THEN

	    T3=MAX( 0.2_LDP,ABS(STEQ(NT,I)) )
	    T3=MAX( 0.2D0,ABS(STEQ(NT,I)) )

	    SCALE=MIN( 0.2_LDP/T3,SCALE )
	    SCALE=MIN( 0.2D0/T3,SCALE )

	      POPS(J,I)=POPS(J,I)*(1.0_LDP-T1)
	      POPS(J,I)=POPS(J,I)*(1.0D0-T1)

	  T3=MAX( 0.2_LDP,ABS(STEQ(NT,I)) )
	  T3=MAX( 0.2D0,ABS(STEQ(NT,I)) )

	  SCALE=MIN( 0.2_LDP/T3,SCALE )
	  SCALE=MIN( 0.2D0/T3,SCALE )

	      POPS(J,I)=POPS(J,I)*(1.0_LDP-STEQ(J,I)*SCALE)
	      POPS(J,I)=POPS(J,I)*(1.0D0-STEQ(J,I)*SCALE)

	DECREASE=0.0_LDP
	DECREASE=0.0D0

	INCREASE=0.0_LDP
	INCREASE=0.0D0

	DECREASE=100.0_LDP*DECREASE
	DECREASE=100.0D0*DECREASE

	INCREASE=100.0_LDP*INCREASE
	INCREASE=100.0D0*INCREASE

	IF(DECREASE .LT. 99.999_LDP)THEN
	IF(DECREASE .LT. 99.999D0)THEN

	  DECREASE=100.0_LDP*DECREASE/(100.0_LDP-DECREASE)
	  DECREASE=100.0D0*DECREASE/(100.0D0-DECREASE)

	  DECREASE=1.0E+07_LDP
	  DECREASE=1.0D+07


specfy_it_cycle.f


specify_it_cycle_v2.f


specify_it_cycle_v3.f


starfin.f

	VF1=0.5_LDP*(1.0_LDP+EPS1+GAM1)*VINF1
	VF1=0.5D0*(1.0D0+EPS1+GAM1)*VINF1

	VF2=0.5_LDP*(1.0_LDP+EPS2+GAM2)*VINF2
	VF2=0.5D0*(1.0D0+EPS2+GAM2)*VINF2

	T4=VF1/VRP1-1.0_LDP
	T4=VF1/VRP1-1.0D0

	T1=0.69314718_LDP
	T1=0.69314718

	  ALPHA1=-LOG(0.5_LDP+(GAM1/2.0_LDP-0.5_LDP-GAM1*EXP(-BETA1))/EPS1)
	  ALPHA1=-LOG(0.5+(GAM1/2.0D0-0.5D0-GAM1*EXP(-BETA1))/EPS1)

	  IF(ABS(BETA1-T2)/BETA1+ABS(ALPHA1-T1)/ALPHA1 .LT. 0.0001_LDP)
	  IF(ABS(BETA1-T2)/BETA1+ABS(ALPHA1-T1)/ALPHA1 .LT. 0.0001)

	  T3=RN1/TA(I)-1.0_LDP
	  T3=RN1/TA(I)-1.0D0

	  V(I)=VF1/(1.0_LDP+EPS1*EXP(ALPHA1*T3)+GAM1*EXP(BETA1*T3))
	  V(I)=VF1/(1.0+EPS1*EXP(ALPHA1*T3)+GAM1*EXP(BETA1*T3))

	  V(I)=V(I)*(1.0_LDP+X*(1.0_LDP-0.999_LDP*(RP1/TA(I))**Y)**Z)
	  V(I)=V(I)*(1.0D0+X*(1.0D0-0.999D0*(RP1/TA(I))**Y)**Z)

	T1=TB(1)*TA(1)/3.0_LDP
	T1=TB(1)*TA(1)/3.0D0

	TA(ND-1)=TA(ND)+(R(MND-1)-R(MND))/50.0_LDP
	TA(ND-1)=TA(ND)+(R(MND-1)-R(MND))/50.0D0

	  T1=EPS1*EXP(ALPHA1*(RN1/R(I)-1.0_LDP))
	  T1=EPS1*EXP(ALPHA1*(RN1/R(I)-1.0D0))

	  T2=GAM1*EXP(BETA1*(RN1/R(I)-1.0_LDP))
	  T2=GAM1*EXP(BETA1*(RN1/R(I)-1.0D0))

	  TA(I)=VF1/(1.0_LDP+T1+T2)
	  TA(I)=VF1/(1.0D0+T1+T2)

	  TB(I)=1.0_LDP+X*(1.0_LDP-0.999_LDP*(RP1/R(I))**Y)**Z
	  TB(I)=1.0D0+X*(1.0D0-0.999D0*(RP1/R(I))**Y)**Z

	1 /(1.0_LDP+T1+T2)**2+
	1 /(1.0D0+T1+T2)**2.0+

	1 TA(I)*X*Y*Z*0.999_LDP/RP1*(1.0_LDP-0.999_LDP*(RP1/R(I))**Y)**(Z-1)
	1 TA(I)*X*Y*Z*0.999D0/RP1*(1.0D0-0.999D0*(RP1/R(I))**Y)**(Z-1)

	1 *(RP1/R(I))**(Y+1))*R(I)/V(I)-1.0_LDP
	1 *(RP1/R(I))**(Y+1))*R(I)/V(I)-1.0D0


starnew.f

	VF1=0.5_LDP*(1.0_LDP+EPS1+GAM1)*VINF1
	VF1=0.5D0*(1.0D0+EPS1+GAM1)*VINF1

	VF2=0.5_LDP*(1.0_LDP+EPS2+GAM2)*VINF2
	VF2=0.5D0*(1.0D0+EPS2+GAM2)*VINF2

	T4=VF1/VRP1-1.0_LDP
	T4=VF1/VRP1-1.0D0

	T1=0.69314718_LDP
	T1=0.69314718

	  ALPHA1=-LOG(0.5_LDP+(GAM1/2.0_LDP-0.5_LDP-GAM1*EXP(-BETA1))/EPS1)
	  ALPHA1=-LOG(0.5+(GAM1/2.0D0-0.5D0-GAM1*EXP(-BETA1))/EPS1)

	  IF(ABS(BETA1-T2)/BETA1+ABS(ALPHA1-T1)/ALPHA1 .LT. 0.0001_LDP)
	  IF(ABS(BETA1-T2)/BETA1+ABS(ALPHA1-T1)/ALPHA1 .LT. 0.0001)

	T4=VF2/VRP2-1.0_LDP
	T4=VF2/VRP2-1.0D0

	T1=0.69314718_LDP
	T1=0.69314718

	  ALPHA2=-LOG(0.5_LDP+(GAM2/2.0_LDP-0.5_LDP-GAM2*EXP(-BETA2))/EPS2)
	  ALPHA2=-LOG(0.5+(GAM2/2.0D0-0.5D0-GAM2*EXP(-BETA2))/EPS2)

	  IF(ABS(BETA2-T2)/BETA2+ABS(ALPHA2-T1)/ALPHA2 .LT. 0.0001_LDP)
	  IF(ABS(BETA2-T2)/BETA2+ABS(ALPHA2-T1)/ALPHA2 .LT. 0.0001)

	  T3=RN1/TA(I)-1.0_LDP
	  T3=RN1/TA(I)-1.0D0

	  V(I)=VF1/(1.0_LDP+EPS1*EXP(ALPHA1*T3)+GAM1*EXP(BETA1*T3))
	  V(I)=VF1/(1.0+EPS1*EXP(ALPHA1*T3)+GAM1*EXP(BETA1*T3))

	  T3=RN2/TA(I)-1.0_LDP
	  T3=RN2/TA(I)-1.0D0

	  V(I)=V(I)+VF2/(1.0_LDP+EPS2*EXP(ALPHA2*T3)+T4)
	  V(I)=V(I)+VF2/(1.0+EPS2*EXP(ALPHA2*T3)+T4)

	TA(ND-1)=TA(ND)+(R(MND-1)-R(MND))/50.0_LDP
	TA(ND-1)=TA(ND)+(R(MND-1)-R(MND))/50.0D0

	  T1=EPS1*EXP(ALPHA1*(RN1/R(I)-1.0_LDP))
	  T1=EPS1*EXP(ALPHA1*(RN1/R(I)-1.0))

	  T2=GAM1*EXP(BETA1*(RN1/R(I)-1.0_LDP))
	  T2=GAM1*EXP(BETA1*(RN1/R(I)-1.0))

	  T3=ALPHA2*(RN2/R(I)-1.0_LDP)
	  T3=ALPHA2*(RN2/R(I)-1.0)

	  T4=BETA2*(RN2/R(I)-1.0_LDP)
	  T4=BETA2*(RN2/R(I)-1.0)

	  TA(I)=VF1/(1.0_LDP+T1+T2)
	  TA(I)=VF1/(1.0+T1+T2)

	  TB(I)=VF2/(1.0_LDP+T3+T4)
	  TB(I)=VF2/(1.0+T3+T4)

	1 /(1.0_LDP+T1+T2)**2+
	1 /(1.0D0+T1+T2)**2+

	1 (1.0_LDP+T3+T4))/(1.0_LDP+T3+T4))/R(I)/V(I)-1.0_LDP
	1 (1.0D0+T3+T4))/(1.0D0+T3+T4))/R(I)/V(I)-1.0D0


starpcyg.f

	BETA=(VPHOT/VCORE-1.0_LDP)
	BETA=(VPHOT/VCORE-1.0D0)

	    TA(I)=VPHOT+(VINF-VPHOT)*(1.0_LDP-RP/R(I))**GAMMA
	    TA(I)=VPHOT+(VINF-VPHOT)*(1.0D0-RP/R(I))**GAMMA

	    TB(I)=1.0_LDP+BETA*EXP((RP-R(I))/SCLHT)
	    TB(I)=1.0D0+BETA*EXP((RP-R(I))/SCLHT)

	    SIGMA(I)=GAMMA*(VINF-VPHOT)*(1.0_LDP-RP/R(I))**(GAMMA-1)
	    SIGMA(I)=GAMMA*(VINF-VPHOT)*(1.0D0-RP/R(I))**(GAMMA-1)

	1          +BETA*EXP((RP-R(I))/SCLHT)*(R(I)/SCLHT/TB(I))-1.0_LDP
	1          +BETA*EXP((RP-R(I))/SCLHT)*(R(I)/SCLHT/TB(I))-1.0D0

	  SIGMA(ND)=GAMMA*(VINF/VPHOT-1.0_LDP) +
	  SIGMA(ND)=GAMMA*(VINF/VPHOT-1.0D0) +

	1                BETA*RP/SCLHT/(1.0_LDP+BETA)-1.0_LDP
	1                BETA*RP/SCLHT/(1.0D0+BETA)-1.0D0

	  V(I)=VPHOT+(VINF-VPHOT)*(1.0_LDP-RP/TA(I))**GAMMA
	  V(I)=VPHOT+(VINF-VPHOT)*(1.0D0-RP/TA(I))**GAMMA

	  V(I)=V(I)/(1.0_LDP+BETA*EXP((RP-TA(I))/SCLHT))
	  V(I)=V(I)/(1.0D0+BETA*EXP((RP-TA(I))/SCLHT))

	  T1=TB(1)*TA(1)/3.0_LDP
	  T1=TB(1)*TA(1)/3.0D0

	  TA(ND-1)=TA(ND)+(R(MND-1)-R(MND))/20.0_LDP
	  TA(ND-1)=TA(ND)+(R(MND-1)-R(MND))/20.0D0

	    TA(I)=VPHOT+(VINF-VPHOT)*(1.0_LDP-RP/R(I))**GAMMA
	    TA(I)=VPHOT+(VINF-VPHOT)*(1.0D0-RP/R(I))**GAMMA

	    TB(I)=1.0_LDP+BETA*EXP((RP-R(I))/SCLHT)
	    TB(I)=1.0D0+BETA*EXP((RP-R(I))/SCLHT)

	    SIGMA(I)=GAMMA*(VINF-VPHOT)*(1.0_LDP-RP/R(I))**(GAMMA-1)
	    SIGMA(I)=GAMMA*(VINF-VPHOT)*(1.0D0-RP/R(I))**(GAMMA-1)

	1          +BETA*EXP((RP-R(I))/SCLHT)*(R(I)/SCLHT/TB(I))-1.0_LDP
	1          +BETA*EXP((RP-R(I))/SCLHT)*(R(I)/SCLHT/TB(I))-1.0D0

	  SIGMA(ND)=GAMMA*(VINF/VPHOT-1.0_LDP) +
	  SIGMA(ND)=GAMMA*(VINF/VPHOT-1.0D0) +

	1                BETA*RP/SCLHT/(1.0_LDP+BETA)-1.0_LDP
	1                BETA*RP/SCLHT/(1.0D0+BETA)-1.0D0

	    TB(I)=(1E+10/(TA(I)*TA(I)*V(I)))**2	    !Opacity
	    TB(I)=(1E+10/(TA(I)*TA(I)*V(I)))**2.0	    !Opacity


starpcyg_v2.f

	IF(VEXT .LT. 1.0E-06_LDP*VINF1)VEXT=0.0_LDP
	IF(VEXT .LT. 1.0D-06*VINF1)VEXT=0.0D0

	IF(BETA1 .LT. 1.0_LDP .AND. EPS1 .GE. 1.0_LDP)THEN
	IF(BETA1 .LT. 1.0D0 .AND. EPS1 .GE. 1.0D0)THEN

	IF(BETA2 .LT. 1.0_LDP .AND. EPS2 .GE. 1.0_LDP)THEN
	IF(BETA2 .LT. 1.0D0 .AND. EPS2 .GE. 1.0D0)THEN

	IF(EPS1 .LT. 0.5_LDP .OR. EPS1 .GT. 1.0_LDP)THEN
	IF(EPS1 .LT. 0.5 .OR. EPS1 .GT. 1.0D0)THEN

	IF(EPS2 .LT. 0.5_LDP .OR. EPS2 .GT. 1.0_LDP)THEN
	IF(EPS2 .LT. 0.5 .OR. EPS2 .GT. 1.0D0)THEN

	IF(EPS1 .EQ. 1.0_LDP .AND. EPS2 .EQ. 1.0_LDP)THEN
	IF(EPS1 .EQ. 1.0D0 .AND. EPS2 .EQ. 1.0D0)THEN

	  V_RAT=VPHOT/VCORE - 1.0_LDP
	  V_RAT=VPHOT/VCORE - 1.0D0

	ELSE IF(EPS1 .EQ. 1.0_LDP)THEN
	ELSE IF(EPS1 .EQ. 1.0D0)THEN

	  V_RAT=( VPHOT+VEXT*((1-EPS2)**BETA2) )/VCORE - 1.0_LDP
	  V_RAT=( VPHOT+VEXT*((1-EPS2)**BETA2) )/VCORE - 1.0D0

	ELSE IF(EPS2 .EQ. 1.0_LDP)THEN
	ELSE IF(EPS2 .EQ. 1.0D0)THEN

	1              VEXT*(1-EPS2)**BETA2 )/VCORE -1.0_LDP
	1              VEXT*(1-EPS2)**BETA2 )/VCORE -1.0D0

	    TA(I)=VPHOT+(VINF1-VPHOT)*(1.0_LDP-RP1/R(I))**BETA1 +
	    TA(I)=VPHOT+(VINF1-VPHOT)*(1.0D0-RP1/R(I))**BETA1 +

	1               VEXT*(1.0_LDP-RP2/R(I))**BETA2
	1               VEXT*(1.0D0-RP2/R(I))**BETA2

	    TB(I)=1.0_LDP+V_RAT*EXP((RP-R(I))/SCLHT)
	    TB(I)=1.0D0+V_RAT*EXP((RP-R(I))/SCLHT)

	    SIGMA(I)=(RP1*BETA1*(VINF1-VPHOT)*(1.0_LDP-RP1/R(I))**(BETA1-1) +
	    SIGMA(I)=(RP1*BETA1*(VINF1-VPHOT)*(1.0D0-RP1/R(I))**(BETA1-1) +

	1             RP2*BETA2*VEXT*(1.0_LDP-RP2/R(I))**(BETA2-1) )
	1             RP2*BETA2*VEXT*(1.0D0-RP2/R(I))**(BETA2-1) )

	1          +V_RAT*EXP((RP-R(I))/SCLHT)*(R(I)/SCLHT/TB(I))-1.0_LDP
	1          +V_RAT*EXP((RP-R(I))/SCLHT)*(R(I)/SCLHT/TB(I))-1.0D0

	  IF(BETA1 .EQ. 1.0_LDP)THEN
	  IF(BETA1 .EQ. 1.0D0)THEN

	  ELSE IF(EPS1 .EQ. 1.0_LDP)THEN
	  ELSE IF(EPS1 .EQ. 1.0D0)THEN

	    SIGMA(ND)=0.0_LDP		!Our checks ensure BETA1 >1 in this case.
	    SIGMA(ND)=0.0D0		!Our checks ensure BETA1 >1 in this case.

	  IF(BETA2 .EQ. 1.0_LDP)THEN
	  IF(BETA2 .EQ. 1.0D0)THEN

	    TA(ND)=TA(ND)+VEXT*(1.0_LDP-EPS2)
	    TA(ND)=TA(ND)+VEXT*(1.0D0-EPS2)

	  ELSE IF(EPS2 .EQ. 1.0_LDP)THEN
	  ELSE IF(EPS2 .EQ. 1.0D0)THEN

	    TA(ND)=TA(ND)+VEXT*( (1.0_LDP-EPS2)**BETA2 )
	    TA(ND)=TA(ND)+VEXT*( (1.0D0-EPS2)**BETA2 )

	  SIGMA(ND)=SIGMA(ND)/TA(ND)+V_RAT*RP/SCLHT/(1.0_LDP+V_RAT)-1.0_LDP
	  SIGMA(ND)=SIGMA(ND)/TA(ND)+V_RAT*RP/SCLHT/(1.0D0+V_RAT)-1.0D0

	  V(I)=VPHOT+(VINF1-VPHOT)*(1.0_LDP-RP1/TA(I))**BETA1 +
	  V(I)=VPHOT+(VINF1-VPHOT)*(1.0D0-RP1/TA(I))**BETA1 +

	1          VEXT*(1.0_LDP-RP2/TA(I))**BETA2
	1          VEXT*(1.0D0-RP2/TA(I))**BETA2

	  V(I)=V(I)/(1.0_LDP+V_RAT*EXP((RP-TA(I))/SCLHT))
	  V(I)=V(I)/(1.0D0+V_RAT*EXP((RP-TA(I))/SCLHT))

	  T1=TB(1)*TA(1)/3.0_LDP
	  T1=TB(1)*TA(1)/3.0D0

	  TA(ND-1)=TA(ND)+(R(MND-1)-R(MND))/20.0_LDP
	  TA(ND-1)=TA(ND)+(R(MND-1)-R(MND))/20.0D0

	    TA(I)=VPHOT+(VINF1-VPHOT)*(1.0_LDP-RP1/R(I))**BETA1 +
	    TA(I)=VPHOT+(VINF1-VPHOT)*(1.0D0-RP1/R(I))**BETA1 +

	1                  VEXT*(1.0_LDP-RP2/R(I))**BETA2
	1                  VEXT*(1.0D0-RP2/R(I))**BETA2

	    TB(I)=1.0_LDP+V_RAT*EXP((RP-R(I))/SCLHT)
	    TB(I)=1.0D0+V_RAT*EXP((RP-R(I))/SCLHT)

	    SIGMA(I)=(RP1*BETA1*(VINF1-VPHOT)*(1.0_LDP-RP1/R(I))**(BETA1-1) +
	    SIGMA(I)=(RP1*BETA1*(VINF1-VPHOT)*(1.0D0-RP1/R(I))**(BETA1-1) +

	1              RP2*BETA2*VEXT*(1.0_LDP-RP2/R(I))**(BETA2-1) )
	1              RP2*BETA2*VEXT*(1.0D0-RP2/R(I))**(BETA2-1) )

	1          +V_RAT*EXP((RP-R(I))/SCLHT)*(R(I)/SCLHT/TB(I))-1.0_LDP
	1          +V_RAT*EXP((RP-R(I))/SCLHT)*(R(I)/SCLHT/TB(I))-1.0D0

	  IF(BETA1 .EQ. 1.0_LDP)THEN
	  IF(BETA1 .EQ. 1.0D0)THEN

	  ELSE IF(EPS1 .EQ. 1.0_LDP)THEN
	  ELSE IF(EPS1 .EQ. 1.0D0)THEN

	    SIGMA(ND)=0.0_LDP
	    SIGMA(ND)=0.0D0

	  IF(BETA2 .EQ. 1.0_LDP)THEN
	  IF(BETA2 .EQ. 1.0D0)THEN

	    TA(ND)=TA(ND)+VEXT*(1.0_LDP-EPS2)
	    TA(ND)=TA(ND)+VEXT*(1.0D0-EPS2)

	  ELSE IF(EPS2 .EQ. 1.0_LDP)THEN
	  ELSE IF(EPS2 .EQ. 1.0D0)THEN

	    TA(ND)=TA(ND)+VEXT*( (1.0_LDP-EPS2)**BETA2 )
	    TA(ND)=TA(ND)+VEXT*( (1.0D0-EPS2)**BETA2 )

	  SIGMA(ND)=SIGMA(ND)/TA(ND)+V_RAT*RP/SCLHT/(1.0_LDP+V_RAT)-1.0_LDP
	  SIGMA(ND)=SIGMA(ND)/TA(ND)+V_RAT*RP/SCLHT/(1.0D0+V_RAT)-1.0D0

	    TB(I)=(1E+10/(TA(I)*TA(I)*V(I)))**2	    !Opacity
	    TB(I)=(1E+10/(TA(I)*TA(I)*V(I)))**2.0	    !Opacity


starpcyg_v3.f

	IF(VEXT .LT. 1.0E-06_LDP*VINF1)VEXT=0.0_LDP
	IF(VEXT .LT. 1.0D-06*VINF1)VEXT=0.0D0

	IF(BETA1 .LT. 1.0_LDP .AND. EPS1 .GE. 1.0_LDP)THEN
	IF(BETA1 .LT. 1.0D0 .AND. EPS1 .GE. 1.0D0)THEN

	IF(BETA2 .LT. 1.0_LDP .AND. EPS2 .GE. 1.0_LDP)THEN
	IF(BETA2 .LT. 1.0D0 .AND. EPS2 .GE. 1.0D0)THEN

	IF(EPS1 .LT. 0.5_LDP .OR. EPS1 .GT. 1.0_LDP)THEN
	IF(EPS1 .LT. 0.5 .OR. EPS1 .GT. 1.0D0)THEN

	IF(EPS2 .LT. 0.5_LDP .OR. EPS2 .GT. 1.0_LDP)THEN
	IF(EPS2 .LT. 0.5 .OR. EPS2 .GT. 1.0D0)THEN

	IF(EPS1 .EQ. 1.0_LDP .AND. EPS2 .EQ. 1.0_LDP)THEN
	IF(EPS1 .EQ. 1.0D0 .AND. EPS2 .EQ. 1.0D0)THEN

	  V_RAT=VPHOT/VCORE - 1.0_LDP
	  V_RAT=VPHOT/VCORE - 1.0D0

	ELSE IF(EPS1 .EQ. 1.0_LDP)THEN
	ELSE IF(EPS1 .EQ. 1.0D0)THEN

	  V_RAT=( VPHOT+VEXT*((1-EPS2)**BETA2) )/VCORE - 1.0_LDP
	  V_RAT=( VPHOT+VEXT*((1-EPS2)**BETA2) )/VCORE - 1.0D0

	ELSE IF(EPS2 .EQ. 1.0_LDP)THEN
	ELSE IF(EPS2 .EQ. 1.0D0)THEN

	1              VEXT*(1-EPS2)**BETA2 )/VCORE -1.0_LDP
	1              VEXT*(1-EPS2)**BETA2 )/VCORE -1.0D0

	    TA(I)=VPHOT+(VINF1-VPHOT)*(1.0_LDP-RP1/R(I))**BETA1 +
	    TA(I)=VPHOT+(VINF1-VPHOT)*(1.0D0-RP1/R(I))**BETA1 +

	1               VEXT*(1.0_LDP-RP2/R(I))**BETA2
	1               VEXT*(1.0D0-RP2/R(I))**BETA2

	    TB(I)=1.0_LDP+V_RAT*EXP((RP-R(I))/SCLHT)
	    TB(I)=1.0D0+V_RAT*EXP((RP-R(I))/SCLHT)

	    SIGMA(I)=(RP1*BETA1*(VINF1-VPHOT)*(1.0_LDP-RP1/R(I))**(BETA1-1) +
	    SIGMA(I)=(RP1*BETA1*(VINF1-VPHOT)*(1.0D0-RP1/R(I))**(BETA1-1) +

	1             RP2*BETA2*VEXT*(1.0_LDP-RP2/R(I))**(BETA2-1) )
	1             RP2*BETA2*VEXT*(1.0D0-RP2/R(I))**(BETA2-1) )

	1          +V_RAT*EXP((RP-R(I))/SCLHT)*(R(I)/SCLHT/TB(I))-1.0_LDP
	1          +V_RAT*EXP((RP-R(I))/SCLHT)*(R(I)/SCLHT/TB(I))-1.0D0

	  IF(BETA1 .EQ. 1.0_LDP)THEN
	  IF(BETA1 .EQ. 1.0D0)THEN

	  ELSE IF(EPS1 .EQ. 1.0_LDP)THEN
	  ELSE IF(EPS1 .EQ. 1.0D0)THEN

	    SIGMA(ND)=0.0_LDP		!Our checks ensure BETA1 >1 in this case.
	    SIGMA(ND)=0.0D0		!Our checks ensure BETA1 >1 in this case.

	  IF(BETA2 .EQ. 1.0_LDP)THEN
	  IF(BETA2 .EQ. 1.0D0)THEN

	    TA(ND)=TA(ND)+VEXT*(1.0_LDP-EPS2)
	    TA(ND)=TA(ND)+VEXT*(1.0D0-EPS2)

	  ELSE IF(EPS2 .EQ. 1.0_LDP)THEN
	  ELSE IF(EPS2 .EQ. 1.0D0)THEN

	    TA(ND)=TA(ND)+VEXT*( (1.0_LDP-EPS2)**BETA2 )
	    TA(ND)=TA(ND)+VEXT*( (1.0D0-EPS2)**BETA2 )

	  SIGMA(ND)=SIGMA(ND)/TA(ND)+V_RAT*RP/SCLHT/(1.0_LDP+V_RAT)-1.0_LDP
	  SIGMA(ND)=SIGMA(ND)/TA(ND)+V_RAT*RP/SCLHT/(1.0D0+V_RAT)-1.0D0

	  V(I)=VPHOT+(VINF1-VPHOT)*(1.0_LDP-RP1/TA(I))**BETA1 +
	  V(I)=VPHOT+(VINF1-VPHOT)*(1.0D0-RP1/TA(I))**BETA1 +

	1          VEXT*(1.0_LDP-RP2/TA(I))**BETA2
	1          VEXT*(1.0D0-RP2/TA(I))**BETA2

	  V(I)=V(I)/(1.0_LDP+V_RAT*EXP((RP-TA(I))/SCLHT))
	  V(I)=V(I)/(1.0D0+V_RAT*EXP((RP-TA(I))/SCLHT))

	  T1=TB(1)*TA(1)/3.0_LDP
	  T1=TB(1)*TA(1)/3.0D0

	    TA(ND-1)=TA(ND)+(R(MND-1)-R(MND))/20.0_LDP
	    TA(ND-1)=TA(ND)+(R(MND-1)-R(MND))/20.0D0

	    TA(2)=R(1)-(R(1)-R(2))/10.0_LDP
	    TA(2)=R(1)-(R(1)-R(2))/10.0D0

	    TA(ND-1)=TA(ND)+(R(MND-1)-R(MND))/10.0_LDP
	    TA(ND-1)=TA(ND)+(R(MND-1)-R(MND))/10.0D0

	    TA(3)=R(1)-(R(1)-R(2))/3.0_LDP
	    TA(3)=R(1)-(R(1)-R(2))/3.0D0

	    TA(ND-2)=TA(ND)+(R(MND-1)-R(MND))/3.0_LDP
	    TA(ND-2)=TA(ND)+(R(MND-1)-R(MND))/3.0D0

	    TA(2)=R(1)-(R(1)-R(2))/20.0_LDP
	    TA(2)=R(1)-(R(1)-R(2))/20.0D0

	    TA(ND-1)=TA(ND)+(R(MND-1)-R(MND))/20.0_LDP
	    TA(ND-1)=TA(ND)+(R(MND-1)-R(MND))/20.0D0

	    TA(3)=R(1)-(R(1)-R(2))/8.0_LDP
	    TA(3)=R(1)-(R(1)-R(2))/8.0D0

	    TA(ND-2)=TA(ND)+(R(MND-1)-R(MND))/8.0_LDP
	    TA(ND-2)=TA(ND)+(R(MND-1)-R(MND))/8.0D0

	    TA(4)=R(1)-(R(1)-R(2))/3.0_LDP
	    TA(4)=R(1)-(R(1)-R(2))/3.0D0

	    TA(ND-3)=TA(ND)+(R(MND-1)-R(MND))/3.0_LDP
	    TA(ND-3)=TA(ND)+(R(MND-1)-R(MND))/3.0D0

	    TA(I)=VPHOT+(VINF1-VPHOT)*(1.0_LDP-RP1/R(I))**BETA1 +
	    TA(I)=VPHOT+(VINF1-VPHOT)*(1.0D0-RP1/R(I))**BETA1 +

	1                  VEXT*(1.0_LDP-RP2/R(I))**BETA2
	1                  VEXT*(1.0D0-RP2/R(I))**BETA2

	    TB(I)=1.0_LDP+V_RAT*EXP((RP-R(I))/SCLHT)
	    TB(I)=1.0D0+V_RAT*EXP((RP-R(I))/SCLHT)

	    SIGMA(I)=(RP1*BETA1*(VINF1-VPHOT)*(1.0_LDP-RP1/R(I))**(BETA1-1) +
	    SIGMA(I)=(RP1*BETA1*(VINF1-VPHOT)*(1.0D0-RP1/R(I))**(BETA1-1) +

	1              RP2*BETA2*VEXT*(1.0_LDP-RP2/R(I))**(BETA2-1) )
	1              RP2*BETA2*VEXT*(1.0D0-RP2/R(I))**(BETA2-1) )

	1          +V_RAT*EXP((RP-R(I))/SCLHT)*(R(I)/SCLHT/TB(I))-1.0_LDP
	1          +V_RAT*EXP((RP-R(I))/SCLHT)*(R(I)/SCLHT/TB(I))-1.0D0

	  IF(BETA1 .EQ. 1.0_LDP)THEN
	  IF(BETA1 .EQ. 1.0D0)THEN

	  ELSE IF(EPS1 .EQ. 1.0_LDP)THEN
	  ELSE IF(EPS1 .EQ. 1.0D0)THEN

	    SIGMA(ND)=0.0_LDP
	    SIGMA(ND)=0.0D0

	  IF(BETA2 .EQ. 1.0_LDP)THEN
	  IF(BETA2 .EQ. 1.0D0)THEN

	    TA(ND)=TA(ND)+VEXT*(1.0_LDP-EPS2)
	    TA(ND)=TA(ND)+VEXT*(1.0D0-EPS2)

	  ELSE IF(EPS2 .EQ. 1.0_LDP)THEN
	  ELSE IF(EPS2 .EQ. 1.0D0)THEN

	    TA(ND)=TA(ND)+VEXT*( (1.0_LDP-EPS2)**BETA2 )
	    TA(ND)=TA(ND)+VEXT*( (1.0D0-EPS2)**BETA2 )

	  SIGMA(ND)=SIGMA(ND)/TA(ND)+V_RAT*RP/SCLHT/(1.0_LDP+V_RAT)-1.0_LDP
	  SIGMA(ND)=SIGMA(ND)/TA(ND)+V_RAT*RP/SCLHT/(1.0D0+V_RAT)-1.0D0

	    TB(I)=(1E+10/(TA(I)*TA(I)*V(I)))**2	    !Opacity
	    TB(I)=(1E+10/(TA(I)*TA(I)*V(I)))**2.0	    !Opacity


starpcyg_v4.f

	IF(VEXT .LT. 1.0E-06_LDP*VINF1)VEXT=0.0_LDP
	IF(VEXT .LT. 1.0D-06*VINF1)VEXT=0.0D0

	IF(BETA1 .LT. 1.0_LDP .AND. RP1 .GE. RP)THEN
	IF(BETA1 .LT. 1.0D0 .AND. RP1 .GE. RP)THEN

	IF(BETA2 .LT. 1.0_LDP .AND. RP2 .GE. RP)THEN
	IF(BETA2 .LT. 1.0D0 .AND. RP2 .GE. RP)THEN

	IF(EPS1 .LT. 1.0_LDP)THEN
	IF(EPS1 .LT. 1.0D0)THEN

          V_RAT=V_RAT+(VINF1-VPHOT)*(1.0_LDP-EPS1)**BETA1
          V_RAT=V_RAT+(VINF1-VPHOT)*(1.0D0-EPS1)**BETA1

	IF(EPS2 .LT. 1.0_LDP)THEN
	IF(EPS2 .LT. 1.0D0)THEN

	V_RAT=V_RAT/VCORE-1.0_LDP
	V_RAT=V_RAT/VCORE-1.0D0

	    S1=0.0_LDP; S2=0.0_LDP
	    S1=0.0D0; S2=0.0D0

	    IF(RP1/R(I) .LT. 1.0_LDP)THEN
	    IF(RP1/R(I) .LT. 1.0D0)THEN

	       TA(I)=TA(I)+(VINF1-VPHOT)*(1.0_LDP-RP1/R(I))**BETA1
	       TA(I)=TA(I)+(VINF1-VPHOT)*(1.0D0-RP1/R(I))**BETA1

	       S1=RP1*BETA1*(VINF1-VPHOT)*(1.0_LDP-RP1/R(I))**(BETA1-1)
	       S1=RP1*BETA1*(VINF1-VPHOT)*(1.0D0-RP1/R(I))**(BETA1-1)

	    IF(RP2/R(I) .LT. 1.0_LDP)THEN
	    IF(RP2/R(I) .LT. 1.0D0)THEN

	       TA(I)=TA(I)+ VEXT*(1.0_LDP-RP2/R(I))**BETA2
	       TA(I)=TA(I)+ VEXT*(1.0D0-RP2/R(I))**BETA2

	       S2=RP2*BETA2*VEXT*(1.0_LDP-RP2/R(I))**(BETA2-1)
	       S2=RP2*BETA2*VEXT*(1.0D0-RP2/R(I))**(BETA2-1)

	    TB(I)=1.0_LDP+V_RAT*EXP((RP3-R(I))/SCLHT)
	    TB(I)=1.0D0+V_RAT*EXP((RP3-R(I))/SCLHT)

	1          +V_RAT*EXP((RP3-R(I))/SCLHT)*(R(I)/SCLHT/TB(I))-1.0_LDP
	1          +V_RAT*EXP((RP3-R(I))/SCLHT)*(R(I)/SCLHT/TB(I))-1.0D0

	  IF(RP1/TA(I) .LT. 1.0_LDP)THEN
	  IF(RP1/TA(I) .LT. 1.0D0)THEN

	     V(I)=V(I)+(VINF1-VPHOT)*(1.0_LDP-RP1/TA(I))**BETA1
	     V(I)=V(I)+(VINF1-VPHOT)*(1.0D0-RP1/TA(I))**BETA1

	  IF(RP2/TA(I) .LT. 1.0_LDP)THEN
	  IF(RP2/TA(I) .LT. 1.0D0)THEN

	     V(I)=V(I)+ VEXT*(1.0_LDP-RP2/TA(I))**BETA2
	     V(I)=V(I)+ VEXT*(1.0D0-RP2/TA(I))**BETA2

	  V(I)=V(I)/( 1.0_LDP+V_RAT*EXP((RP3-TA(I))/SCLHT) )
	  V(I)=V(I)/( 1.0D0+V_RAT*EXP((RP3-TA(I))/SCLHT) )

	  T1=TB(1)*TA(1)/3.0_LDP
	  T1=TB(1)*TA(1)/3.0D0

	    TA(ND-1)=TA(ND)+(R(MND-1)-R(MND))/20.0_LDP
	    TA(ND-1)=TA(ND)+(R(MND-1)-R(MND))/20.0D0

	    TA(2)=R(1)-(R(1)-R(2))/10.0_LDP
	    TA(2)=R(1)-(R(1)-R(2))/10.0D0

	    TA(ND-1)=TA(ND)+(R(MND-1)-R(MND))/10.0_LDP
	    TA(ND-1)=TA(ND)+(R(MND-1)-R(MND))/10.0D0

	    TA(3)=R(1)-(R(1)-R(2))/3.0_LDP
	    TA(3)=R(1)-(R(1)-R(2))/3.0D0

	    TA(ND-2)=TA(ND)+(R(MND-1)-R(MND))/3.0_LDP
	    TA(ND-2)=TA(ND)+(R(MND-1)-R(MND))/3.0D0

	    TA(2)=R(1)-(R(1)-R(2))/20.0_LDP
	    TA(2)=R(1)-(R(1)-R(2))/20.0D0

	    TA(ND-1)=TA(ND)+(R(MND-1)-R(MND))/20.0_LDP
	    TA(ND-1)=TA(ND)+(R(MND-1)-R(MND))/20.0D0

	    TA(3)=R(1)-(R(1)-R(2))/8.0_LDP
	    TA(3)=R(1)-(R(1)-R(2))/8.0D0

	    TA(ND-2)=TA(ND)+(R(MND-1)-R(MND))/8.0_LDP
	    TA(ND-2)=TA(ND)+(R(MND-1)-R(MND))/8.0D0

	    TA(4)=R(1)-(R(1)-R(2))/3.0_LDP
	    TA(4)=R(1)-(R(1)-R(2))/3.0D0

	    TA(ND-3)=TA(ND)+(R(MND-1)-R(MND))/3.0_LDP
	    TA(ND-3)=TA(ND)+(R(MND-1)-R(MND))/3.0D0

	    S1=0.0_LDP; S2=0.0_LDP
	    S1=0.0D0; S2=0.0D0

	    IF(RP1/R(I) .LT. 1.0_LDP)THEN
	    IF(RP1/R(I) .LT. 1.0D0)THEN

	       TA(I)=TA(I)+(VINF1-VPHOT)*(1.0_LDP-RP1/R(I))**BETA1
	       TA(I)=TA(I)+(VINF1-VPHOT)*(1.0D0-RP1/R(I))**BETA1

	       S1=RP1*BETA1*(VINF1-VPHOT)*(1.0_LDP-RP1/R(I))**(BETA1-1)
	       S1=RP1*BETA1*(VINF1-VPHOT)*(1.0D0-RP1/R(I))**(BETA1-1)

	    IF(RP2/R(I) .LT. 1.0_LDP)THEN
	    IF(RP2/R(I) .LT. 1.0D0)THEN

	       TA(I)=TA(I)+ VEXT*(1.0_LDP-RP2/R(I))**BETA2
	       TA(I)=TA(I)+ VEXT*(1.0D0-RP2/R(I))**BETA2

	       S2=RP2*BETA2*VEXT*(1.0_LDP-RP2/R(I))**(BETA2-1)
	       S2=RP2*BETA2*VEXT*(1.0D0-RP2/R(I))**(BETA2-1)

	    TB(I)=1.0_LDP+V_RAT*EXP((RP3-R(I))/SCLHT)
	    TB(I)=1.0D0+V_RAT*EXP((RP3-R(I))/SCLHT)

	1          +V_RAT*EXP((RP3-R(I))/SCLHT)*(R(I)/SCLHT/TB(I))-1.0_LDP
	1          +V_RAT*EXP((RP3-R(I))/SCLHT)*(R(I)/SCLHT/TB(I))-1.0D0

	    TB(I)=(1E+10/(TA(I)*TA(I)*V(I)))**2	    !Opacity
	    TB(I)=(1E+10/(TA(I)*TA(I)*V(I)))**2.0	    !Opacity


starrave.f


steq_multi_v3.f

	  TMP_VEC_ED(1)=1.0_LDP		!Electron density
	  TMP_VEC_ED(1)=1.0D0		!Electron density

	  TMP_VEC_COOL(1)=0.0_LDP		!Initialize cooling rate even
	  TMP_VEC_COOL(1)=0.0D0		!Initialize cooling rate even

	 	T1=0.0_LDP
	 	T1=0.0D0

	    T1=0.0_LDP
	    T1=0.0D0

	    T2=0.0_LDP
	    T2=0.0D0

	    T1=0.0_LDP
	    T1=0.0D0

	    T2=0.0_LDP
	    T2=0.0D0

	    BA(NW-1,L,M,I)=BA(NW-1,L,M,I)+(ZION-1.0_LDP)
	    BA(NW-1,L,M,I)=BA(NW-1,L,M,I)+(ZION-1.0D0)

	    BA(EQPOP-NST+1,L,M,I)=BA(EQPOP-NST+1,L,M,I)+1.0_LDP
	    BA(EQPOP-NST+1,L,M,I)=BA(EQPOP-NST+1,L,M,I)+1.0D0

	  SE(NW-1,I)=SE(NW-1,I)+(ZION-1.0_LDP)*T1
	  SE(NW-1,I)=SE(NW-1,I)+(ZION-1.0D0)*T1

	    BA(J,J,M,I)=BA(J,J,M,I)+1.0_LDP
	    BA(J,J,M,I)=BA(J,J,M,I)+1.0D0


steqne.f

	  BA(NT-1,NT-1,M,K)=BA(NT-1,NT-1,M,K)-1.0_LDP
	  BA(NT-1,NT-1,M,K)=BA(NT-1,NT-1,M,K)-1.0D0


storeba.f


subcol_multi_v3.f

	COL_S(:,:,:)=0.0_LDP  		!N_S, N_S, ND
	COL_S(:,:,:)=0.0D0  		!N_S, N_S, ND

	dCOL_S(:,:,:)=0.0_LDP  		!N_S, N_S, ND
	dCOL_S(:,:,:)=0.0D0  		!N_S, N_S, ND

	  OMEGA_F(:,:)=0.0_LDP
	  OMEGA_F(:,:)=0.0D0

	  dln_OMEGA_dlnT(:,:)=0.0_LDP
	  dln_OMEGA_dlnT(:,:)=0.0D0

	      CIJ=8.63E-08_LDP*ED(K)*OMEGA_F(I,J)/SQRT(T(K))
	      CIJ=8.63D-08*ED(K)*OMEGA_F(I,J)/SQRT(T(K))

	      CII=CIJ*HNST_F(I,K)/HNST_S(L,K)*(1.0_LDP-W_F(J,K)/W_F(I,K))
	      CII=CIJ*HNST_F(I,K)/HNST_S(L,K)*(1.0D0-W_F(J,K)/W_F(I,K))

	1        X -2.0_LDP - HDKT*EDGE_F(I)/T(K)-dlnHNST_S_dlnT(L,K) )/T(K)
	1        X -2.0D0 - HDKT*EDGE_F(I)/T(K)-dlnHNST_S_dlnT(L,K) )/T(K)

	1           2.0_LDP - HDKT*EDGE_F(I)/T(K)-dlnHNST_S_dlnT(L,K) )/T(K)
	1           2.0D0 - HDKT*EDGE_F(I)/T(K)-dlnHNST_S_dlnT(L,K) )/T(K)

	1           2.0_LDP - HDKT*EDGE_F(J)/T(K)-dlnHNST_S_dlnT(U,K) )/T(K)
	1           2.0D0 - HDKT*EDGE_F(J)/T(K)-dlnHNST_S_dlnT(U,K) )/T(K)

	    CII=8.63E-08_LDP*ED(K)*OMEGA_F(I,I)/GHYD_F(I)/SQRT(T(K))
	    CII=8.63D-08*ED(K)*OMEGA_F(I,I)/GHYD_F(I)/SQRT(T(K))

	1       CII*( dln_OMEGA_dlnT(I,I) - 2.0_LDP - dlnHNST_S_dlnT(L,K) )/T(K)
	1       CII*( dln_OMEGA_dlnT(I,I) - 2.0D0 - dlnHNST_S_dlnT(L,K) )/T(K)


sup_to_full_v3b.f

	REAL(KIND=LDP), PARAMETER :: MAX_LOG_LTE_POP=600.0_LDP
	REAL(KIND=LDP), PARAMETER :: MAX_LOG_LTE_POP=600.0D0

	    GION(K)=0.0_LDP
	    GION(K)=0.0D0

	C2LTE_F=0.0_LDP
	C2LTE_F=0.0D0

	  RGU=2.07078E-22_LDP*ED(K)*DIC2_S(K)*( T(K)**(-1.5_LDP) )/GION(K)
	  RGU=2.07078D-22*ED(K)*DIC2_S(K)*( T(K)**(-1.5) )/GION(K)

	    C2LTE_S(I,K)=0.0_LDP
	    C2LTE_S(I,K)=0.0D0

	    SCALE_FAC(I)=0.0_LDP
	    SCALE_FAC(I)=0.0D0

	    IF(SCALE_FAC(L) .EQ. 0.0_LDP)SCALE_FAC(L)=LOG_C2LTE_F(I,K)
	    IF(SCALE_FAC(L) .EQ. 0.0D0)SCALE_FAC(L)=LOG_C2LTE_F(I,K)

	      C2LTE_S(L,K)=0.0_LDP
	      C2LTE_S(L,K)=0.0D0

	    IF(C2LTE_S(L,K) .EQ. 0.0_LDP)C2LTE_F(I,K)=0.0_LDP
	    IF(C2LTE_S(L,K) .EQ. 0.0D0)C2LTE_F(I,K)=0.0D0

	    EDGE_S(L)=0.0_LDP
	    EDGE_S(L)=0.0D0

                B=T1*B1 + (1.0_LDP-T1)*B2
                B=T1*B1 + (1.0D0-T1)*B2

	        IF(B1 .LE. 1._LDP .AND. B2 .LE. 1 .AND. B .GT. 1)B=1.0
	        IF(B1 .LE. 1. .AND. B2 .LE. 1 .AND. B .GT. 1)B=1.0

	        IF(B1 .GE. 1._LDP .AND. B2 .GE. 1 .AND. B .LT. 1)B=1.0
	        IF(B1 .GE. 1. .AND. B2 .GE. 1 .AND. B .LT. 1)B=1.0

	    SUM(L)=0.0_LDP
	    SUM(L)=0.0D0


sup_to_full_v3.f

	    GION(K)=0.0_LDP
	    GION(K)=0.0D0

	  RGU=2.07078E-22_LDP*ED(K)*DIC2_S(K)*( T(K)**(-1.5_LDP) )/GION(K)
	  RGU=2.07078D-22*ED(K)*DIC2_S(K)*( T(K)**(-1.5D0) )/GION(K)

	    C2LTE_S(I,K)=0.0_LDP
	    C2LTE_S(I,K)=0.0D0

	    EDGE_S(L)=0.0_LDP
	    EDGE_S(L)=0.0D0

                B=T1*B1 + (1.0_LDP-T1)*B2
                B=T1*B1 + (1.0D0-T1)*B2

	        IF(B1 .LE. 1._LDP .AND. B2 .LE. 1 .AND. B .GT. 1)B=1.0
	        IF(B1 .LE. 1. .AND. B2 .LE. 1 .AND. B .GT. 1)B=1.0

	        IF(B1 .GE. 1._LDP .AND. B2 .GE. 1 .AND. B .LT. 1)B=1.0
	        IF(B1 .GE. 1. .AND. B2 .GE. 1 .AND. B .LT. 1)B=1.0

	    SUM(L)=0.0_LDP
	    SUM(L)=0.0D0


tau.f

	  DTAU(I)=0.5_LDP*(RKI(I)+RKI(I+1))*(Z(I)-Z(I+1))
	  DTAU(I)=0.5D0*(RKI(I)+RKI(I+1))*(Z(I)-Z(I+1))


tcompd.f

	TA(1)=0.0_LDP
	TA(1)=0.0D0

	TC(1)=1.0_LDP/DTAU(1)
	TC(1)=1.0D0/DTAU(1)

	TB(1)=-1.0_LDP-TC(1)
	TB(1)=-1.0D0-TC(1)

	  TC(I)=1.0_LDP/DTAU(I)
	  TC(I)=1.0D0/DTAU(I)

	  TB(I)=-0.5_LDP*(DTAU(I-1)+DTAU(I))-TA(I)-TC(I)
	  TB(I)=-0.5D0*(DTAU(I-1)+DTAU(I))-TA(I)-TC(I)

		TB(NI)=-TA(NI)+DTAU(NI-1)/2.0_LDP
		TB(NI)=-TA(NI)+DTAU(NI-1)/2.0D0

		TB(NI)=1.0_LDP-TA(NI)
		TB(NI)=1.0D0-TA(NI)

	TC(NI)=0.0_LDP
	TC(NI)=0.0D0


term_io.f


tfeau.f

	TA(1)=0.0_LDP
	TA(1)=0.0D0

	  T1=0.5_LDP*(DTAU(I-1)+DTAU(I))
	  T1=0.5D0*(DTAU(I-1)+DTAU(I))

	  TB(I)=R(I)*R(I)*((1.0_LDP-THETA(I))/Q(I)
	  TB(I)=R(I)*R(I)*((1.0D0-THETA(I))/Q(I)

	1        +F(I)*Q(I)*(1.0_LDP/DTAU(I)+1.0_LDP/DTAU(I-1))/T1)
	1        +F(I)*Q(I)*(1.0D0/DTAU(I)+1.0D0/DTAU(I-1))/T1)

	  TC(ND)=0.0_LDP
	  TC(ND)=0.0D0

	  TC(ND)=0.0_LDP
	  TC(ND)=0.0D0


thomas.f

	B(1)=1.0_LDP/B(1)
	B(1)=1.0D0/B(1)

	  B(I)=1.0_LDP/(B(I)+A(I)*C(I-1))
	  B(I)=1.0D0/(B(I)+A(I)*C(I-1))


thomas_pone.f

	B(1)=1.0_LDP/B(1)
	B(1)=1.0D0/B(1)

	B(2)=1.0_LDP/(B(2)+A(2)*C(1))
	B(2)=1.0D0/(B(2)+A(2)*C(1))

	  B(I)=1.0_LDP/(B(I)+A(I)*C(I-1))
	  B(I)=1.0D0/(B(I)+A(I)*C(I-1))


thomas_rh.f

	DIV(1)=1.0_LDP/(C(1)+H(1))
	DIV(1)=1.0/(C(1)+H(1))

	  DIV(I)=1.0_LDP/(A(I)*H(I-1)+H(I)+C(I))
	  DIV(I)=1.0D0/(A(I)*H(I-1)+H(I)+C(I))


torscl.f

	    TOR(1)=0.00001_LDP
	    TOR(1)=0.00001

	  TOR(1)=CHI(1)*R(1)/(T1-1.0_LDP)
	  TOR(1)=CHI(1)*R(1)/(T1-1.0D0)


torscl_v2.f

	    TOR(1)=0.00001_LDP
	    TOR(1)=0.00001

	  IF(T1 .GT. 1.5_LDP)THEN
	  IF(T1 .GT. 1.5D0)THEN

	   TOR(1)=CHI(1)*R(1)/(T1-1.0_LDP)
	   TOR(1)=CHI(1)*R(1)/(T1-1.0D0)


torscl_v3.f

	    TOR(1)=CHI(1)/10.0_LDP
	    TOR(1)=CHI(1)/10.0D0

	    IF(T1 .GT. 1.5_LDP)THEN
	    IF(T1 .GT. 1.5D0)THEN

	      TOR(1)=CHI(1)*R(1)/(T1-1.0_LDP)
	      TOR(1)=CHI(1)*R(1)/(T1-1.0D0)

          TOR(1)=CHI(1)*R(1)/(T1-1.0_LDP)
          TOR(1)=CHI(1)*R(1)/(T1-1.0D0)


transposeba.f


tst_ins.f

	C_KMS=1.0E-05_LDP*SPEED_OF_LIGHT()
	C_KMS=1.0D-05*SPEED_OF_LIGHT()

	V_DOP=50.0_LDP		!km/s
	V_DOP=50.0		!km/s

	FRAC_DOP=1.0_LDP
	FRAC_DOP=1.0D0

	MAX_DOP=6.0_LDP
	MAX_DOP=6.0D0

	VINF=840.0_LDP		!km/s
	VINF=840.0D0		!km/s

	dV_CMF_PROF=200.0_LDP  		!km/s
	dV_CMF_PROF=200.0  		!km/s

	dV_CMF_WING=300.0_LDP  		!km/s
	dV_CMF_WING=300.0  		!km/s

	ES_WING_ExT=2500.0_LDP  		!km/s
	ES_WING_ExT=2500.0  		!km/s

	R_CMF_WING_EXT=3.0_LDP
	R_CMF_WING_EXT=3.0D0


tst_mon.f

	  R(I)=1.0_LDP+0.1_LDP*(I**2)
	  R(I)=1.0+0.1D0*(I**2)


tst_mon_ins.f

	  R(I)=1.0_LDP+0.1_LDP*(I**2)
	  R(I)=1.0+0.1D0*(I**2)

 	  CHI(I)=3.0_LDP*(R(I)/R(1))**4.0
 	  CHI(I)=3.0*(R(I)/R(1))**4.0

 	  CHI(I)=2.0_LDP+RAN(ISEED)
 	  CHI(I)=2.0D0+RAN(ISEED)

	  R_INS(I,1)=R(I)+0.04_LDP*DELR
	  R_INS(I,1)=R(I)+0.04*DELR

	  R_INS(I,2)=R(I)+0.16_LDP*DELR
	  R_INS(I,2)=R(I)+0.16*DELR

	  R_INS(I,3)=R(I)+0.40_LDP*DELR
	  R_INS(I,3)=R(I)+0.40*DELR

	  R_INS(I,4)=R(I)+0.70_LDP*DELR
	  R_INS(I,4)=R(I)+0.70*DELR


tst_set_cont.f

	C_KMS=1.0E-05_LDP*SPEED_OF_LIGHT()
	C_KMS=1.0D-05*SPEED_OF_LIGHT()

	MAX_FREQ=50.0_LDP
	MAX_FREQ=50.0D0

	MIN_FREQ=0.003_LDP
	MIN_FREQ=0.003

	SMALL_RAT=1.10_LDP
	SMALL_RAT=1.10

	BIG_AMP=1.05_LDP
	BIG_AMP=1.05

	dV_LEV=200.0_LDP
	dV_LEV=200.0D0

	AMP_DIS=1.4_LDP
	AMP_DIS=1.4D0

	MIN_FREQ_LEV_DIS=0.1_LDP
	MIN_FREQ_LEV_DIS=0.1D0

	dV_DOP=10.0_LDP
	dV_DOP=10.0D0

	dV_CONT=1000.0_LDP
	dV_CONT=1000.0D0


tst_tri.f

	  A(I)=-0.48_LDP*T1
	  A(I)=-0.48*T1

	  C(I)=-0.49_LDP*T1
	  C(I)=-0.49*T1

	  X(I)=SQRT(2*I+0.5_LDP)
	  X(I)=SQRT(2*I+0.5)

	  D(I)=0.0_LDP
	  D(I)=0.0D0

	  W(:,J)=D(:)+0.1_LDP*(J-1)
	  W(:,J)=D(:)+0.1*(J-1)

	  A(I)=-0.48_LDP*T1
	  A(I)=-0.48*T1

	  C(I)=-0.49_LDP*T1
	  C(I)=-0.49*T1

	  X(I)=SQRT(2*I+0.5_LDP)
	  X(I)=SQRT(2*I+0.5)

	  D(I)=0.0_LDP
	  D(I)=0.0D0

	  W(:,J)=D(:)+0.1_LDP*(J-1)
	  W(:,J)=D(:)+0.1*(J-1)

            ST_CPU(I)=0._LDP
            ST_CPU(I)=0.D0

            IST_WALL(I)=0._LDP
            IST_WALL(I)=0.D0

            CPUTOT(I)=0._LDP
            CPUTOT(I)=0.D0

            WALLTOT(I)=0._LDP
            WALLTOT(I)=0.D0

          OVERHEAD=2.0_LDP*(ETIME(TARRY)-T0)
          OVERHEAD=2.0D0*(ETIME(TARRY)-T0)

            ST_CPU(I)=0._LDP
            ST_CPU(I)=0.D0

            IST_WALL(I)=0._LDP
            IST_WALL(I)=0.D0

            CPUTOT(I)=0._LDP
            CPUTOT(I)=0.D0

            WALLTOT(I)=0._LDP
            WALLTOT(I)=0.D0


tst_tri_v.f

	  A(I)=-0.48_LDP*T1
	  A(I)=-0.48*T1

	  C(I)=-0.49_LDP*T1
	  C(I)=-0.49*T1

	  X(I)=SQRT(2*I+0.5_LDP)
	  X(I)=SQRT(2*I+0.5)

	  D(I)=0.0_LDP
	  D(I)=0.0D0

	  W(:,J)=D(:)+0.1_LDP*(J-1)
	  W(:,J)=D(:)+0.1*(J-1)

	  A(I)=-0.48_LDP*T1
	  A(I)=-0.48*T1

	  C(I)=-0.49_LDP*T1
	  C(I)=-0.49*T1

	  X(I)=SQRT(2*I+0.5_LDP)
	  X(I)=SQRT(2*I+0.5)

	  D(I)=0.0_LDP
	  D(I)=0.0D0

	  W(:,J)=D(:)+0.1_LDP*(J-1)
	  W(:,J)=D(:)+0.1*(J-1)

            ST_CPU(I)=0._LDP
            ST_CPU(I)=0.D0

            IST_WALL(I)=0._LDP
            IST_WALL(I)=0.D0

            CPUTOT(I)=0._LDP
            CPUTOT(I)=0.D0

            WALLTOT(I)=0._LDP
            WALLTOT(I)=0.D0

          OVERHEAD=2.0_LDP*(ETIME(TARRY)-T0)
          OVERHEAD=2.0D0*(ETIME(TARRY)-T0)

            ST_CPU(I)=0._LDP
            ST_CPU(I)=0.D0

            IST_WALL(I)=0._LDP
            IST_WALL(I)=0.D0

            CPUTOT(I)=0._LDP
            CPUTOT(I)=0.D0

            WALLTOT(I)=0._LDP
            WALLTOT(I)=0.D0

	B(1)=1.0_LDP/B(1)
	B(1)=1.0/B(1)

	  B(I)=1.0_LDP/(B(I)+A(I)*C(I-1))
	  B(I)=1.0/(B(I)+A(I)*C(I-1))


tst_wr2d.f


tst_wr.f


tst_z.f


tuvghd.f

	TA(1)=0.0_LDP
	TA(1)=0.0D0

	VB(1)=0.0_LDP
	VB(1)=0.0D0

	VC(1)=0.0_LDP
	VC(1)=0.0D0

	GB(1)=-1.0_LDP/((1.0_LDP+QH(1))*DTAU(1))
	GB(1)=-1.0D0/((1.0D0+QH(1))*DTAU(1))

	H(1)=QH(1)/(1.0_LDP+QH(1))
	H(1)=QH(1)/(1.0D0+QH(1))

	TC(1)=1.0_LDP/DTAU(1)
	TC(1)=1.0D0/DTAU(1)

	TB(1)=-TC(1)-1.0_LDP-Q(1)
	TB(1)=-TC(1)-1.0D0-Q(1)

	  H(I)=QH(I)/(1.0_LDP+QH(I))
	  H(I)=QH(I)/(1.0D0+QH(I))

	  GB(I)=-1.0_LDP/((1.0_LDP+QH(I))*DTAU(I))
	  GB(I)=-1.0D0/((1.0D0+QH(I))*DTAU(I))

	  U(I)=-Q(I)*0.5_LDP*(DTAU(I)+DTAU(I-1))
	  U(I)=-Q(I)*0.5D0*(DTAU(I)+DTAU(I-1))

	  TB(I)=-TA(I)-TC(I)-(1.0_LDP+Q(I))*0.5_LDP*(DTAU(I)+DTAU(I-1))
	  TB(I)=-TA(I)-TC(I)-(1.0D0+Q(I))*0.5D0*(DTAU(I)+DTAU(I-1))

	  TB(NI)=(1.0_LDP+Q(NI))*0.5_LDP*DTAU(NI-1)-GB(NI-1)
	  TB(NI)=(1.0D0+Q(NI))*0.5D0*DTAU(NI-1)-GB(NI-1)

	  U(NI)=Q(NI)*0.5_LDP*DTAU(NI-1)
	  U(NI)=Q(NI)*0.5D0*DTAU(NI-1)

	  TB(NI)=1.0_LDP/DTAU(NI-1)
	  TB(NI)=1.0D0/DTAU(NI-1)

	  U(NI)=0.0_LDP
	  U(NI)=0.0D0

	  VB(NI)=0.0_LDP
	  VB(NI)=0.0D0

	  TA(NI)=-1.0_LDP/DTAU(NI-1)
	  TA(NI)=-1.0D0/DTAU(NI-1)

	  TB(NI)=-TA(NI)+1.0_LDP+Q(NI)
	  TB(NI)=-TA(NI)+1.0D0+Q(NI)

	  VB(NI)=0.0_LDP
	  VB(NI)=0.0D0

	TC(NI)=0.0_LDP
	TC(NI)=0.0D0

	VC(NI)=0.0_LDP
	VC(NI)=0.0D0

	GB(NI)=0.0_LDP
	GB(NI)=0.0D0


tuvghd_rh.f

	TA(1)=0.0_LDP
	TA(1)=0.0D0

	VB(1)=0.0_LDP
	VB(1)=0.0D0

	VC(1)=0.0_LDP
	VC(1)=0.0D0

	GB(1)=-1.0_LDP/((1.0_LDP+QH(1))*DTAU(1))
	GB(1)=-1.0D0/((1.0D0+QH(1))*DTAU(1))

	H(1)=QH(1)/(1.0_LDP+QH(1))
	H(1)=QH(1)/(1.0D0+QH(1))

	TC(1)=1.0_LDP/DTAU(1)
	TC(1)=1.0D0/DTAU(1)

	TB(1)=1.0_LDP+Q(1)
	TB(1)=1.0D0+Q(1)

	RHS(1)=0.0_LDP
	RHS(1)=0.0D0

	  H(I)=QH(I)/(1.0_LDP+QH(I))
	  H(I)=QH(I)/(1.0D0+QH(I))

	  GB(I)=-1.0_LDP/((1.0_LDP+QH(I))*DTAU(I))
	  GB(I)=-1.0D0/((1.0D0+QH(I))*DTAU(I))

	  U(I)=-0.5_LDP*Q(I)*(DTAU(I)+DTAU(I-1))
	  U(I)=-0.5D0*Q(I)*(DTAU(I)+DTAU(I-1))

	  TB(I)=0.5_LDP*(1.0_LDP+Q(I))*(DTAU(I)+DTAU(I-1))
	  TB(I)=0.5D0*(1.0D0+Q(I))*(DTAU(I)+DTAU(I-1))

	  RHS(I)=-0.5_LDP*SOURCE(I)*(DTAU(I-1)+DTAU(I))
	  RHS(I)=-0.5D0*SOURCE(I)*(DTAU(I-1)+DTAU(I))

	  TB(NI)=-0.5_LDP*(1.0_LDP+Q(NI))*DTAU(NI-1)
	  TB(NI)=-0.5D0*(1.0D0+Q(NI))*DTAU(NI-1)

	  U(NI)=0.5_LDP*Q(NI)*DTAU(NI-1)
	  U(NI)=0.5D0*Q(NI)*DTAU(NI-1)

	  RHS(NI)=0.5_LDP*DTAU(NI-1)*SOURCE(NI)
	  RHS(NI)=0.5D0*DTAU(NI-1)*SOURCE(NI)

	  TB(NI)=0.0_LDP
	  TB(NI)=0.0D0

	  TA(NI)=-1.0_LDP/DTAU(NI-1)
	  TA(NI)=-1.0D0/DTAU(NI-1)

	  U(NI)=0.0_LDP
	  U(NI)=0.0D0

	  VB(NI)=0.0_LDP
	  VB(NI)=0.0D0

	  TA(NI)=-1.0_LDP/DTAU(NI-1)
	  TA(NI)=-1.0D0/DTAU(NI-1)

	  TB(NI)=-1.0_LDP-Q(NI)
	  TB(NI)=-1.0D0-Q(NI)

	  VB(NI)=0.0_LDP
	  VB(NI)=0.0D0

	TC(NI)=0.0_LDP
	TC(NI)=0.0D0

	VC(NI)=0.0_LDP
	VC(NI)=0.0D0

	GB(NI)=0.0_LDP
	GB(NI)=0.0D0


undo_it.f


ungrid.f


update_gam.f

	    GAM(J)=0.0_LDP
	    GAM(J)=0.0D0


updateu.f


uptvx_edd.f


uptx_edd.f

	IF( .NOT. ML_NE_ONE)TX(:,:,:)=0.0_LDP
	IF( .NOT. ML_NE_ONE)TX(:,:,:)=0.0D0


up_tx_tvx_ext_v1.f

	  IF(EPS_A(I) .NE. 0.0_LDP .OR. EPS_PREV_A(I) .NE. 0.0_LDP)USE_EPS=.TRUE.
	  IF(EPS_A(I) .NE. 0.0D0 .OR. EPS_PREV_A(I) .NE. 0.0D0)USE_EPS=.TRUE.

	  TX(:,:,:)=0.0_LDP       !NDEXT,ND,NM_TX
	  TX(:,:,:)=0.0D0       !NDEXT,ND,NM_TX

	  TVX(:,:,:)=0.0_LDP      !(NDEXT-1),ND*NM_TX
	  TVX(:,:,:)=0.0D0      !(NDEXT-1),ND*NM_TX

	  OLD_TX(:,:)=0.0_LDP     !NDEXT,ND
	  OLD_TX(:,:)=0.0D0     !NDEXT,ND


up_tx_tvx.f

	  IF(EPS_A(I) .NE. 0.0_LDP .OR. EPS_PREV_A(I) .NE. 0.0_LDP)USE_EPS=.TRUE.
	  IF(EPS_A(I) .NE. 0.0D0 .OR. EPS_PREV_A(I) .NE. 0.0D0)USE_EPS=.TRUE.

	  TX(:,:,:)=0.0_LDP       !ND,ND,NM_TX
	  TX(:,:,:)=0.0D0       !ND,ND,NM_TX

	  TVX(:,:,:)=0.0_LDP      !(ND-1),ND*NM_TX
	  TVX(:,:,:)=0.0D0      !(ND-1),ND*NM_TX

	  OLD_TX(:,:)=0.0_LDP     !ND,ND
	  OLD_TX(:,:)=0.0D0     !ND,ND


up_tx_tvx_noeps.f

	  TX(:,:,:)=0.0_LDP       !ND,ND,NM_TX
	  TX(:,:,:)=0.0D0       !ND,ND,NM_TX

	  TVX(:,:,:)=0.0_LDP      !(ND-1),ND*NM_TX
	  TVX(:,:,:)=0.0D0      !(ND-1),ND*NM_TX

	  OLD_TX(:,:)=0.0_LDP     !ND,ND
	  OLD_TX(:,:)=0.0D0     !ND,ND


up_tx_tvx_v2.f

	  IF(EPS_A(I) .NE. 0.0_LDP .OR. EPS_PREV_A(I) .NE. 0.0_LDP)USE_EPS=.TRUE.
	  IF(EPS_A(I) .NE. 0.0D0 .OR. EPS_PREV_A(I) .NE. 0.0D0)USE_EPS=.TRUE.

	  TX(:,:,:)=0.0_LDP       !ND,ND,NM_TX
	  TX(:,:,:)=0.0D0       !ND,ND,NM_TX

	  TVX(:,:,:)=0.0_LDP      !(ND-1),ND*NM_TX
	  TVX(:,:,:)=0.0D0      !(ND-1),ND*NM_TX

	  OLD_TX(:,:)=0.0_LDP     !ND,ND
	  OLD_TX(:,:)=0.0D0     !ND,ND


upvnot.f


var_formsol.f

	FQAF(:,:,:)=0.0_LDP               !NM,ND,ND
	FQAF(:,:,:)=0.0D0               !NM,ND,ND

	FQAFD(:)=0.0_LDP         		!ND
	FQAFD(:)=0.0D0         		!ND

	      TOR=CHI(1)*R(1)*R(1)*(1.570796_LDP-ACOS(P(LS)/R(1)))/P(LS)
	      TOR=CHI(1)*R(1)*R(1)*(1.570796-ACOS(P(LS)/R(1)))/P(LS)

	    IBOUND=ETA(1)*(1.0_LDP-EXP(-TOR))/CHI(1)
	    IBOUND=ETA(1)*(1.0D0-EXP(-TOR))/CHI(1)

	    TOR=0.0_LDP
	    TOR=0.0D0

	    IBOUND=0.0_LDP
	    IBOUND=0.0D0

	  AV(1:NI)=0.0_LDP
	  AV(1:NI)=0.0D0

	  CV(1:NI)=0.0_LDP
	  CV(1:NI)=0.0D0

	1                   *(1.0_LDP+Q(NI)*(1.0_LDP-TCHI(NI)/OLDCHI))
	1                   *(1.0D0+Q(NI)*(1.0D0-TCHI(NI)/OLDCHI))

	      WERF_EXP=EXP(1.0E-15_LDP*CHIL(1)/FL/GAM(1)*WERFC(ML))
	      WERF_EXP=EXP(1.0D-15*CHIL(1)/FL/GAM(1)*WERFC(ML))

	      XM(1)=(CHI(1)/TCHI(1)*WERF_EXP-1.0_LDP)*ETAL(1)/CHIL(1)
	      XM(1)=(CHI(1)/TCHI(1)*WERF_EXP-1.0D0)*ETAL(1)/CHIL(1)

	    T1=1.0E-15_LDP/FL/GAM(1)*WERFC(ML)
	    T1=1.0D-15/FL/GAM(1)*WERFC(ML)

	      T2=0.5_LDP*(Z(ND-1)-Z(ND))*(AV(ND)-AV(ND-1))/DTAU(ND-1)/DTAU(ND-1)
	      T2=0.5D0*(Z(ND-1)-Z(ND))*(AV(ND)-AV(ND-1))/DTAU(ND-1)/DTAU(ND-1)

	        KI(ND,2,3)=T2+DBC*( (Q(ND)*TCHI(ND)-1.0_LDP)/TCHI(ND)
	        KI(ND,2,3)=T2+DBC*( (Q(ND)*TCHI(ND)-1.0D0)/TCHI(ND)

	1         DBC*( (Q(ND)*TCHI(ND)-1.0_LDP)/TCHI(ND) *
	1         DBC*( (Q(ND)*TCHI(ND)-1.0D0)/TCHI(ND) *

	        TXD(1:NI)=0.0_LDP
	        TXD(1:NI)=0.0D0

	        TVXD(1:NI)=0.0_LDP
	        TVXD(1:NI)=0.0D0


varlamki.f

	REAL(KIND=LDP), PARAMETER :: ONE=1.0_LDP
	REAL(KIND=LDP), PARAMETER :: ONE=1.0D0

	KI(:)=0.0_LDP
	KI(:)=0.0D0

	T4=1.0_LDP/(DTAU(1)*(1.0_LDP+QH(1)))
	T4=1.0D0/(DTAU(1)*(1.0+QH(1)))

	T5=T4/DTAU(1)*0.5_LDP
	T5=T4/DTAU(1)*0.5D0

	T6=QH(1)/((1.0_LDP+QH(1))*(TCHI(1)+TCHI(2)))
	T6=QH(1)/((1.0+QH(1))*(TCHI(1)+TCHI(2)))

	KIP=(Z(1)-Z(2))*(UK(2)-UK(1))*0.5_LDP/(DTAU(1)*DTAU(1))
	KIP=(Z(1)-Z(2))*(UK(2)-UK(1))*0.5D0/(DTAU(1)*DTAU(1))

	RKB(1)=-KIP/(1.0_LDP+QH(1)) - T6*T4*( UK(1)-UK(2)
	RKB(1)=-KIP/(1.0+QH(1)) - T6*T4*( UK(1)-UK(2)

	  T4=1.0_LDP/(DTAU(I)*(QH(I)+1.0_LDP))
	  T4=1.0D0/(DTAU(I)*(QH(I)+1.0D0))

	  T5=T4/DTAU(I)*0.5_LDP
	  T5=T4/DTAU(I)*0.5D0

	  T7=0.25_LDP*(UK(I)*(1.0_LDP+Q(I))-SOURCE(I)-Q(I)*UKM1(I))
	  T7=0.25D0*(UK(I)*(1.0D0+Q(I))-SOURCE(I)-Q(I)*UKM1(I))

	1       -T3*((UK(J)-UK(I))*T1+VKM1(J)/( 1.0_LDP+QH(J)) )
	1       -T3*((UK(J)-UK(I))*T1+VKM1(J)/( 1.0D0+QH(J)) )

	1      -T6*((UK(K)-UK(I))*T4-VKM1(I)/(1.0_LDP+QH(I)))
	1      -T6*((UK(K)-UK(I))*T4-VKM1(I)/(1.0+QH(I)))

	1       *(UKM1(I)-UK(I))*Q(I)*0.5_LDP/TCHI(I)
	1       *(UKM1(I)-UK(I))*Q(I)*0.5D0/TCHI(I)

	  KIM=0.5_LDP*(Z(NI-1)-Z(NI))*(UK(NI)-UK(NI-1))/
	  KIM=0.5D0*(Z(NI-1)-Z(NI))*(UK(NI)-UK(NI-1))/

	1       ( (Z(NI-1)-Z(NI))*0.5_LDP/DTAU(NI-1)-T6 )+
	1       ( (Z(NI-1)-Z(NI))*0.5D0/DTAU(NI-1)-T6 )+

	1        VKM1(NI-1)*T6/(1.0_LDP+QH(NI-1))+
	1        VKM1(NI-1)*T6/(1.0+QH(NI-1))+

	1        0.25_LDP*(Z(NI-1)-Z(NI))*( SOURCE(NI)-(1.0_LDP+Q(NI))*
	1        0.25D0*(Z(NI-1)-Z(NI))*( SOURCE(NI)-(1.0D0+Q(NI))*

	  KI(NI)=KIM+0.5_LDP*(UK(NI)-UKM1(NI))*Q(NI)*
	  KI(NI)=KIM+0.5D0*(UK(NI)-UKM1(NI))*Q(NI)*

	  VSRCE(I)=-0.5_LDP*(DTAU(I-1)+DTAU(I))
	  VSRCE(I)=-0.5D0*(DTAU(I-1)+DTAU(I))

	   VSRCE(NI)=0.5_LDP*DTAU(NI-1)
	   VSRCE(NI)=0.5D0*DTAU(NI-1)


var_momjbar.f

	REAL(KIND=LDP), PARAMETER :: PROG_ID=2.22814021E+08_LDP !Must be unique (VAR_MJBA)
	REAL(KIND=LDP), PARAMETER :: PROG_ID=2.22814021D+08 !Must be unique (VAR_MJBA)

	PSIPREV(NV-1)=1.0_LDP
	PSIPREV(NV-1)=1.0D0

	PSIPREV(NV)=1.0_LDP
	PSIPREV(NV)=1.0D0

	  PSIPREV(NV)=0.0_LDP
	  PSIPREV(NV)=0.0D0

	  JNU(I)=0.0_LDP
	  JNU(I)=0.0D0

	  HNU(I)=0.0_LDP
	  HNU(I)=0.0D0

	  JNUM1(I)=0.0_LDP
	  JNUM1(I)=0.0D0

	  HNUM1(I)=0.0_LDP
	  HNUM1(I)=0.0D0

	  TXD(I)=0.0_LDP
	  TXD(I)=0.0D0

	  TVXD(I)=0.0_LDP
	  TVXD(I)=0.0D0

	      DEPTH_PRO(I)=0.0_LDP
	      DEPTH_PRO(I)=0.0D0

	      GAMH(I)=2.0_LDP*3.33564E-06_LDP*(V(I)+V(I+1))/(R(I)+R(I+1))
	      GAMH(I)=2.0D0*3.33564D-06*(V(I)+V(I+1))/(R(I)+R(I+1))

	      W(I)=GAMH(I)*( 1.0_LDP+
	      W(I)=GAMH(I)*( 1.0D0+

	1                 0.5_LDP*(SIGMA(I)+SIGMA(I+1))*G(I,ML) )
	1                 0.5D0*(SIGMA(I)+SIGMA(I+1))*G(I,ML) )

	      WPREV(I)=GAMH(I)*( 1.0_LDP+
	      WPREV(I)=GAMH(I)*( 1.0D0+

	1                 0.5_LDP*(SIGMA(I)+SIGMA(I+1))*G(I,ML-1) )
	1                 0.5D0*(SIGMA(I)+SIGMA(I+1))*G(I,ML-1) )

	      GAM(I)=3.33564E-06_LDP*V(I)/R(I)/TCHI(I)/DNU
	      GAM(I)=3.33564D-06*V(I)/R(I)/TCHI(I)/DNU

	      DTAUONQ(I)=0.5_LDP*(DTAU(I)+DTAU(I-1))/Q(I)
	      DTAUONQ(I)=0.5D0*(DTAU(I)+DTAU(I-1))/Q(I)

	      PSI(I)=DTAUONQ(I)*GAM(I)*( 1.0_LDP+SIGMA(I)*F(I,ML) )
	      PSI(I)=DTAUONQ(I)*GAM(I)*( 1.0D0+SIGMA(I)*F(I,ML) )

	1                   ( 1.0_LDP+SIGMA(I)*F(I,ML-1) )
	1                   ( 1.0D0+SIGMA(I)*F(I,ML-1) )

	      DTAUONQ(I)=0.5_LDP*(DTAU(I)+DTAU(I-1))/Q(I)
	      DTAUONQ(I)=0.5D0*(DTAU(I)+DTAU(I-1))/Q(I)

	      GAMH(I)=0.0_LDP
	      GAMH(I)=0.0D0

	      W(I)=0.0_LDP
	      W(I)=0.0D0

	      WPREV(I)=0.0_LDP
	      WPREV(I)=0.0D0

	      GAM(I)=0.0_LDP
	      GAM(I)=0.0D0

	      PSI(I)=0.0_LDP
	      PSI(I)=0.0D0

	      PSIPREV(I)=0.0_LDP
	      PSIPREV(I)=0.0D0

	    SRCEBND=0.0_LDP
	    SRCEBND=0.0D0

	    HU(I)=F(I+1,ML)*Q(I+1)/(1.0_LDP+W(I))/DTAU(I)
	    HU(I)=F(I+1,ML)*Q(I+1)/(1.0D0+W(I))/DTAU(I)

	    HL(I)=F(I,ML)*Q(I)/(1.0_LDP+W(I))/DTAU(I)
	    HL(I)=F(I,ML)*Q(I)/(1.0D0+W(I))/DTAU(I)

	    HS(I)=WPREV(I)/(1.0_LDP+W(I))
	    HS(I)=WPREV(I)/(1.0D0+W(I))

	  TA(1)=0.0_LDP
	  TA(1)=0.0D0

	  VB(1)=0.0_LDP
	  VB(1)=0.0D0

	  VC(1)=0.0_LDP
	  VC(1)=0.0D0

	    XM(ND)=DBB*R(ND)*R(ND)/3.0_LDP/TCHI(ND)
	    XM(ND)=DBB*R(ND)*R(ND)/3.0D0/TCHI(ND)

	    XM(ND)=R(ND)*R(ND)*IC*(0.25_LDP+0.5_LDP*IN_HBC(ML))
	    XM(ND)=R(ND)*R(ND)*IC*(0.25D0+0.5D0*IN_HBC(ML))

	  TC(ND)=0.0_LDP
	  TC(ND)=0.0D0

	  VB(ND)=0.0_LDP
	  VB(ND)=0.0D0

	  VC(ND)=0.0_LDP
	  VC(ND)=0.0D0

	  PSIPREV(ND)=0.0_LDP
	  PSIPREV(ND)=0.0D0

	    TXD(ND)=R(ND)*R(ND)/3.0_LDP/TCHI(ND)+PSIPREV(ND)*TXD(ND)
	    TXD(ND)=R(ND)*R(ND)/3.0D0/TCHI(ND)+PSIPREV(ND)*TXD(ND)


var_mom_j_cmf_v6.f

	REAL(KIND=LDP), PARAMETER :: PROG_ID=2.2281463E+08_LDP  !Must be unique (VAR_MOM_)
	REAL(KIND=LDP), PARAMETER :: PROG_ID=2.2281463D+08  !Must be unique (VAR_MOM_)

	PSIPREV(NV-1)=1.0_LDP
	PSIPREV(NV-1)=1.0D0

	PSIPREV(NV)=1.0_LDP
	PSIPREV(NV)=1.0D0

	  PSIPREV(NV)=0.0_LDP
	  PSIPREV(NV)=0.0D0

	  JNU(I)=0.0_LDP
	  JNU(I)=0.0D0

	  RSQ_HNU(I)=0.0_LDP
	  RSQ_HNU(I)=0.0D0

	    THETA(I)=0.0_LDP
	    THETA(I)=0.0D0

	    JNUM1(I)=0.0_LDP
	    JNUM1(I)=0.0D0

	    RSQ_HNUM1(I)=0.0_LDP
	    RSQ_HNUM1(I)=0.0D0

	    GAMH(I)=0.0_LDP
	    GAMH(I)=0.0D0

	    GAM(I)=0.0_LDP
	    GAM(I)=0.0D0

	    W(I)=0.0_LDP
	    W(I)=0.0D0

	    WPREV(I)=0.0_LDP
	    WPREV(I)=0.0D0

	    PSI(I)=0.0_LDP
	    PSI(I)=0.0D0

	    PSIPREV(I)=0.0_LDP
	    PSIPREV(I)=0.0D0

	    TX_DIF_d_T(I)=0.0_LDP
	    TX_DIF_d_T(I)=0.0D0

	    TX_DIF_d_dTdR(I)=0.0_LDP
	    TX_DIF_d_dTdR(I)=0.0D0

	    EPS_A(I)=0.0_LDP
	    EPS_A(I)=0.0D0

	    EPS_B(I)=0.0_LDP
	    EPS_B(I)=0.0D0

	    EPS_PREV_A(I)=0.0_LDP
	    EPS_PREV_A(I)=0.0D0

	    EPS_PREV_B(I)=0.0_LDP
	    EPS_PREV_B(I)=0.0D0

	  RSQ_DTAUONQ(I)=0.5_LDP*R(I)*R(I)*(DTAU(I)+DTAU(I-1))/Q(I)
	  RSQ_DTAUONQ(I)=0.5D0*R(I)*R(I)*(DTAU(I)+DTAU(I-1))/Q(I)

	    AV_SIGMA=0.5_LDP*(SIGMA(I)+SIGMA(I+1))
	    AV_SIGMA=0.5D0*(SIGMA(I)+SIGMA(I+1))

	    GAMH(I)=2.0_LDP*3.33564E-06_LDP*(V(I)+V(I+1))/(R(I)+R(I+1))
	    GAMH(I)=2.0D0*3.33564D-06*(V(I)+V(I+1))/(R(I)+R(I+1))

	    W(I)=GAMH(I)*( 1.0_LDP+AV_SIGMA*G(I) )
	    W(I)=GAMH(I)*( 1.0D0+AV_SIGMA*G(I) )

	    WPREV(I)=GAMH(I)*( 1.0_LDP+AV_SIGMA*G_PREV(I) )
	    WPREV(I)=GAMH(I)*( 1.0D0+AV_SIGMA*G_PREV(I) )

	    EPS_A(I)=GAMH(I)*AV_SIGMA*RSQN_ON_RSQJ(I)/(1.0_LDP+W(I))
	    EPS_A(I)=GAMH(I)*AV_SIGMA*RSQN_ON_RSQJ(I)/(1.0D0+W(I))

	    EPS_PREV_A(I)=GAMH(I)*AV_SIGMA*RSQN_ON_RSQJ_PREV(I)/(1.0_LDP+W(I))
	    EPS_PREV_A(I)=GAMH(I)*AV_SIGMA*RSQN_ON_RSQJ_PREV(I)/(1.0D0+W(I))

	    GAM(I)=3.33564E-06_LDP*V(I)/R(I)/CHI(I)/dLOG_NU
	    GAM(I)=3.33564D-06*V(I)/R(I)/CHI(I)/dLOG_NU

	    PSI(I)=RSQ_DTAUONQ(I)*GAM(I)*( 1.0_LDP+SIGMA(I)*F(I) )
	    PSI(I)=RSQ_DTAUONQ(I)*GAM(I)*( 1.0D0+SIGMA(I)*F(I) )

	1                   ( 1.0_LDP+SIGMA(I)*F_PREV(I) )
	1                   ( 1.0D0+SIGMA(I)*F_PREV(I) )

	  HU(I)=R(I+1)*R(I+1)*F(I+1)*Q(I+1)/(1.0_LDP+W(I))/DTAU(I)
	  HU(I)=R(I+1)*R(I+1)*F(I+1)*Q(I+1)/(1.0D0+W(I))/DTAU(I)

	  HL(I)=R(I)*R(I)*F(I)*Q(I)/(1.0_LDP+W(I))/DTAU(I)
	  HL(I)=R(I)*R(I)*F(I)*Q(I)/(1.0D0+W(I))/DTAU(I)

	  HS(I)=WPREV(I)/(1.0_LDP+W(I))
	  HS(I)=WPREV(I)/(1.0D0+W(I))

	  TB(I)=RSQ_DTAUONQ(I)*(1.0_LDP-THETA(I)) + PSI(I) +HU(I-1) +HL(I)
	  TB(I)=RSQ_DTAUONQ(I)*(1.0D0-THETA(I)) + PSI(I) +HU(I-1) +HL(I)

	XM(1)=0.0_LDP
	XM(1)=0.0D0

	TA(1)=0.0_LDP
	TA(1)=0.0D0

	VB(1)=0.0_LDP
	VB(1)=0.0D0

	VC(1)=0.0_LDP
	VC(1)=0.0D0

	  XM(ND)=DBB*R(ND)*R(ND)/3.0_LDP/CHI(ND)
	  XM(ND)=DBB*R(ND)*R(ND)/3.0D0/CHI(ND)

	  XM(ND)=R(ND)*R(ND)*IC*(0.25_LDP+0.5_LDP*IN_HBC)
	  XM(ND)=R(ND)*R(ND)*IC*(0.25D0+0.5D0*IN_HBC)

	TC(ND)=0.0_LDP
	TC(ND)=0.0D0

	VB(ND)=0.0_LDP
	VB(ND)=0.0D0

	VC(ND)=0.0_LDP
	VC(ND)=0.0D0

	PSIPREV(ND)=0.0_LDP
	PSIPREV(ND)=0.0D0

	  TX_DIF_d_T(ND)=dDBBdT*R(ND)*R(ND)/3.0_LDP/CHI(ND) +
	  TX_DIF_d_T(ND)=dDBBdT*R(ND)*R(ND)/3.0D0/CHI(ND) +

	  TX_DIF_d_dTdR(ND)=DBB/dTdR*R(ND)*R(ND)/3.0_LDP/CHI(ND) +
	  TX_DIF_d_dTdR(ND)=DBB/dTdR*R(ND)*R(ND)/3.0D0/CHI(ND) +


var_mom_j_cmf_v7.f

	REAL(KIND=LDP), PARAMETER :: PROG_ID=2.2281463E+08_LDP  !Must be unique (VAR_MOM_)
	REAL(KIND=LDP), PARAMETER :: PROG_ID=2.2281463D+08  !Must be unique (VAR_MOM_)

	PSIPREV(NV-1)=1.0_LDP
	PSIPREV(NV-1)=1.0D0

	PSIPREV(NV)=1.0_LDP
	PSIPREV(NV)=1.0D0

	  PSIPREV(NV)=0.0_LDP
	  PSIPREV(NV)=0.0D0

	  JNU(I)=0.0_LDP
	  JNU(I)=0.0D0

	  RSQ_HNU(I)=0.0_LDP
	  RSQ_HNU(I)=0.0D0

	    JNUM1(I)=0.0_LDP
	    JNUM1(I)=0.0D0

	    RSQ_HNUM1(I)=0.0_LDP
	    RSQ_HNUM1(I)=0.0D0

	    GAMH(I)=0.0_LDP
	    GAMH(I)=0.0D0

	    GAM(I)=0.0_LDP
	    GAM(I)=0.0D0

	    W(I)=0.0_LDP
	    W(I)=0.0D0

	    WPREV(I)=0.0_LDP
	    WPREV(I)=0.0D0

	    PSI(I)=0.0_LDP
	    PSI(I)=0.0D0

	    PSIPREV(I)=0.0_LDP
	    PSIPREV(I)=0.0D0

	    TX_DIF_d_T(I)=0.0_LDP
	    TX_DIF_d_T(I)=0.0D0

	    TX_DIF_d_dTdR(I)=0.0_LDP
	    TX_DIF_d_dTdR(I)=0.0D0

	    EPS_A(I)=0.0_LDP
	    EPS_A(I)=0.0D0

	    EPS_B(I)=0.0_LDP
	    EPS_B(I)=0.0D0

	    EPS_PREV_A(I)=0.0_LDP
	    EPS_PREV_A(I)=0.0D0

	    EPS_PREV_B(I)=0.0_LDP
	    EPS_PREV_B(I)=0.0D0

	  RSQ_DTAUONQ(I)=0.5_LDP*R(I)*R(I)*(DTAU(I)+DTAU(I-1))/Q(I)
	  RSQ_DTAUONQ(I)=0.5D0*R(I)*R(I)*(DTAU(I)+DTAU(I-1))/Q(I)

	    AV_SIGMA=0.5_LDP*(SIGMA(I)+SIGMA(I+1))
	    AV_SIGMA=0.5D0*(SIGMA(I)+SIGMA(I+1))

	    GAMH(I)=2.0_LDP*3.33564E-06_LDP*(V(I)+V(I+1))/(R(I)+R(I+1))
	    GAMH(I)=2.0D0*3.33564D-06*(V(I)+V(I+1))/(R(I)+R(I+1))

	    W(I)=GAMH(I)*( 1.0_LDP+AV_SIGMA*G(I) )
	    W(I)=GAMH(I)*( 1.0D0+AV_SIGMA*G(I) )

	    WPREV(I)=GAMH(I)*( 1.0_LDP+AV_SIGMA*G_PREV(I) )
	    WPREV(I)=GAMH(I)*( 1.0D0+AV_SIGMA*G_PREV(I) )

	    EPS_A(I)=GAMH(I)*AV_SIGMA*RSQN_ON_RSQJ(I)/(1.0_LDP+W(I))
	    EPS_A(I)=GAMH(I)*AV_SIGMA*RSQN_ON_RSQJ(I)/(1.0D0+W(I))

	    EPS_PREV_A(I)=GAMH(I)*AV_SIGMA*RSQN_ON_RSQJ_PREV(I)/(1.0_LDP+W(I))
	    EPS_PREV_A(I)=GAMH(I)*AV_SIGMA*RSQN_ON_RSQJ_PREV(I)/(1.0D0+W(I))

	    GAM(I)=3.33564E-06_LDP*V(I)/R(I)/CHI(I)/dLOG_NU
	    GAM(I)=3.33564D-06*V(I)/R(I)/CHI(I)/dLOG_NU

	    PSI(I)=RSQ_DTAUONQ(I)*GAM(I)*( 1.0_LDP+SIGMA(I)*F(I) )
	    PSI(I)=RSQ_DTAUONQ(I)*GAM(I)*( 1.0D0+SIGMA(I)*F(I) )

	1                   ( 1.0_LDP+SIGMA(I)*F_PREV(I) )
	1                   ( 1.0D0+SIGMA(I)*F_PREV(I) )

	  HU(I)=R(I+1)*R(I+1)*F(I+1)*Q(I+1)/(1.0_LDP+W(I))/DTAU(I)
	  HU(I)=R(I+1)*R(I+1)*F(I+1)*Q(I+1)/(1.0D0+W(I))/DTAU(I)

	  HL(I)=R(I)*R(I)*F(I)*Q(I)/(1.0_LDP+W(I))/DTAU(I)
	  HL(I)=R(I)*R(I)*F(I)*Q(I)/(1.0D0+W(I))/DTAU(I)

	  HS(I)=WPREV(I)/(1.0_LDP+W(I))
	  HS(I)=WPREV(I)/(1.0D0+W(I))

	  TB(I)=RSQ_DTAUONQ(I)*(1.0_LDP-THETA(I)) + PSI(I) +HU(I-1) +HL(I)
	  TB(I)=RSQ_DTAUONQ(I)*(1.0D0-THETA(I)) + PSI(I) +HU(I-1) +HL(I)

	XM(1)=0.0_LDP
	XM(1)=0.0D0

	TA(1)=0.0_LDP
	TA(1)=0.0D0

	VB(1)=0.0_LDP
	VB(1)=0.0D0

	VC(1)=0.0_LDP
	VC(1)=0.0D0

	  XM(ND)=DBB*R(ND)*R(ND)/3.0_LDP/CHI(ND)
	  XM(ND)=DBB*R(ND)*R(ND)/3.0D0/CHI(ND)

	  XM(ND)=R(ND)*R(ND)*IC*(0.25_LDP+0.5_LDP*IN_HBC)
	  XM(ND)=R(ND)*R(ND)*IC*(0.25D0+0.5D0*IN_HBC)

	TC(ND)=0.0_LDP
	TC(ND)=0.0D0

	VB(ND)=0.0_LDP
	VB(ND)=0.0D0

	VC(ND)=0.0_LDP
	VC(ND)=0.0D0

	PSIPREV(ND)=0.0_LDP
	PSIPREV(ND)=0.0D0

	  TX_DIF_d_T(ND)=dDBBdT*R(ND)*R(ND)/3.0_LDP/CHI(ND) +
	  TX_DIF_d_T(ND)=dDBBdT*R(ND)*R(ND)/3.0D0/CHI(ND) +

	  TX_DIF_d_dTdR(ND)=DBB/dTdR*R(ND)*R(ND)/3.0_LDP/CHI(ND) +
	  TX_DIF_d_dTdR(ND)=DBB/dTdR*R(ND)*R(ND)/3.0D0/CHI(ND) +


var_mom_j_cmf_v8.f

	REAL(KIND=LDP), PARAMETER :: PROG_ID=2.2281463E+08_LDP  !Must be unique (VAR_MOM_)
	REAL(KIND=LDP), PARAMETER :: PROG_ID=2.2281463D+08  !Must be unique (VAR_MOM_)

	PSIPREV(NV-1)=1.0_LDP
	PSIPREV(NV-1)=1.0D0

	PSIPREV(NV)=1.0_LDP
	PSIPREV(NV)=1.0D0

	  PSIPREV(NV)=0.0_LDP
	  PSIPREV(NV)=0.0D0

	  JNU(I)=0.0_LDP
	  JNU(I)=0.0D0

	  RSQ_HNU(I)=0.0_LDP
	  RSQ_HNU(I)=0.0D0

	    JNUM1(I)=0.0_LDP
	    JNUM1(I)=0.0D0

	    RSQ_HNUM1(I)=0.0_LDP
	    RSQ_HNUM1(I)=0.0D0

	    GAMH(I)=0.0_LDP
	    GAMH(I)=0.0D0

	    GAM(I)=0.0_LDP
	    GAM(I)=0.0D0

	    W(I)=0.0_LDP
	    W(I)=0.0D0

	    WPREV(I)=0.0_LDP
	    WPREV(I)=0.0D0

	    PSI(I)=0.0_LDP
	    PSI(I)=0.0D0

	    PSIPREV(I)=0.0_LDP
	    PSIPREV(I)=0.0D0

	    TX_DIF_d_T(I)=0.0_LDP
	    TX_DIF_d_T(I)=0.0D0

	    TX_DIF_d_dTdR(I)=0.0_LDP
	    TX_DIF_d_dTdR(I)=0.0D0

	    EPS_A(I)=0.0_LDP
	    EPS_A(I)=0.0D0

	    EPS_B(I)=0.0_LDP
	    EPS_B(I)=0.0D0

	    EPS_PREV_A(I)=0.0_LDP
	    EPS_PREV_A(I)=0.0D0

	    EPS_PREV_B(I)=0.0_LDP
	    EPS_PREV_B(I)=0.0D0

	  RSQ_DTAUONQ(I)=0.5_LDP*R(I)*R(I)*(DTAU(I)+DTAU(I-1))/Q(I)
	  RSQ_DTAUONQ(I)=0.5D0*R(I)*R(I)*(DTAU(I)+DTAU(I-1))/Q(I)

	    AV_SIGMA=0.5_LDP*(SIGMA(I)+SIGMA(I+1))
	    AV_SIGMA=0.5D0*(SIGMA(I)+SIGMA(I+1))

	    GAMH(I)=2.0_LDP*3.33564E-06_LDP*(V(I)+V(I+1))/(R(I)+R(I+1))
	    GAMH(I)=2.0D0*3.33564D-06*(V(I)+V(I+1))/(R(I)+R(I+1))

	    W(I)=GAMH(I)*( 1.0_LDP+AV_SIGMA*G(I) )
	    W(I)=GAMH(I)*( 1.0D0+AV_SIGMA*G(I) )

	    WPREV(I)=GAMH(I)*( 1.0_LDP+AV_SIGMA*G_PREV(I) )
	    WPREV(I)=GAMH(I)*( 1.0D0+AV_SIGMA*G_PREV(I) )

	    EPS_A(I)=GAMH(I)*AV_SIGMA*RSQN_ON_RSQJ(I)/(1.0_LDP+W(I))
	    EPS_A(I)=GAMH(I)*AV_SIGMA*RSQN_ON_RSQJ(I)/(1.0D0+W(I))

	    EPS_PREV_A(I)=GAMH(I)*AV_SIGMA*RSQN_ON_RSQJ_PREV(I)/(1.0_LDP+W(I))
	    EPS_PREV_A(I)=GAMH(I)*AV_SIGMA*RSQN_ON_RSQJ_PREV(I)/(1.0D0+W(I))

	    GAM(I)=3.33564E-06_LDP*V(I)/R(I)/CHI(I)/dLOG_NU
	    GAM(I)=3.33564D-06*V(I)/R(I)/CHI(I)/dLOG_NU

	    PSI(I)=RSQ_DTAUONQ(I)*GAM(I)*( 1.0_LDP+SIGMA(I)*F(I) )
	    PSI(I)=RSQ_DTAUONQ(I)*GAM(I)*( 1.0D0+SIGMA(I)*F(I) )

	1                   ( 1.0_LDP+SIGMA(I)*F_PREV(I) )
	1                   ( 1.0D0+SIGMA(I)*F_PREV(I) )

	  HU(I)=R(I+1)*R(I+1)*F(I+1)*Q(I+1)/(1.0_LDP+W(I))/DTAU(I)
	  HU(I)=R(I+1)*R(I+1)*F(I+1)*Q(I+1)/(1.0D0+W(I))/DTAU(I)

	  HL(I)=R(I)*R(I)*F(I)*Q(I)/(1.0_LDP+W(I))/DTAU(I)
	  HL(I)=R(I)*R(I)*F(I)*Q(I)/(1.0D0+W(I))/DTAU(I)

	  HS(I)=WPREV(I)/(1.0_LDP+W(I))
	  HS(I)=WPREV(I)/(1.0D0+W(I))

	  TB(I)=RSQ_DTAUONQ(I)*(1.0_LDP-THETA(I)) + PSI(I) +HU(I-1) +HL(I)
	  TB(I)=RSQ_DTAUONQ(I)*(1.0D0-THETA(I)) + PSI(I) +HU(I-1) +HL(I)

	  TA(1)=0.0_LDP
	  TA(1)=0.0D0

	  VB(1)=0.0_LDP
	  VB(1)=0.0D0

	  VC(1)=0.0_LDP
	  VC(1)=0.0D0

	  PSI(1)=R(1)*R(1)*GAM(1)*(1.0_LDP+SIGMA(1)*F(1))
	  PSI(1)=R(1)*R(1)*GAM(1)*(1.0D0+SIGMA(1)*F(1))

	  PSIPREV(1)=R(1)*R(1)*GAM(1)*(1.0_LDP+SIGMA(1)*F_PREV(1))
	  PSIPREV(1)=R(1)*R(1)*GAM(1)*(1.0D0+SIGMA(1)*F_PREV(1))

	  T1=0.25_LDP*(CHI(2)+CHI(1))*(R(2)-R(1))
	  T1=0.25D0*(CHI(2)+CHI(1))*(R(2)-R(1))

	  TB(1)=-(HL(1)+R(1)*R(1)*HBC+EPS_A(1))/T1-PSI(1)-R(1)*R(1)*(1.0_LDP-THETA(1))
	  TB(1)=-(HL(1)+R(1)*R(1)*HBC+EPS_A(1))/T1-PSI(1)-R(1)*R(1)*(1.0D0-THETA(1))

	  XM(ND)=DBB*R(ND)*R(ND)/3.0_LDP/CHI(ND)
	  XM(ND)=DBB*R(ND)*R(ND)/3.0D0/CHI(ND)

	  XM(ND)=R(ND)*R(ND)*IC*(0.25_LDP+0.5_LDP*IN_HBC)
	  XM(ND)=R(ND)*R(ND)*IC*(0.25D0+0.5D0*IN_HBC)

	TC(ND)=0.0_LDP
	TC(ND)=0.0D0

	VB(ND)=0.0_LDP
	VB(ND)=0.0D0

	VC(ND)=0.0_LDP
	VC(ND)=0.0D0

	PSIPREV(ND)=0.0_LDP
	PSIPREV(ND)=0.0D0

	  TX_DIF_d_T(ND)=dDBBdT*R(ND)*R(ND)/3.0_LDP/CHI(ND) +
	  TX_DIF_d_T(ND)=dDBBdT*R(ND)*R(ND)/3.0D0/CHI(ND) +

	  TX_DIF_d_dTdR(ND)=DBB/dTdR*R(ND)*R(ND)/3.0_LDP/CHI(ND) +
	  TX_DIF_d_dTdR(ND)=DBB/dTdR*R(ND)*R(ND)/3.0D0/CHI(ND) +


var_mom_jext_cmf_v2.f

	REAL(KIND=LDP), PARAMETER :: PROG_ID=3.4281463E+08_LDP  !Must be unique (VAR_MOM_)
	REAL(KIND=LDP), PARAMETER :: PROG_ID=3.4281463D+08  !Must be unique (VAR_MOM_)

	PSIPREV(NV-1)=1.0_LDP
	PSIPREV(NV-1)=1.0D0

	PSIPREV(NV)=1.0_LDP
	PSIPREV(NV)=1.0D0

	  PSIPREV(NV)=0.0_LDP
	  PSIPREV(NV)=0.0D0

	JNU(1:ND)=0.0_LDP
	JNU(1:ND)=0.0D0

	RSQ_HNU(1:ND)=0.0_LDP
	RSQ_HNU(1:ND)=0.0D0

	  THETA(1:ND)=0.0_LDP
	  THETA(1:ND)=0.0D0

	  TX(:,:,:)=0.0_LDP			!ND*ND_SM*NM
	  TX(:,:,:)=0.0D0			!ND*ND_SM*NM

	  TVX(:,:,:)=0.0_LDP			!(ND-1)*ND_SM*NM
	  TVX(:,:,:)=0.0D0			!(ND-1)*ND_SM*NM

	    JNUM1(I)=0.0_LDP
	    JNUM1(I)=0.0D0

	    RSQ_HNUM1(I)=0.0_LDP
	    RSQ_HNUM1(I)=0.0D0

	    GAMH(I)=0.0_LDP
	    GAMH(I)=0.0D0

	    GAM(I)=0.0_LDP
	    GAM(I)=0.0D0

	    W(I)=0.0_LDP
	    W(I)=0.0D0

	    WPREV(I)=0.0_LDP
	    WPREV(I)=0.0D0

	    PSI(I)=0.0_LDP
	    PSI(I)=0.0D0

	    PSIPREV(I)=0.0_LDP
	    PSIPREV(I)=0.0D0

	    TX_DIF_d_T(I)=0.0_LDP
	    TX_DIF_d_T(I)=0.0D0

	    TX_DIF_d_dTdR(I)=0.0_LDP
	    TX_DIF_d_dTdR(I)=0.0D0

	    EPS_A(I)=0.0_LDP
	    EPS_A(I)=0.0D0

	    EPS_B(I)=0.0_LDP
	    EPS_B(I)=0.0D0

	    EPS_PREV_A(I)=0.0_LDP
	    EPS_PREV_A(I)=0.0D0

	    EPS_PREV_B(I)=0.0_LDP
	    EPS_PREV_B(I)=0.0D0

	  RSQ_DTAUONQ(I)=0.5_LDP*R(I)*R(I)*(DTAU(I)+DTAU(I-1))/Q(I)
	  RSQ_DTAUONQ(I)=0.5D0*R(I)*R(I)*(DTAU(I)+DTAU(I-1))/Q(I)

	    AV_SIGMA=0.5_LDP*(SIGMA(I)+SIGMA(I+1))
	    AV_SIGMA=0.5D0*(SIGMA(I)+SIGMA(I+1))

	    GAMH(I)=2.0_LDP*3.33564E-06_LDP*(V(I)+V(I+1))/(R(I)+R(I+1))
	    GAMH(I)=2.0D0*3.33564D-06*(V(I)+V(I+1))/(R(I)+R(I+1))

	    W(I)=GAMH(I)*( 1.0_LDP+AV_SIGMA*G(I) )
	    W(I)=GAMH(I)*( 1.0D0+AV_SIGMA*G(I) )

	    WPREV(I)=GAMH(I)*( 1.0_LDP+AV_SIGMA*G_PREV(I) )
	    WPREV(I)=GAMH(I)*( 1.0D0+AV_SIGMA*G_PREV(I) )

	    EPS_A(I)=GAMH(I)*AV_SIGMA*RSQN_ON_RSQJ(I)/(1.0_LDP+W(I))
	    EPS_A(I)=GAMH(I)*AV_SIGMA*RSQN_ON_RSQJ(I)/(1.0D0+W(I))

	    EPS_PREV_A(I)=GAMH(I)*AV_SIGMA*RSQN_ON_RSQJ_PREV(I)/(1.0_LDP+W(I))
	    EPS_PREV_A(I)=GAMH(I)*AV_SIGMA*RSQN_ON_RSQJ_PREV(I)/(1.0D0+W(I))

	    GAM(I)=3.33564E-06_LDP*V(I)/R(I)/CHI(I)/dLOG_NU
	    GAM(I)=3.33564D-06*V(I)/R(I)/CHI(I)/dLOG_NU

	    PSI(I)=RSQ_DTAUONQ(I)*GAM(I)*( 1.0_LDP+SIGMA(I)*F(I) )
	    PSI(I)=RSQ_DTAUONQ(I)*GAM(I)*( 1.0D0+SIGMA(I)*F(I) )

	1                   ( 1.0_LDP+SIGMA(I)*F_PREV(I) )
	1                   ( 1.0D0+SIGMA(I)*F_PREV(I) )

	  HU(I)=R(I+1)*R(I+1)*F(I+1)*Q(I+1)/(1.0_LDP+W(I))/DTAU(I)
	  HU(I)=R(I+1)*R(I+1)*F(I+1)*Q(I+1)/(1.0D0+W(I))/DTAU(I)

	  HL(I)=R(I)*R(I)*F(I)*Q(I)/(1.0_LDP+W(I))/DTAU(I)
	  HL(I)=R(I)*R(I)*F(I)*Q(I)/(1.0D0+W(I))/DTAU(I)

	  HS(I)=WPREV(I)/(1.0_LDP+W(I))
	  HS(I)=WPREV(I)/(1.0D0+W(I))

	  TB(I)=RSQ_DTAUONQ(I)*(1.0_LDP-THETA(I)) + PSI(I) +HU(I-1) +HL(I)
	  TB(I)=RSQ_DTAUONQ(I)*(1.0D0-THETA(I)) + PSI(I) +HU(I-1) +HL(I)

	XM(1)=0.0_LDP
	XM(1)=0.0D0

	TA(1)=0.0_LDP
	TA(1)=0.0D0

	VB(1)=0.0_LDP
	VB(1)=0.0D0

	VC(1)=0.0_LDP
	VC(1)=0.0D0

	  XM(ND)=DBB*R(ND)*R(ND)/3.0_LDP/CHI(ND)
	  XM(ND)=DBB*R(ND)*R(ND)/3.0D0/CHI(ND)

	  XM(ND)=R(ND)*R(ND)*IC*(0.25_LDP+0.5_LDP*IN_HBC)
	  XM(ND)=R(ND)*R(ND)*IC*(0.25D0+0.5D0*IN_HBC)

	TC(ND)=0.0_LDP
	TC(ND)=0.0D0

	VB(ND)=0.0_LDP
	VB(ND)=0.0D0

	VC(ND)=0.0_LDP
	VC(ND)=0.0D0

	PSIPREV(ND)=0.0_LDP
	PSIPREV(ND)=0.0D0

	  TX_DIF_d_T(ND)=dDBBdT*R(ND)*R(ND)/3.0_LDP/CHI(ND) +
	  TX_DIF_d_T(ND)=dDBBdT*R(ND)*R(ND)/3.0D0/CHI(ND) +

	  TX_DIF_d_dTdR(ND)=DBB/dTdR*R(ND)*R(ND)/3.0_LDP/CHI(ND) +
	  TX_DIF_d_dTdR(ND)=DBB/dTdR*R(ND)*R(ND)/3.0D0/CHI(ND) +


var_op_v4.f

	    VCHI(EQION,K)=VCHI(EQION,K)+ED(K)*TCHI2*(1.0_LDP-EMHNUKT(K))
	    VCHI(EQION,K)=VCHI(EQION,K)+ED(K)*TCHI2*(1.0D0-EMHNUKT(K))

	    VCHI(NT-1,K)=VCHI(NT-1,K)+DI_S(ION_LEV,K)*TCHI2*(1.0_LDP-EMHNUKT(K))
	    VCHI(NT-1,K)=VCHI(NT-1,K)+DI_S(ION_LEV,K)*TCHI2*(1.0D0-EMHNUKT(K))

	1        ( -0.5_LDP+(0.5_LDP-HNUONK/T(K))*EMHNUKT(K) )
	1        ( -0.5D0+(0.5D0-HNUONK/T(K))*EMHNUKT(K) )

	1        ( 0.5_LDP-HNUONK/T(K) )/T(K)
	1        ( 0.5D0-HNUONK/T(K) )/T(K)

	DIS_CONST(1:N_F)=-1.0_LDP
	DIS_CONST(1:N_F)=-1.0D0

	      NEFF=SQRT(3.289395_LDP*Z*Z/(EDGE_F(I)-NU))
	      NEFF=SQRT(3.289395*Z*Z/(EDGE_F(I)-NU))

	        T1=MIN(1.0_LDP,16.0_LDP*NEFF/(1+NEFF)/(1+NEFF)/3.0_LDP)
	        T1=MIN(1.0D0,16.0D0*NEFF/(1+NEFF)/(1+NEFF)/3.0D0)

	        DIS_CONST(I)=( T1*ZION_CUBED/(NEFF**4) )**1.5_LDP
	        DIS_CONST(I)=( T1*ZION_CUBED/(NEFF**4) )**1.5D0

	        ALPHA_VEC(I)=0.0_LDP
	        ALPHA_VEC(I)=0.0D0

	    YDIS(K)=1.091_LDP*(X_LEV_DIS(K)+4.0_LDP*(Z-1)*A_LEV_DIS(K))*
	    YDIS(K)=1.091*(X_LEV_DIS(K)+4.0D0*(Z-1)*A_LEV_DIS(K))*

	  DT_TERM(K)=( 1.5_LDP +
	  DT_TERM(K)=( 1.5D0 +

	          T1=7.782_LDP+XDIS(K)*DIS_CONST(I)
	          T1=7.782+XDIS(K)*DIS_CONST(I)

	1           (1.5_LDP+HDKT_ON_T(K)*EDGE_F(I)+dlnHNST_S_dlnT(L,K))/T(K)
	1           (1.5D0+HDKT_ON_T(K)*EDGE_F(I)+dlnHNST_S_dlnT(L,K))/T(K)

	  VCHI_TMP(:,:)=0.0_LDP
	  VCHI_TMP(:,:)=0.0D0

	    VCHI_ION(:)=0.0_LDP
	    VCHI_ION(:)=0.0D0

	    VCHI_T1(:)=0.0_LDP
	    VCHI_T1(:)=0.0D0

	    VCHI_T2(:)=0.0_LDP
	    VCHI_T2(:)=0.0D0

	          T1=7.782_LDP+XDIS(K)*DIS_CONST(I)
	          T1=7.782+XDIS(K)*DIS_CONST(I)

	1           (1.5_LDP+HDKT_ON_T(K)*EDGE_F(I)+dlnHNST_S_dlnT(L,K))
	1           (1.5D0+HDKT_ON_T(K)*EDGE_F(I)+dlnHNST_S_dlnT(L,K))


var_x_opa_eta_v2.f

	IF(ALPHA .LE. 0.0_LDP)RETURN
	IF(ALPHA .LE. 0.0D0)RETURN

	      VCHI(NT-1,J)=VCHI(NT-1,J)-2.0_LDP*TCHI1/ED(J)
	      VCHI(NT-1,J)=VCHI(NT-1,J)-2.0*TCHI1/ED(J)

	      VETA(NT-1,J)=VETA(NT-1,J)+2.0_LDP*TETA3/ED(J)
	      VETA(NT-1,J)=VETA(NT-1,J)+2.0*TETA3/ED(J)


vkifeau_ibc.f

	W(:,:)=0.0_LDP
	W(:,:)=0.0D0

	ALPHA=0.5_LDP*(R(1)-R(2))*UIK/DTAU(1)
	ALPHA=0.5D0*(R(1)-R(2))*UIK/DTAU(1)

	W(1,1)=ALPHA*Q(1)*(  1.0_LDP+(R(1)-R(2))/6.0_LDP*(A(2)-B(1))  )
	W(1,1)=ALPHA*Q(1)*(  1.0D0+(R(1)-R(2))/6.0D0*(A(2)-B(1))  )

	W(1,2)=ALPHA*Q(2)*(  1.0_LDP+(R(1)-R(2))/6.0_LDP*(B(2)-C(1))  )
	W(1,2)=ALPHA*Q(2)*(  1.0D0+(R(1)-R(2))/6.0D0*(B(2)-C(1))  )

	W(1,3)=ALPHA*Q(3)*(R(1)-R(2))*C(2)/6.0_LDP
	W(1,3)=ALPHA*Q(3)*(R(1)-R(2))*C(2)/6.0D0

	  UIJ=2.0_LDP*RJ(I)*R(I)*R(I)*F(I)*Q(I)/T1
	  UIJ=2.0D0*RJ(I)*R(I)*R(I)*F(I)*Q(I)/T1

	  ALPHA=( UIJ/DTAU(J)+(UIJ+UIK)/T1 )*(R(J)-R(I))*0.5_LDP
	  ALPHA=( UIJ/DTAU(J)+(UIJ+UIK)/T1 )*(R(J)-R(I))*0.5D0

	  BETA= ( UIK/DTAU(I)+(UIJ+UIK)/T1 )*(R(I)-R(K))*0.5_LDP
	  BETA= ( UIK/DTAU(I)+(UIJ+UIK)/T1 )*(R(I)-R(K))*0.5D0

	  IF(J .NE. 1)W(I,J-1)=-ALPHA*A(J)*(R(J)-R(I))*Q(J-1)/6.0_LDP
	  IF(J .NE. 1)W(I,J-1)=-ALPHA*A(J)*(R(J)-R(I))*Q(J-1)/6.0D0

	  W(I,J)=(  ALPHA*( 1.0_LDP+(R(J)-R(I))/6.0_LDP*(A(I)-B(J)) )
	  W(I,J)=(  ALPHA*( 1.0D0+(R(J)-R(I))/6.0D0*(A(I)-B(J)) )

	1            -BETA/6.0_LDP* (R(I)-R(K))*A(I)  )*Q(J)
	1            -BETA/6.0D0* (R(I)-R(K))*A(I)  )*Q(J)

	  W(I,K)=(  BETA*( 1.0_LDP+(R(I)-R(K))/6.0_LDP*(B(K)-C(I)) )
	  W(I,K)=(  BETA*( 1.0D0+(R(I)-R(K))/6.0D0*(B(K)-C(I)) )

	1            +ALPHA/6.0_LDP*(R(J)-R(I))*C(I)  )*Q(K)
	1            +ALPHA/6.0D0*(R(J)-R(I))*C(I)  )*Q(K)

	  W(I,I)=(  ALPHA*( 1.0_LDP+(R(J)-R(I))/6.0_LDP*(B(I)-C(J)) )
	  W(I,I)=(  ALPHA*( 1.0D0+(R(J)-R(I))/6.0D0*(B(I)-C(J)) )

	1       +BETA*( 1.0_LDP+(R(I)-R(K))/6.0_LDP*(A(K)-B(I)) )  )*Q(I)
	1       +BETA*( 1.0D0+(R(I)-R(K))/6.0D0*(A(K)-B(I)) )  )*Q(I)

	  IF(K .NE. ND)W(I,K+1)=BETA*C(K)*(R(I)-R(K))*Q(K+1)/6.0_LDP
	  IF(K .NE. ND)W(I,K+1)=BETA*C(K)*(R(I)-R(K))*Q(K+1)/6.0D0

	ALPHA=0.5_LDP*(R(ND-1)-R(ND))*UIJ/DTAU(ND-1)
	ALPHA=0.5D0*(R(ND-1)-R(ND))*UIJ/DTAU(ND-1)

	W(ND,ND-2)=-ALPHA*Q(ND-2)*(R(ND-1)-R(ND))*A(ND-1)/6.0_LDP
	W(ND,ND-2)=-ALPHA*Q(ND-2)*(R(ND-1)-R(ND))*A(ND-1)/6.0D0

	1            ( 1.0_LDP + (R(ND-1)-R(ND))*(A(ND)-B(ND-1))/6.0_LDP )
	1            ( 1.0D0 + (R(ND-1)-R(ND))*(A(ND)-B(ND-1))/6.0D0 )

	1            ( 1.0_LDP + (R(ND-1)-R(ND))*(B(ND)-C(ND-1))/6.0_LDP )
	1            ( 1.0D0 + (R(ND-1)-R(ND))*(B(ND)-C(ND-1))/6.0D0 )

	  W(ND,ND)=W(ND,ND)-R(ND)*R(ND)*DBB/CHI(ND)/CHI(ND)/3.0_LDP
	  W(ND,ND)=W(ND,ND)-R(ND)*R(ND)*DBB/CHI(ND)/CHI(ND)/3.0D0


voigt_1p0.f

	1  -1.1283800_LDP,-1.1059600_LDP,-1.0404800_LDP,-0.9370300_LDP,-0.8034600_LDP,-0.6494500_LDP,
	1  -1.1283800D0,-1.1059600D0,-1.0404800D0,-0.9370300D0,-0.8034600D0,-0.6494500D0,

	1  -0.4855200_LDP,-0.3219200_LDP,-0.1677200_LDP,-0.0301200_LDP, 0.0859400_LDP, 0.1778900_LDP,
	1  -0.4855200D0,-0.3219200D0,-0.1677200D0,-0.0301200D0, 0.0859400D0, 0.1778900D0,

	1   0.2453700_LDP, 0.2898100_LDP, 0.3139400_LDP, 0.3213000_LDP, 0.3157300_LDP, 0.3009400_LDP,
	1   0.2453700D0, 0.2898100D0, 0.3139400D0, 0.3213000D0, 0.3157300D0, 0.3009400D0,

	1   0.2802700_LDP, 0.2564800_LDP, 0.2317260_LDP, 0.2075280_LDP, 0.1848820_LDP, 0.1643410_LDP,
	1   0.2802700D0, 0.2564800D0, 0.2317260D0, 0.2075280D0, 0.1848820D0, 0.1643410D0,

	1   0.1461280_LDP, 0.1302360_LDP, 0.1165150_LDP, 0.1047390_LDP, 0.0946530_LDP, 0.0860050_LDP,
	1   0.1461280D0, 0.1302360D0, 0.1165150D0, 0.1047390D0, 0.0946530D0, 0.0860050D0,

	1   0.0785650_LDP, 0.0721290_LDP, 0.0665260_LDP, 0.0616150_LDP, 0.0572810_LDP, 0.0534300_LDP,
	1   0.0785650D0, 0.0721290D0, 0.0665260D0, 0.0616150D0, 0.0572810D0, 0.0534300D0,

	1   0.0499880_LDP, 0.0468940_LDP, 0.0440980_LDP, 0.0415610_LDP, 0.0392500_LDP, 0.0351950_LDP,
	1   0.0499880D0, 0.0468940D0, 0.0440980D0, 0.0415610D0, 0.0392500D0, 0.0351950D0,

	1   0.0317620_LDP, 0.0288240_LDP, 0.0262880_LDP, 0.0240810_LDP, 0.0221460_LDP, 0.0204410_LDP,
	1   0.0317620D0, 0.0288240D0, 0.0262880D0, 0.0240810D0, 0.0221460D0, 0.0204410D0,

	1   0.0189290_LDP, 0.0175820_LDP, 0.0163750_LDP, 0.0152910_LDP, 0.0143120_LDP, 0.0134260_LDP,
	1   0.0189290D0, 0.0175820D0, 0.0163750D0, 0.0152910D0, 0.0143120D0, 0.0134260D0,

	1   0.0126200_LDP, 0.0118860_LDP, 0.0112145_LDP, 0.0105990_LDP, 0.0100332_LDP, 0.0095119_LDP,
	1   0.0126200D0, 0.0118860D0, 0.0112145D0, 0.0105990D0, 0.0100332D0, 0.0095119D0,

	1   0.0090306_LDP, 0.0085852_LDP, 0.0081722_LDP, 0.0077885_LDP, 0.0074314_LDP, 0.0070985_LDP,
	1   0.0090306D0, 0.0085852D0, 0.0081722D0, 0.0077885D0, 0.0074314D0, 0.0070985D0,

	1   0.0067875_LDP, 0.0064967_LDP, 0.0062243_LDP, 0.0059688_LDP, 0.0057287_LDP, 0.0055030_LDP,
	1   0.0067875D0, 0.0064967D0, 0.0062243D0, 0.0059688D0, 0.0057287D0, 0.0055030D0,

	1   0.0052903_LDP, 0.0050898_LDP, 0.0049006_LDP, 0.0047217_LDP, 0.0045526_LDP, 0.0043924_LDP,
	1   0.0052903D0, 0.0050898D0, 0.0049006D0, 0.0047217D0, 0.0045526D0, 0.0043924D0,

	1   0.0042405_LDP, 0.0040964_LDP, 0.0039595_LDP/
	1   0.0042405D0, 0.0040964D0, 0.0039595D0/

	DATA C/122.6079_LDP,214.3823_LDP,181.9285_LDP,93.15558_LDP,30.18014_LDP,5.912626_LDP,5.641896E-01_LDP/
	DATA C/122.6079D0,214.3823D0,181.9285D0,93.15558D0,30.18014D0,5.912626D0,5.641896D-01/

	DATA D/122.6079_LDP,352.7306_LDP,457.3344_LDP,348.7039_LDP,170.3540_LDP,53.99291_LDP,10.47986_LDP/
	DATA D/122.6079D0,352.7306D0,457.3344D0,348.7039D0,170.3540D0,53.99291D0,10.47986D0/

	IF(A .GT. 0.1_LDP)THEN
	IF(A .GT. 0.1D0)THEN

	ELSE IF(A .EQ. 0.0_LDP)THEN
	ELSE IF(A .EQ. 0.0D0)THEN

	  V0=ABS(V)*10._LDP
	  V0=ABS(V)*10.D0

	    VOIGT=(1.0_LDP+A*A*(1.0_LDP-2*V*V))*EXP(-V*V) +
	    VOIGT=(1.0D0+A*A*(1.0D0-2*V*V))*EXP(-V*V) +

     	    V2=20.0_LDP+0.5_LDP*V0-N
     	    V2=20.0D0+0.5D0*V0-N

	    IF(V0 .LT. 50.0_LDP)VOIGT=VOIGT+EXP(-V*V)
	    IF(V0 .LT. 50.0D0)VOIGT=VOIGT+EXP(-V*V)

            VOIGT=(0.56419_LDP+0.846_LDP/(V*V))/(V*V)*A
            VOIGT=(0.56419D0+0.846D0/(V*V))/(V*V)*A

	VOIGT=VOIGT/1.772453851_LDP	  	!SQRT(PI)
	VOIGT=VOIGT/1.772453851D0	  	!SQRT(PI)


vsebyj_multi_v4.f


vsebyj_x_v3.f

	      ED_FAC=2.0_LDP*T3/ED(I)
	      ED_FAC=2.0D0*T3/ED(I)

	      T_FAC=T3*( HDKT*(NU(ML)-EDGE_B(1)-1.5_LDP)/T(I) +
	      T_FAC=T3*( HDKT*(NU(ML)-EDGE_B(1)-1.5D0)/T(I) +


vsebyj_x_v4.f

	      ED_FAC=2.0_LDP*T3/ED(I)
	      ED_FAC=2.0D0*T3/ED(I)

	1             HDKT*(EDGE_B(1)+1.5_LDP)/T(I) )/T(I)+T4*dJRECdT(I)
	1             HDKT*(EDGE_B(1)+1.5D0)/T(I) )/T(I)+T4*dJRECdT(I)


weight.f

	  W(1)=0.5_LDP*T1
	  W(1)=0.5D0*T1

	     W(I)=ABS(U(I+1)-U(I-1))*0.5_LDP
	     W(I)=ABS(U(I+1)-U(I-1))*0.5D0

	  W(1)=ABS(U(2)-U(1))*0.5_LDP
	  W(1)=ABS(U(2)-U(1))*0.5D0

	  W(N)=ABS(U(N)-U(N-1))*0.5_LDP
	  W(N)=ABS(U(N)-U(N-1))*0.5D0

	  T1=ABS(U(2)-U(1))/3.0_LDP
	  T1=ABS(U(2)-U(1))/3.0D0

	  T2=4.0_LDP*T1
	  T2=4.0D0*T1

	  W(:)=0.0_LDP
	  W(:)=0.0D0

	    W(N)=1.25_LDP*T1
	    W(N)=1.25D0*T1

	    W(N-1)=W(N-1)+2.0_LDP*T1
	    W(N-1)=W(N-1)+2.0D0*T1

	    W(N-2)=W(N-2)-0.25_LDP*T1
	    W(N-2)=W(N-2)-0.25D0*T1

	  W(:)=0.0_LDP
	  W(:)=0.0D0

	    W(I)=W(I)+(2.0_LDP*T1-T2)*TT/(6.0_LDP*T1)
	    W(I)=W(I)+(2.0D0*T1-T2)*TT/(6.0D0*T1)

	    W(I+1)=TT*TT*TT/(6.0_LDP*T1*T2)
	    W(I+1)=TT*TT*TT/(6.0D0*T1*T2)

	    W(I+2)=(2.0_LDP*T2-T1)*TT/(6.0_LDP*T2)
	    W(I+2)=(2.0D0*T2-T1)*TT/(6.0D0*T2)

	    W(N)=ABS(U(N)-U(N-1))*0.5_LDP
	    W(N)=ABS(U(N)-U(N-1))*0.5D0

	  W(:)=0.0_LDP
	  W(:)=0.0D0

	    IF(I .NE. 2)T2=ABS(ABS(U(I-2)-U(I-1))/T1-1.0_LDP)
	    IF(I .NE. 2)T2=ABS(ABS(U(I-2)-U(I-1))/T1-1.0D0)

	    IF(T2 .LT. 1.0E-06_LDP .AND. I .NE. 2)THEN
	    IF(T2 .LT. 1.0D-06 .AND. I .NE. 2)THEN

	      W(I)=W(I)+T1/3.0_LDP
	      W(I)=W(I)+T1/3.0D0

	      W(I-1)=W(I-1)+4.0_LDP*T1/3.0_LDP
	      W(I-1)=W(I-1)+4.0D0*T1/3.0D0

	      W(I-2)=W(I-2)+T1/3.0_LDP
	      W(I-2)=W(I-2)+T1/3.0D0

	      W(I)=W(I)+T1*0.5_LDP
	      W(I)=W(I)+T1*0.5D0

	      W(I-1)=W(I-1)+T1*0.50_LDP
	      W(I-1)=W(I-1)+T1*0.50D0


wr2d.f


wr2d_ma.f


wr2d_v2.f


wr_ad_cool.f


wr_art_heat.f

	IF(T1 .EQ. 0.0_LDP)RETURN
	IF(T1 .EQ. 0.0D0)RETURN


wrcoolgen.f

	    NETRR(I)=0.0_LDP
	    NETRR(I)=0.0D0

	    TOTRR(I)=0.0_LDP
	    TOTRR(I)=0.0D0


wrcoolgen_v2.f

	IF(SUM(NT_COOL) .NE. 0.0_LDP)THEN
	IF(SUM(NT_COOL) .NE. 0.0D0)THEN

	    NETRR(I)=0.0_LDP
	    NETRR(I)=0.0D0

	    TOTRR(I)=0.0_LDP
	    TOTRR(I)=0.0D0


wrcoolgen_v3.f

	IF(SUM(NT_COOL) .NE. 0.0_LDP)THEN
	IF(SUM(NT_COOL) .NE. 0.0D0)THEN

	  NETRR(I)=0.0_LDP
	  NETRR(I)=0.0D0

	  TOTRR(I)=0.0_LDP
	  TOTRR(I)=0.0D0


wr_cooling_term.f

	IF(T1 .EQ. 0.0_LDP)RETURN
	IF(T1 .EQ. 0.0D0)RETURN


writedc.f

	1                        :/,(X4E15.5_LDP))'
	1                        :/,(X4E15.5))'

	1                        :/,(X6E15.5_LDP))'
	1                        :/,(X6E15.5))'

	1            3E15.5_LDP,:/X,3E15.5_LDP,/:,(X,6E15.5_LDP))'
	1            3E15.5,:/X,3E15.5,/:,(X,6E15.5))'

	        T1=0.0_LDP
	        T1=0.0D0

	        T2=0.0_LDP
	        T2=0.0D0

	        T1=0.0_LDP
	        T1=0.0D0

	        T2=0.0_LDP
	        T2=0.0D0


writedc_v2.f

	1                        :/,(1X,4E15.5_LDP))'
	1                        :/,(1X,4E15.5))'

	1                        :/,(1X,6E15.5_LDP))'
	1                        :/,(1X,6E15.5))'

	1            3E15.5_LDP,:/,1X,3E15.5_LDP,/:,(1X,6E15.5_LDP))'
	1            3E15.5,:/,1X,3E15.5,/:,(1X,6E15.5))'

	        T1=0.0_LDP
	        T1=0.0D0

	        T2=0.0_LDP
	        T2=0.0D0

	        T1=0.0_LDP
	        T1=0.0D0

	        T2=0.0_LDP
	        T2=0.0D0


writedc_v3.f

	LOG_TEN=LOG(10.0_LDP)
	LOG_TEN=LOG(10.0D0)

	1                           3E15.5_LDP,:/,1X,3E15.5_LDP,/:,(1X,6E15.5_LDP))'
	1                           3E15.5,:/,1X,3E15.5,/:,(1X,6E15.5))'

	  T1=1.0_LDP
	  T1=1.0D0

	  IF(T1 .LT. -290.0_LDP)THEN
	  IF(T1 .LT. -290.0D0)THEN

	      T1=0.0_LDP
	      T1=0.0D0

	      T2=0.0_LDP
	      T2=0.0D0

	      T1=0.0_LDP
	      T1=0.0D0

	      T2=0.0_LDP
	      T2=0.0D0

	      T1=0.0_LDP
	      T1=0.0D0

	      T2=0.0_LDP
	      T2=0.0D0


write_direct_info.f


write_direct_info_v2.f


write_direct_info_v3.f


write_j_cmf_err.f


write_out_ew.f

	IF(LAMBDA_VAC .LT. 1.0E+05_LDP)THEN
	IF(LAMBDA_VAC .LT. 1.0D+05)THEN

	T1=1.0E-07_LDP*SPEED_OF_LIGHT()/LAMBDA_VAC		!Frequency in units of 10^15 Hz
	T1=1.0D-07*SPEED_OF_LIGHT()/LAMBDA_VAC		!Frequency in units of 10^15 Hz

	IF(LAMBDA_AIR .LT. 1.0E+05_LDP)THEN
	IF(LAMBDA_AIR .LT. 1.0D+05)THEN

	T1=2.997924E+10_LDP/(1.0E-08_LDP*LAMBDA_VAC) 	!Frequency(Hz)
	T1=2.997924D+10/(1.0D-08*LAMBDA_VAC) 	!Frequency(Hz)

	T1=1.0E-23_LDP*FLUX*T1/LAMBDA_VAC               !Flux -- ergs/cm^2/sec/Hz
	T1=1.0D-23*FLUX*T1/LAMBDA_VAC               !Flux -- ergs/cm^2/sec/Hz


write_vec.f


writv.f


writv_v2.f


wrrecomchk.f

	NETRR(:)=0.0_LDP                 !ND
	NETRR(:)=0.0D0                 !ND

	TOTRR(:)=0.0_LDP                 !ND
	TOTRR(:)=0.0D0                 !ND

	    ABS_SUM=0.0_LDP
	    ABS_SUM=0.0D0

	    NETRR(J)=200.0_LDP*(NETRR(J)+(CRR(J)-CPR(J))+DIERECOM(J)+ADDRECOM(J)
	    NETRR(J)=200.0D0*(NETRR(J)+(CRR(J)-CPR(J))+DIERECOM(J)+ADDRECOM(J)


wrrecomchk_v2.f

	NETRR(:)=0.0_LDP                 !ND
	NETRR(:)=0.0D0                 !ND

	TOTRR(:)=0.0_LDP                 !ND
	TOTRR(:)=0.0D0                 !ND

	    ABS_SUM=0.0_LDP
	    ABS_SUM=0.0D0

	    NETRR(J)=200.0_LDP*(NETRR(J)+(CRR(J)-CPR(J))+
	    NETRR(J)=200.0D0*(NETRR(J)+(CRR(J)-CPR(J))+


wrrecomchk_v3.f

	NETRR(:)=0.0_LDP                 !ND
	NETRR(:)=0.0D0                 !ND

	TOTRR(:)=0.0_LDP                 !ND
	TOTRR(:)=0.0D0                 !ND

	    ABS_SUM=0.0_LDP
	    ABS_SUM=0.0D0

	    NETRR(J)=200.0_LDP*(NETRR(J)+(CRR(J)-CPR(J))+
	    NETRR(J)=200.0D0*(NETRR(J)+(CRR(J)-CPR(J))+


wrrecomchk_v4.f

	NETRR(:)=0.0_LDP                 !ND
	NETRR(:)=0.0D0                 !ND

	TOTRR(:)=0.0_LDP                 !ND
	TOTRR(:)=0.0D0                 !ND

	    ABS_SUM=0.0_LDP
	    ABS_SUM=0.0D0

	    NETRR(J)=200.0_LDP*(NETRR(J)+(CRR(J)-CPR(J))+
	    NETRR(J)=200.0D0*(NETRR(J)+(CRR(J)-CPR(J))+


wr_x_info.f

	IF(ABS(VAL) .LT. 1 .OR. ABS(VAL) .GT. 1.0E+04_LDP)THEN
	IF(ABS(VAL) .LT. 1 .OR. ABS(VAL) .GT. 1.0E+04)THEN

	IF(ABUND .GT. 0.1_LDP)THEN
	IF(ABUND .GT. 0.1)THEN


x02ajf.f

	X02AJF=1.0E-15_LDP
	X02AJF=1.0D-15


xcross.f

	DATA SIG_C/0.194_LDP,0.526_LDP,0.850_LDP,0.930_LDP,0.997_LDP,1.06_LDP/
	DATA SIG_C/0.194,0.526,0.850,0.930,0.997,1.06/

	DATA SIG_N/0.142_LDP,0.371_LDP,0.595_LDP,0.643_LDP,0.683_LDP,0.717_LDP,0.747_LDP/
	DATA SIG_N/0.142,0.371,0.595,0.643,0.683,0.717,0.747/

	DATA SIG_O/0.109_LDP,0.275_LDP,0.439_LDP,0.470_LDP,0.496_LDP,0.518_LDP,0.537_LDP,0.554_LDP/
	DATA SIG_O/0.109,0.275,0.439,0.470,0.496,0.518,0.537,0.554/

	DATA S_C/2.95_LDP,2.76_LDP,2.51_LDP,2.49_LDP,2.48_LDP,2.47_LDP/
	DATA S_C/2.95,2.76,2.51,2.49,2.48,2.47/

	DATA S_N/2.95_LDP,2.79_LDP,2.57_LDP,2.55_LDP,2.54_LDP,2.54_LDP,2.53_LDP/
	DATA S_N/2.95,2.79,2.57,2.55,2.54,2.54,2.53/

	DATA S_O/2.95_LDP,2.81_LDP,2.62_LDP,2.61_LDP,2.60_LDP,2.59_LDP,2.59_LDP,2.58_LDP/
	DATA S_O/2.95,2.81,2.62,2.61,2.60,2.59,2.59,2.58/

	DATA ALPHA_C/1.287_LDP,1.325_LDP,1.0_LDP,1.0_LDP,1.0_LDP,1.0_LDP/
	DATA ALPHA_C/1.287,1.325,1.0,1.0,1.0,1.0/

	DATA ALPHA_N/1.287_LDP,1.314_LDP,1.0_LDP,1.0_LDP,1.0_LDP,1.0_LDP,1.0_LDP/
	DATA ALPHA_N/1.287,1.314,1.0,1.0,1.0,1.0,1.0/

	DATA ALPHA_O/1.287_LDP,1.308_LDP,1.0_LDP,1.0_LDP,1.0_LDP,1.0_LDP,1.0_LDP,1.0_LDP/
	DATA ALPHA_O/1.287,1.308,1.0,1.0,1.0,1.0,1.0,1.0/

	DATA SIG_NE/0.075_LDP,0.18_LDP,0.267_LDP,0.282_LDP,0.295_LDP,0.305_LDP,0.314_LDP,
	DATA SIG_NE/0.075,0.18,0.267,0.282,0.295,0.305,0.314,

	1           0.322_LDP,0.329_LDP,0.336_LDP/
	1           0.322,0.329,0.336/

	DATA SIG_MG/0.055_LDP,0.13_LDP,0.179_LDP,0.188_LDP,0.194_LDP,0.200_LDP,0.205_LDP,0.210_LDP,
	DATA SIG_MG/0.055,0.13,0.179,0.188,0.194,0.200,0.205,0.210,

	1           0.213_LDP,0.217_LDP,0.220_LDP,0.223_LDP/
	1           0.213,0.217,0.220,0.223/

	DATA SIG_SI/0.044_LDP,0.10_LDP,0.128_LDP,0.134_LDP,0.138_LDP,0.141_LDP,0.144_LDP,0.147_LDP,
	DATA SIG_SI/0.044,0.10,0.128,0.134,0.138,0.141,0.144,0.147,

	1           0.149_LDP,0.151_LDP,0.153_LDP,0.155_LDP,0.157_LDP,0.158_LDP/
	1           0.149,0.151,0.153,0.155,0.157,0.158/

	DATA SIG_S/0.035_LDP,0.08_LDP,0.096_LDP,0.099_LDP,0.102_LDP,0.105_LDP,0.106_LDP,0.108_LDP,
	DATA SIG_S/0.035,0.08,0.096,0.099,0.102,0.105,0.106,0.108,

	1           0.110_LDP,0.111_LDP,0.112_LDP,0.113_LDP,0.114_LDP,0.115_LDP,0.116_LDP,0.117_LDP/
	1           0.110,0.111,0.112,0.113,0.114,0.115,0.116,0.117/

	DATA S_NE/2.90_LDP,2.95_LDP,2.72_LDP,2.71_LDP,2.70_LDP,2.69_LDP,2.69_LDP,2.68_LDP,2.68_LDP,2.67_LDP/
	DATA S_NE/2.90,2.95,2.72,2.71,2.70,2.69,2.69,2.68,2.68,2.67/

	DATA S_MG/2.90_LDP,2.90_LDP,2.79_LDP,2.78_LDP,2.78_LDP,2.77_LDP,2.77_LDP,2.76_LDP,2.76_LDP,
	DATA S_MG/2.90,2.90,2.79,2.78,2.78,2.77,2.77,2.76,2.76,

	1         2.76_LDP,2.75_LDP,2.75_LDP/
	1         2.76,2.75,2.75/

	DATA S_SI/2.90_LDP,3.00_LDP,2.86_LDP,2.85_LDP,2.85_LDP,2.84_LDP,2.84_LDP,2.83_LDP,2.83_LDP,2.83_LDP,
	DATA S_SI/2.90,3.00,2.86,2.85,2.85,2.84,2.84,2.83,2.83,2.83,

	1         2.82_LDP,2.82_LDP,2.82_LDP,2.82_LDP/
	1         2.82,2.82,2.82,2.82/

	DATA S_S/2.90_LDP,3.00_LDP,2.92_LDP,2.91_LDP,2.91_LDP,2.90_LDP,2.90_LDP,2.89_LDP,2.89_LDP,2.89_LDP,
	DATA S_S/2.90,3.00,2.92,2.91,2.91,2.90,2.90,2.89,2.89,2.89,

	1        2.89_LDP,2.88_LDP,2.88_LDP,2.88_LDP,2.88_LDP,2.88_LDP/
	1        2.89,2.88,2.88,2.88,2.88,2.88/

	DATA ALPHA_NE/1.25_LDP,1.28_LDP,1.0_LDP,1.0_LDP,1.0_LDP,1.0_LDP,1.0_LDP,1.0_LDP,1.0_LDP,1.0_LDP/
	DATA ALPHA_NE/1.25,1.28,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0/

	DATA ALPHA_MG/1.22_LDP,1.25_LDP,1.0_LDP,1.0_LDP,1.0_LDP,1.0_LDP,1.0_LDP,1.0_LDP,1.0_LDP,1.0_LDP,
	DATA ALPHA_MG/1.22,1.25,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,

	1             1.0_LDP,1.0_LDP/
	1             1.0,1.0/

	DATA ALPHA_SI/1.20_LDP,1.20_LDP,1.0_LDP,1.0_LDP,1.0_LDP,1.0_LDP,1.0_LDP,1.0_LDP,1.0_LDP,1.0_LDP,
	DATA ALPHA_SI/1.20,1.20,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,

	1             1.0_LDP,1.0_LDP,1.0_LDP,1.0_LDP/
	1             1.0,1.0,1.0,1.0/

	DATA ALPHA_S/1.19_LDP,1.20_LDP,1.0_LDP,1.0_LDP,1.0_LDP,1.0_LDP,1.0_LDP,1.0_LDP,1.0_LDP,1.0_LDP,
	DATA ALPHA_S/1.19,1.20,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,

	1             1.0_LDP,1.0_LDP,1.0_LDP,1.0_LDP,1.0_LDP,1.0_LDP/
	1             1.0,1.0,1.0,1.0,1.0,1.0/

	CON_FAC=1.0_LDP/0.24191_LDP			!10^15 Hz to ev
	CON_FAC=1.0/0.24191			!10^15 Hz to ev

	XCROSS=0.0_LDP
	XCROSS=0.0D0

	IF(ZCORE .EQ. 6.0_LDP)THEN			!Carbon
	IF(ZCORE .EQ. 6.0)THEN			!Carbon

	  IF(U .GT. 1.0_LDP)RETURN
	  IF(U .GT. 1.0D0)RETURN

	  XCROSS=SIG_C(J)*(U**S_C(J))*(ALPHA_C(J)+ (1.0_LDP-ALPHA_C(J))*U )
	  XCROSS=SIG_C(J)*(U**S_C(J))*(ALPHA_C(J)+ (1.0-ALPHA_C(J))*U )

	ELSE IF(ZCORE .EQ. 7.0_LDP)THEN 		!Nitrogen
	ELSE IF(ZCORE .EQ. 7.0)THEN 		!Nitrogen

	  IF(U .GT. 1.0_LDP)RETURN
	  IF(U .GT. 1.0D0)RETURN

	  XCROSS=SIG_N(J)*(U**S_N(J))*(ALPHA_N(J)+ (1.0_LDP-ALPHA_N(J))*U )
	  XCROSS=SIG_N(J)*(U**S_N(J))*(ALPHA_N(J)+ (1.0-ALPHA_N(J))*U )

	ELSE IF(ZCORE .EQ. 8.0_LDP)THEN 		!Oxygen
	ELSE IF(ZCORE .EQ. 8.0)THEN 		!Oxygen

	  IF(U .GT. 1.0_LDP)RETURN
	  IF(U .GT. 1.0D0)RETURN

	  XCROSS=SIG_O(J)*(U**S_O(J))*(ALPHA_O(J)+ (1.0_LDP-ALPHA_O(J))*U )
	  XCROSS=SIG_O(J)*(U**S_O(J))*(ALPHA_O(J)+ (1.0-ALPHA_O(J))*U )

	ELSE IF(ZCORE .EQ. 10.0_LDP)THEN 		!Neon
	ELSE IF(ZCORE .EQ. 10.0)THEN 		!Neon

	  IF(U .GT. 1.0_LDP)RETURN
	  IF(U .GT. 1.0D0)RETURN

	  XCROSS=SIG_NE(J)*(U**S_NE(J))*(ALPHA_NE(J)+ (1.0_LDP-ALPHA_NE(J))*U )
	  XCROSS=SIG_NE(J)*(U**S_NE(J))*(ALPHA_NE(J)+ (1.0-ALPHA_NE(J))*U )

	ELSE IF(ZCORE .EQ. 12.0_LDP)THEN 		!Magnesium
	ELSE IF(ZCORE .EQ. 12.0)THEN 		!Magnesium

	  IF(U .GT. 1.0_LDP)RETURN
	  IF(U .GT. 1.0D0)RETURN

	  XCROSS=SIG_MG(J)*(U**S_MG(J))*(ALPHA_MG(J)+ (1.0_LDP-ALPHA_MG(J))*U )
	  XCROSS=SIG_MG(J)*(U**S_MG(J))*(ALPHA_MG(J)+ (1.0-ALPHA_MG(J))*U )

	ELSE IF(ZCORE .EQ. 14.0_LDP)THEN 		!Silicon
	ELSE IF(ZCORE .EQ. 14.0)THEN 		!Silicon

	  IF(U .GT. 1.0_LDP)RETURN
	  IF(U .GT. 1.0D0)RETURN

	  XCROSS=SIG_SI(J)*(U**S_SI(J))*(ALPHA_SI(J)+ (1.0_LDP-ALPHA_SI(J))*U )
	  XCROSS=SIG_SI(J)*(U**S_SI(J))*(ALPHA_SI(J)+ (1.0-ALPHA_SI(J))*U )

	ELSE IF(ZCORE .EQ. 16.0_LDP)THEN 		!Sulpher
	ELSE IF(ZCORE .EQ. 16.0)THEN 		!Sulpher

	  IF(U .GT. 1.0_LDP)RETURN
	  IF(U .GT. 1.0D0)RETURN

	  XCROSS=SIG_S(J)*(U**S_S(J))*(ALPHA_S(J)+ (1.0_LDP-ALPHA_S(J))*U )
	  XCROSS=SIG_S(J)*(U**S_S(J))*(ALPHA_S(J)+ (1.0-ALPHA_S(J))*U )

	ELSE IF(ZCORE .EQ. 1.0_LDP .OR. ZCORE .EQ. 2.0_LDP)THEN
	ELSE IF(ZCORE .EQ. 1.0 .OR. ZCORE .EQ. 2.0)THEN

	XCROSS=XCROSS*1.0E-08_LDP
	XCROSS=XCROSS*1.0D-08


x_rrr_cool_v4.f

	    NET_X_RR(J)=0.0_LDP
	    NET_X_RR(J)=0.0D0

	    X_BFCR(J)=0.0_LDP
	    X_BFCR(J)=0.0D0


x_rrr_cool_v5.f

        H=6.6261965E-12_LDP
        H=6.6261965D-12

	    NET_X_RR(J)=0.0_LDP
	    NET_X_RR(J)=0.0D0

	    X_BFCR(J)=0.0_LDP
	    X_BFCR(J)=0.0D0

	      A1=0.0_LDP
	      A1=0.0D0


x_rrr_cool_v6.f

        H=PLANCKS_CONSTANT()*1.0E+15_LDP
        H=PLANCKS_CONSTANT()*1.0D+15

	    NET_X_RR(J)=0.0_LDP
	    NET_X_RR(J)=0.0D0

	    X_BFCR(J)=0.0_LDP
	    X_BFCR(J)=0.0D0

	      IF(JREC(J) .GT. 0 .AND. A1 .LE. 280.0_LDP)THEN
	      IF(JREC(J) .GT. 0 .AND. A1 .LE. 280.0D0)THEN

	         A1=0.0_LDP
	         A1=0.0D0


xvecd.f

	X(1)=0.0_LDP
	X(1)=0.0D0

	  X(I)=-SOURCE(I)*(DTAU(I-1)+DTAU(I))*0.5_LDP
	  X(I)=-SOURCE(I)*(DTAU(I-1)+DTAU(I))*0.5D0

	  X(NI)=0.5_LDP*DTAU(NI-1)*SOURCE(NI)
	  X(NI)=0.5D0*DTAU(NI-1)*SOURCE(NI)


zalongp.f


zero_2d_mat.f

	    A(I,J)=0.0_LDP
	    A(I,J)=0.0D0


zero.f

	Z(:)=0.0_LDP
	Z(:)=0.0D0

