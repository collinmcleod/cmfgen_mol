
adjust_jes.f

	1                    (EXP(HDKT*NU(1:NCF)/T_ELEC)-1.0_LDP)
	1                    (EXP(HDKT*NU(1:NCF)/T_ELEC)-1.0D0)

	DO WHILE(NU(I) .GT. 1.5_LDP*T_ELEC)
	DO WHILE(NU(I) .GT. 1.5D0*T_ELEC)

          PLANCK_NU(I)=T1*NU(ML-1)+(1.0_LDP-T1)*NU(ML)
          PLANCK_NU(I)=T1*NU(ML-1)+(1.0D0-T1)*NU(ML)

	  PLANCK_NU(ML)=1.0_LDP/( 1.0_LDP/NU(ML) - T1)
	  PLANCK_NU(ML)=1.0D0/( 1.0D0/NU(ML) - T1)

	  PLANCK_ES(ML)=T1*D(I+1)+(1.0_LDP-T1)*D(I)
	  PLANCK_ES(ML)=T1*D(I+1)+(1.0D0-T1)*D(I)

	  J_ES(ML)=T1*LOG_J_ES(I+1)+(1.0_LDP-T1)*LOG_J_ES(I)
	  J_ES(ML)=T1*LOG_J_ES(I+1)+(1.0D0-T1)*LOG_J_ES(I)


adjust_jes_v2.f

	1                    (EXP(HDKT*NU(1:NCF)/T_ELEC)-1.0_LDP)
	1                    (EXP(HDKT*NU(1:NCF)/T_ELEC)-1.0D0)

	DO WHILE(NU(I) .GT. 1.5_LDP*T_ELEC)
	DO WHILE(NU(I) .GT. 1.5D0*T_ELEC)

          PLANCK_NU(I)=T1*NU(ML-1)+(1.0_LDP-T1)*NU(ML)
          PLANCK_NU(I)=T1*NU(ML-1)+(1.0D0-T1)*NU(ML)

	  PLANCK_NU(ML)=1.0_LDP/( 1.0_LDP/NU(ML) - T1)
	  PLANCK_NU(ML)=1.0D0/( 1.0D0/NU(ML) - T1)

	  PLANCK_ES(ML)=T1*D(I+1)+(1.0_LDP-T1)*D(I)
	  PLANCK_ES(ML)=T1*D(I+1)+(1.0D0-T1)*D(I)

	  J_ES(ML)=T1*LOG_J_ES(I+1)+(1.0_LDP-T1)*LOG_J_ES(I)
	  J_ES(ML)=T1*LOG_J_ES(I+1)+(1.0D0-T1)*LOG_J_ES(I)


clip.f

	  FREQ(1:4,I)=1.0E-07_LDP*SPEED_OF_LIGHT()/FREQ(1:4,I)
	  FREQ(1:4,I)=1.0D-07*SPEED_OF_LIGHT()/FREQ(1:4,I)

	  X_SUM=0.0_LDP; XSQ_SUM=0.0_LDP; Y_SUM=0.0_LDP;; XY_SUM=0.0_LDP
	  X_SUM=0.0D0; XSQ_SUM=0.0D0; Y_SUM=0.0D0;; XY_SUM=0.0D0


cnvlv_es_one_par_v2.f

	BETA=1.84E-03_LDP*SQRT(T_ELEC)
	BETA=1.84E-03*SQRT(T_ELEC)

	T1=0.5_LDP*BETA*BETA
	T1=0.5D0*BETA*BETA

	C(1)=0.0_LDP
	C(1)=0.0D0

	A(1)=0.0_LDP
	A(1)=0.0D0

	B(1)=-1.0_LDP
	B(1)=-1.0D0

	  DH=0.5_LDP*(D1+D2)
	  DH=0.5*(D1+D2)

	  B(ML)=-1.0_LDP
	  B(ML)=-1.0D0

	B(NCF)=-1.0_LDP
	B(NCF)=-1.0D0

	 T1=4.7994_LDP*NU(ML)/T_ELEC
	 T1=4.7994*NU(ML)/T_ELEC

	 T1=4.7994_LDP*NU(ML)/T_ELEC
	 T1=4.7994*NU(ML)/T_ELEC

	OLD_FLUX=0.0_LDP
	OLD_FLUX=0.0D0

	NEW_FLUX=0.0_LDP
	NEW_FLUX=0.0D0

	T1=200.0_LDP*(OLD_FLUX-NEW_FLUX)/(OLD_FLUX+NEW_FLUX)
	T1=200.0D0*(OLD_FLUX-NEW_FLUX)/(OLD_FLUX+NEW_FLUX)

	OLD_N_PHOT=0.0_LDP
	OLD_N_PHOT=0.0D0

	NEW_N_PHOT=0.0_LDP
	NEW_N_PHOT=0.0D0

	T1=200.0_LDP*(OLD_N_PHOT-NEW_N_PHOT)/(OLD_N_PHOT+NEW_N_PHOT)
	T1=200.0D0*(OLD_N_PHOT-NEW_N_PHOT)/(OLD_N_PHOT+NEW_N_PHOT)


cnvlv_es_two_par_v2.f

	DATA ACOEF/1.690703717290_LDP,-0.690703717290_LDP/
	DATA ACOEF/1.690703717290D0,-0.690703717290D0/

	DATA BCOEF/1.614249968779_LDP,2.154326524957_LDP/
	DATA BCOEF/1.614249968779D0,2.154326524957D0/

	C_STORE(1)=-2.0_LDP/( LOG(NU(1)/NU(2)) )**2
	C_STORE(1)=-2.0D0/( LOG(NU(1)/NU(2)) )**2

	  DH=0.5_LDP*(D1+D2)
	  DH=0.5*(D1+D2)

	  A_STORE(ML)=-1.0_LDP/D1/DH
	  A_STORE(ML)=-1.0D0/D1/DH

	  C_STORE(ML)=-1.0_LDP/D2/DH
	  C_STORE(ML)=-1.0D0/D2/DH

	A_STORE(NCF)=-2.0_LDP/( LOG(NU(NCF-1)/NU(NCF)) )**2
	A_STORE(NCF)=-2.0D0/( LOG(NU(NCF-1)/NU(NCF)) )**2

	C_STORE(NCF)=0.0_LDP
	C_STORE(NCF)=0.0D0

	BETA=1.84E-03_LDP*SQRT(T_ELEC)
	BETA=1.84E-03*SQRT(T_ELEC)

	J_ES(:)=0.0_LDP
	J_ES(:)=0.0D0

	  H(:)=-1.0_LDP
	  H(:)=-1.0D0

	OLD_FLUX=0.0_LDP
	OLD_FLUX=0.0D0

	NEW_FLUX=0.0_LDP
	NEW_FLUX=0.0D0

	T1=200.0_LDP*(OLD_FLUX-NEW_FLUX)/(OLD_FLUX+NEW_FLUX)
	T1=200.0D0*(OLD_FLUX-NEW_FLUX)/(OLD_FLUX+NEW_FLUX)

	OLD_N_PHOT=0.0_LDP
	OLD_N_PHOT=0.0D0

	NEW_N_PHOT=0.0_LDP
	NEW_N_PHOT=0.0D0

	T1=200.0_LDP*(OLD_N_PHOT-NEW_N_PHOT)/(OLD_N_PHOT+NEW_N_PHOT)
	T1=200.0D0*(OLD_N_PHOT-NEW_N_PHOT)/(OLD_N_PHOT+NEW_N_PHOT)


cnvrt.f

	KEV_TO_HZ=0.241838E+03_LDP
	KEV_TO_HZ=0.241838E+03

	ANG_TO_HZ=SPEED_OF_LIGHT()*1.0E-07_LDP  	!10^8/10^15
	ANG_TO_HZ=SPEED_OF_LIGHT()*1.0D-07  	!10^8/10^15

	      T1=1.0E-08_LDP			!*1.0E-23*1.0E+15
	      T1=1.0D-08			!*1.0E-23*1.0E+15

	    T1=1.0E-01_LDP/C_CMS	  	!1.0E-23*1.0E+30*1.0E-08
	    T1=1.0E-01/C_CMS	  	!1.0E-23*1.0E+30*1.0E-08

	    T1=1.0E-08_LDP		  	!1.0E-23*1.0E+15
	    T1=1.0E-08		  	!1.0E-23*1.0E+15

	    XV(I)=0.1_LDP*ANG_TO_HZ/XV(I)
	    XV(I)=0.1D0*ANG_TO_HZ/XV(I)

	    XV(I)=1.0E-04_LDP*ANG_TO_HZ/XV(I)
	    XV(I)=1.0D-04*ANG_TO_HZ/XV(I)

	    XV(I)=1.0E+03_LDP*XV(I)/KEV_TO_HZ
	    XV(I)=1.0D+03*XV(I)/KEV_TO_HZ

	    XV(I)=1.0E-08_LDP*C_CMS*(ANG_TO_HZ/XV(I)-LAMC)/LAMC
	    XV(I)=1.0D-08*C_CMS*(ANG_TO_HZ/XV(I)-LAMC)/LAMC

	    XV(I)=1.0E-05_LDP*C_CMS*(ANG_TO_HZ/XV(I)-LAMC)/LAMC
	    XV(I)=1.0D-05*C_CMS*(ANG_TO_HZ/XV(I)-LAMC)/LAMC


cnvrt_j.f

	KEV_TO_HZ=0.241838E+03_LDP
	KEV_TO_HZ=0.241838E+03

	ANG_TO_HZ=SPEED_OF_LIGHT()*1.0E-07_LDP  	!10^8/10^15
	ANG_TO_HZ=SPEED_OF_LIGHT()*1.0D-07  	!10^8/10^15

	      T1=1.0E+15_LDP
	      T1=1.0D+15

	    T1=1.0E+22_LDP/C_CMS	  	!1.0E+30*1.0E-08
	    T1=1.0E+22/C_CMS	  	!1.0E+30*1.0E-08

	    XV(I)=1.0E-04_LDP*ANG_TO_HZ/XV(I)
	    XV(I)=1.0D-04*ANG_TO_HZ/XV(I)

	    XV(I)=1.0E+03_LDP*XV(I)/KEV_TO_HZ
	    XV(I)=1.0D+03*XV(I)/KEV_TO_HZ

	    XV(I)=1.0E-08_LDP*C_CMS*(ANG_TO_HZ/XV(I)-LAMC)/LAMC
	    XV(I)=1.0D-08*C_CMS*(ANG_TO_HZ/XV(I)-LAMC)/LAMC

	    XV(I)=1.0E-05_LDP*C_CMS*(ANG_TO_HZ/XV(I)-LAMC)/LAMC
	    XV(I)=1.0D-05*C_CMS*(ANG_TO_HZ/XV(I)-LAMC)/LAMC


cnvrt_j_v2.f

	KEV_TO_HZ=0.241838E+03_LDP
	KEV_TO_HZ=0.241838E+03

	ANG_TO_HZ=SPEED_OF_LIGHT()*1.0E-07_LDP  	!10^8/10^15
	ANG_TO_HZ=SPEED_OF_LIGHT()*1.0D-07  	!10^8/10^15

	      T1=1.0E+15_LDP
	      T1=1.0D+15

	    T1=1.0E+22_LDP/C_CMS	  	!1.0E+30*1.0E-08
	    T1=1.0E+22/C_CMS	  	!1.0E+30*1.0E-08

	    XV(I)=1.0E-04_LDP*ANG_TO_HZ/XV(I)
	    XV(I)=1.0D-04*ANG_TO_HZ/XV(I)

	    XV(I)=1.0E+03_LDP*XV(I)/KEV_TO_HZ
	    XV(I)=1.0D+03*XV(I)/KEV_TO_HZ

	    XV(I)=1.0E-08_LDP*C_CMS*(ANG_TO_HZ/XV(I)-LAMC)/LAMC
	    XV(I)=1.0D-08*C_CMS*(ANG_TO_HZ/XV(I)-LAMC)/LAMC

	    XV(I)=1.0E-05_LDP*C_CMS*(ANG_TO_HZ/XV(I)-LAMC)/LAMC
	    XV(I)=1.0D-05*C_CMS*(ANG_TO_HZ/XV(I)-LAMC)/LAMC


comp_ip_ew.f

	ANG_TO_HZ=SPEED_OF_LIGHT()*1.0E-07_LDP      !10^8/10^15
	ANG_TO_HZ=SPEED_OF_LIGHT()*1.0D-07      !10^8/10^15

	  YV(1:NCF)=0.0_LDP
	  YV(1:NCF)=0.0D0

	      YV(ML)=YV(ML)+0.5_LDP*(IP(J,ML)*P(J)+IP(J+1,ML)*P(J+1))*(P(J+1)-P(J))
	      YV(ML)=YV(ML)+0.5D0*(IP(J,ML)*P(J)+IP(J+1,ML)*P(J+1))*(P(J+1)-P(J))

	  PI=4.0_LDP*ATAN(1.0_LDP)
	  PI=4.0D0*ATAN(1.0D0)

          T1=DISTANCE*1.0E+03_LDP*PARSEC()
          T1=DISTANCE*1.0D+03*PARSEC()

	  T1=2.0_LDP*PI*1.0E+23_LDP*(1.0E+10_LDP/T1)**2
	  T1=2.0D0*PI*1.0D+23*(1.0E+10/T1)**2

	  T1=1.0E-23_LDP*1.0E+15_LDP
	  T1=1.0D-23*1.0D+15

	  L=0; CONT_FLUX_B=0.0_LDP
	  L=0; CONT_FLUX_B=0.0D0

	  L=0; CONT_FLUX_R=0.0_LDP
	  L=0; CONT_FLUX_R=0.0D0

	     YV(ML)=YV(ML)/T2-1.0_LDP
	     YV(ML)=YV(ML)/T2-1.0D0

	   EW(P_INDX)=0.0_LDP
	   EW(P_INDX)=0.0D0

	     EW(P_INDX)=EW(P_INDX)+0.5_LDP*(YV(ML)+YV(ML+1))*(LAM(ML+1)-LAM(ML))
	     EW(P_INDX)=EW(P_INDX)+0.5D0*(YV(ML)+YV(ML+1))*(LAM(ML+1)-LAM(ML))

	P(1)=0.1_LDP*P(2)
	P(1)=0.1*P(2)

	  XV(1:NP)=LOG10(P(1:NP)*1.0E+10_LDP/1.49597E+13_LDP)
	  XV(1:NP)=LOG10(P(1:NP)*1.0D+10/1.49597D+13)

	  T1=1.0E+10_LDP*206265.0_LDP/(DISTANCE*1.0E+03_LDP*PARSEC())
	  T1=1.0E+10*206265.0D0/(DISTANCE*1.0E+03*PARSEC())

	  CONT_FLUX=1.0E+23_LDP*CONT_FLUX*LINE_WAVELENGTH/(1.0E+15_LDP*LINE_FREQUENCY)
	  CONT_FLUX=1.0D+23*CONT_FLUX*LINE_WAVELENGTH/(1.0D+15*LINE_FREQUENCY)


compute_tau_radial.f

	C_KMS=1.0E-05_LDP*SPEED_OF_LIGHT()
	C_KMS=1.0D-05*SPEED_OF_LIGHT()

	  T1=SQRT( (1.0_LDP+NEW_VEL(I)/C_KMS)/(1.0_LDP-NEW_VEL(I)/C_KMS) )
	  T1=SQRT( (1.0+NEW_VEL(I)/C_KMS)/(1.0-NEW_VEL(I)/C_KMS) )

	TAU(1:NF)=NEW_CHI(1,1:NF)*R(1)/10.0_LDP
	TAU(1:NF)=NEW_CHI(1,1:NF)*R(1)/10.0D0

	    TAU(ML)=TAU(ML)+0.5_LDP*(NEW_R(I-1)-NEW_R(I))*(NEW_CHI(I-1,ML)+NEW_CHI(I,ML))
	    TAU(ML)=TAU(ML)+0.5D0*(NEW_R(I-1)-NEW_R(I))*(NEW_CHI(I-1,ML)+NEW_CHI(I,ML))

	T1=0.0_LDP	
	T1=0.0D0	

	IF(T1 .EQ. 0.0_LDP)THEN
	IF(T1 .EQ. 0.0D0)THEN


convolve.f

	if(vsini .ne. 0.0_LDP)then
	if(vsini .ne. 0.0d0)then

	  extend=2*(wave_max+wave_min)*vsini/3.0E+05_LDP
	  extend=2*(wave_max+wave_min)*vsini/3.0e+05

	else if(resolution .ne. 0.0_LDP)then
	else if(resolution .ne. 0.0d0)then

	  model_res=min(0.2_LDP*vsini/c_kms,model_res)
	  model_res=min(0.2d0*vsini/c_kms,model_res)

	  model_res=min(0.2_LDP*inst_res,model_res)
	  model_res=min(0.2d0*inst_res,model_res)

	  model_res=min(0.2_LDP*inst_res,model_res)
	  model_res=min(0.2d0*inst_res,model_res)

	kernal_sig = inst_res/2.35482_LDP
	kernal_sig = inst_res/2.35482

	t1=0.5_LDP*(wave_min+wave_max)
	t1=0.5D0*(wave_min+wave_max)

	answer(1:Nmod)=0.0_LDP
	answer(1:Nmod)=0.0d0

	  a2=1.0_LDP
	  a2=1.0d0

	  a1=2.0_LDP/jimpi
	  a1=2.0D0/jimpi

	  a2=0.5_LDP*epsilon/(1.0_LDP-epsilon)
	  a2=0.5D0*epsilon/(1.0D0-epsilon)

	      response(i)=0.0_LDP
	      response(i)=0.0d0

	  lambda = 0.0_LDP                      ! a gaussian centered about
	  lambda = 0.0D0                      ! a gaussian centered about

	    t1=1.0_LDP-((lambda-mu)/dlam_rot)**2
	    t1=1.0d0-((lambda-mu)/dlam_rot)**2

	    IF(t1 .le. 0.0_LDP)then
	    IF(t1 .le. 0.0D0)then

	      response(i)=0.0_LDP
	      response(i)=0.0d0

	dlamover2 = 0.5_LDP*dlam
	dlamover2 = 0.5d0*dlam


create_gauss.f

	LAM_ST=LAM_CENT-NX*dX/2.0_LDP
	LAM_ST=LAM_CENT-NX*dX/2.0D0

	  YVEC(I)=1.0_LDP+HEIGHT*EXP(-0.5_LDP*((XVEC(I)-LAM_CENT)/SIGMA)**2 )
	  YVEC(I)=1.0D0+HEIGHT*EXP(-0.5D0*((XVEC(I)-LAM_CENT)/SIGMA)**2 )


determ_reddening.f

	CHI_SQ_SVE=1.0E+200_LDP
	CHI_SQ_SVE=1.0D+200

	ANG_TO_HZ=SPEED_OF_LIGHT()*1.0E-07_LDP      !10^8/10^15
	ANG_TO_HZ=SPEED_OF_LIGHT()*1.0D-07      !10^8/10^15

	  OBS(I)=0.0_LDP
	  OBS(I)=0.0D0

	  FIT(I)=0.0_LDP
	  FIT(I)=0.0D0

	DO L=1,NINT(1+(R_MAX-R_MIN)/0.05_LDP)
	DO L=1,NINT(1+(R_MAX-R_MIN)/0.05)

	  R_EXT=R_MIN+(L-1)*0.05_LDP
	  R_EXT=R_MIN+(L-1)*0.05D0

	    T1=(LAM_ST(I)+LAM_END(I))/2.0_LDP
	    T1=(LAM_ST(I)+LAM_END(I))/2.0D0

	    T1=10000.0_LDP/T1                    !1/Lambda(um)
	    T1=10000.0/T1                    !1/Lambda(um)

	   IF(T1 .LT. 1.1_LDP)THEN
	   IF(T1 .LT. 1.1)THEN

	      RAX=0.574_LDP*(T1**1.61_LDP)
	      RAX=0.574*(T1**1.61)

	      RBX=-0.527_LDP*(T1**1.61_LDP)
	      RBX=-0.527*(T1**1.61)

	    ELSE IF(T1. LT. 3.3_LDP)THEN
	    ELSE IF(T1. LT. 3.3)THEN

	      T2=T1-1.82_LDP
	      T2=T1-1.82

	      RAX=1+T2*(0.17699_LDP-T2*(0.50447_LDP+T2*(0.02427_LDP-T2*(0.72085_LDP
	      RAX=1+T2*(0.17699-T2*(0.50447+T2*(0.02427-T2*(0.72085

	1                 +T2*(0.01979_LDP-T2*(0.77530_LDP-0.32999_LDP*T2))))))
	1                 +T2*(0.01979-T2*(0.77530-0.32999*T2))))))

	      RBX=T2*(1.41338_LDP+T2*(2.28305_LDP+T2*(1.07233_LDP-T2*(5.38434_LDP
	      RBX=T2*(1.41338+T2*(2.28305+T2*(1.07233-T2*(5.38434

	1                +T2*(0.62251_LDP-T2*(5.30260_LDP-2.09002_LDP*T2))))))
	1                +T2*(0.62251-T2*(5.30260-2.09002*T2))))))

	    ELSE IF(T1 .lT. 5.9_LDP)THEN
	    ELSE IF(T1 .lT. 5.9)THEN

	      RAX=1.752_LDP-0.316_LDP*T1-0.104_LDP/((T1-4.67_LDP)**2+0.341_LDP)
	      RAX=1.752-0.316*T1-0.104/((T1-4.67)**2+0.341)

	      RBX=-3.090_LDP+1.825_LDP*T1+1.206_LDP/((T1-4.62_LDP)**2+0.263_LDP)
	      RBX=-3.090+1.825*T1+1.206/((T1-4.62)**2+0.263)

	    ELSE IF(T1 .LT. 8.0_LDP)THEN
	    ELSE IF(T1 .LT. 8.0)THEN

	      RAX=1.752_LDP-0.316_LDP*T1-0.104_LDP/((T1-4.67_LDP)**2+0.341_LDP) -
	      RAX=1.752-0.316*T1-0.104/((T1-4.67)**2+0.341) -

	1                       T2*T2*(0.04773_LDP+0.009779_LDP*T2)
	1                       T2*T2*(0.04773+0.009779*T2)

	      RBX=-3.090_LDP+1.825_LDP*T1+1.206_LDP/((T1-4.62_LDP)**2+0.263_LDP)+
	      RBX=-3.090+1.825*T1+1.206/((T1-4.62)**2+0.263)+

	1                       T2*T2*(0.2130_LDP+0.1207_LDP*T2)
	1                       T2*T2*(0.2130+0.1207*T2)

	      RAX=-1.073_LDP-T2*(0.628_LDP-T2*(0.137_LDP-0.070_LDP*T2))
	      RAX=-1.073-T2*(0.628-T2*(0.137-0.070*T2))

	      RBX=13.670_LDP+T2*(4.257_LDP-T2*(0.420_LDP-0.374_LDP*T2))
	      RBX=13.670+T2*(4.257-T2*(0.420-0.374*T2))

	      RAX=-1.073_LDP-T2*(0.628_LDP-T2*(0.137_LDP-0.070_LDP*T2))
	      RAX=-1.073-T2*(0.628-T2*(0.137-0.070*T2))

	      RBX=13.670_LDP+T2*(4.257_LDP-T2*(0.420_LDP-0.374_LDP*T2))
	      RBX=13.670+T2*(4.257-T2*(0.420-0.374*T2))

	  GAL_RED_LAW(1:NUM_BNDS)=0.921_LDP*GAL_RED_LAW(1:NUM_BNDS)
	  GAL_RED_LAW(1:NUM_BNDS)=0.921D0*GAL_RED_LAW(1:NUM_BNDS)

	  MAT=0.0_LDP
	  MAT=0.0D0

	  RHS=0.0_LDP
	  RHS=0.0D0

	    RHS(1)=RHS(1)-WEIGHT(I)*2.0_LDP*LOG(OBS(I)/FIT(I))
	    RHS(1)=RHS(1)-WEIGHT(I)*2.0D0*LOG(OBS(I)/FIT(I))

	    MAT(1,1)=MAT(1,1)+WEIGHT(I)*4.0_LDP
	    MAT(1,1)=MAT(1,1)+WEIGHT(I)*4.0D0

	    MAT(1,2)=MAT(1,2)+WEIGHT(I)*2.0_LDP*GAL_RED_LAW(I)
	    MAT(1,2)=MAT(1,2)+WEIGHT(I)*2.0D0*GAL_RED_LAW(I)

	    MAT(2,1)=MAT(2,1)+WEIGHT(I)*2.0_LDP*GAL_RED_LAW(I)
	    MAT(2,1)=MAT(2,1)+WEIGHT(I)*2.0D0*GAL_RED_LAW(I)

	  CHI_SQ=0.0_LDP
	  CHI_SQ=0.0D0


divide_by_cont.f

	T1=1.0E-08_LDP
	T1=1.0D-08

	      T2=(1.0_LDP-T1)*OBSF_CONT(L+1)+T1*OBSF_CONT(L)
	      T2=(1.0D0-T1)*OBSF_CONT(L+1)+T1*OBSF_CONT(L)

	        IF(T2 .LT. 1.0E+020_LDP)YV(I)=T2
	        IF(T2 .LT. 1.0E+020)YV(I)=T2

	  YV(1:NCF)=0.0_LDP				!Temporary usage
	  YV(1:NCF)=0.0D0				!Temporary usage

	      IF(T2 .LT. 1.0E+30_LDP)YV(I)=T2
	      IF(T2 .LT. 1.0E+30)YV(I)=T2

	      IF(T2 .LT. 1.0E+20_LDP)YV(I)=T2
	      IF(T2 .LT. 1.0E+20)YV(I)=T2


do_int_rec_ap.f

	PI=ACOS(-1.0_LDP)
	PI=ACOS(-1.0D0)

	IF(A .LT. 0.0_LDP .OR. B .LT. 0.0_LDP)THEN
	IF(A .LT. 0.0D0 .OR. B .LT. 0.0D0)THEN

	IF(A .EQ. 0.0_LDP .AND. B .EQ. 0.0_LDP)THEN
	IF(A .EQ. 0.0D0 .AND. B .EQ. 0.0D0)THEN

	ELSE IF(B-0.5_LDP*LENGTH .LT. 0.0_LDP)THEN
	ELSE IF(B-0.5D0*LENGTH .LT. 0.0D0)THEN

	LEFT_EDGE=A-0.5_LDP*WIDTH
	LEFT_EDGE=A-0.5D0*WIDTH

	RIGHT_EDGE=A+0.5_LDP*WIDTH
	RIGHT_EDGE=A+0.5D0*WIDTH

	BOT_EDGE=B-0.5_LDP*LENGTH
	BOT_EDGE=B-0.5D0*LENGTH

	TOP_EDGE=B+0.5_LDP*LENGTH
	TOP_EDGE=B+0.5D0*LENGTH

	IF(A .EQ. 0.0_LDP .AND. B .EQ. 0.0_LDP)THEN
	IF(A .EQ. 0.0D0 .AND. B .EQ. 0.0D0)THEN

	   PMIN=0.0_LDP
	   PMIN=0.0D0

	   P1=0.5_LDP*MIN(WIDTH,LENGTH)
	   P1=0.5D0*MIN(WIDTH,LENGTH)

	   P2=0.5_LDP*MAX(WIDTH,LENGTH)
	   P2=0.5D0*MAX(WIDTH,LENGTH)

           PMAX=0.5_LDP*SQRT(WIDTH*WIDTH+LENGTH*LENGTH)
           PMAX=0.5D0*SQRT(WIDTH*WIDTH+LENGTH*LENGTH)

	ELSE IF(LEFT_EDGE .GE. 0.0_LDP .AND. BOT_EDGE .GE. 0.0_LDP)THEN
	ELSE IF(LEFT_EDGE .GE. 0.0D0 .AND. BOT_EDGE .GE. 0.0D0)THEN

	IF(A .EQ. 0.0_LDP .AND. B .EQ. 0.0_LDP)THEN
	IF(A .EQ. 0.0D0 .AND. B .EQ. 0.0D0)THEN

	    dTHETA(I)=2.0_LDP*PI
	    dTHETA(I)=2.0D0*PI

	    dTHETA(I)=4.0_LDP*(0.5_LDP*PI-ACOS(0.5_LDP*WIDTH/P_REV(I)))
	    dTHETA(I)=4.0D0*(0.5D0*PI-ACOS(0.5D0*WIDTH/P_REV(I)))

	    dTHETA(I)=4.0_LDP*( ASIN(0.5_LDP*LENGTH/P_REV(I)) - ACOS(0.5_LDP*WIDTH/P_REV(I)) )
	    dTHETA(I)=4.0D0*( ASIN(0.5D0*LENGTH/P_REV(I)) - ACOS(0.5D0*WIDTH/P_REV(I)) )

	      T1=0.0_LDP
	      T1=0.0D0

	      T2=0.0_LDP
	      T2=0.0D0

	      T1=0.0_LDP
	      T1=0.0D0

	      T1=0.5_LDP*PI+ACOS(BOT_EDGE/P_REV(I))
	      T1=0.5D0*PI+ACOS(BOT_EDGE/P_REV(I))

	      T1=0.5_LDP*PI+ASIN(ABS(LEFT_EDGE)/P_REV(I))
	      T1=0.5D0*PI+ASIN(ABS(LEFT_EDGE)/P_REV(I))

	      T2=0.0_LDP
	      T2=0.0D0

	       dTHETA(I)=dTHETA(I)-2.0_LDP*T1
	       dTHETA(I)=dTHETA(I)-2.0D0*T1

	QW(:)=0.0_LDP
	QW(:)=0.0D0

	    T1=0.5_LDP*(P_REV(I+1)-P_REV(I))
	    T1=0.5D0*(P_REV(I+1)-P_REV(I))

	    T1=(P_REV(I+1)-P_REV(I))/3.0_LDP
	    T1=(P_REV(I+1)-P_REV(I))/3.0D0

	    QW(I+1)=QW(I+1)+dTHETA(I+1)*P_REV(I+1)*T1*4.0_LDP
	    QW(I+1)=QW(I+1)+dTHETA(I+1)*P_REV(I+1)*T1*4.0D0

	T1=0.0_LDP
	T1=0.0D0

	  YV(1:NCF)=0.0_LDP	
	  YV(1:NCF)=0.0D0	

	    IP_REV(I)=(1.0_LDP-T1)*IP(J,ML)+T1*IP(J+1,ML)
	    IP_REV(I)=(1.0D0-T1)*IP(J,ML)+T1*IP(J+1,ML)


dp_cnvrt.f

	KEV_TO_HZ=0.241838E+03_LDP
	KEV_TO_HZ=0.241838E+03

	ANG_TO_HZ=SPEED_OF_LIGHT()*1.0E-07_LDP  	!10^8/10^15
	ANG_TO_HZ=SPEED_OF_LIGHT()*1.0D-07  	!10^8/10^15

	      T1=1.0E-08_LDP			!*1.0E-23*1.0E+15
	      T1=1.0D-08			!*1.0E-23*1.0E+15

	    T1=1.0E-01_LDP/C_CMS	  	!1.0E-23*1.0E+30*1.0E-08
	    T1=1.0E-01/C_CMS	  	!1.0E-23*1.0E+30*1.0E-08

	    T1=1.0E-08_LDP		  	!1.0E-23*1.0E+15
	    T1=1.0E-08		  	!1.0E-23*1.0E+15

	    XV(I)=1.0E-04_LDP*ANG_TO_HZ/XV(I)
	    XV(I)=1.0D-04*ANG_TO_HZ/XV(I)

	    XV(I)=1.0E+03_LDP*XV(I)/KEV_TO_HZ
	    XV(I)=1.0D+03*XV(I)/KEV_TO_HZ

	    XV(I)=1.0E-08_LDP*C_CMS*(ANG_TO_HZ/XV(I)-LAMC)/LAMC
	    XV(I)=1.0D-08*C_CMS*(ANG_TO_HZ/XV(I)-LAMC)/LAMC

	    XV(I)=1.0E-05_LDP*C_CMS*(ANG_TO_HZ/XV(I)-LAMC)/LAMC
	    XV(I)=1.0D-05*C_CMS*(ANG_TO_HZ/XV(I)-LAMC)/LAMC


dp_cnvrt_j.f

	KEV_TO_HZ=0.241838E+03_LDP
	KEV_TO_HZ=0.241838E+03

	ANG_TO_HZ=SPEED_OF_LIGHT()*1.0E-07_LDP  	!10^8/10^15
	ANG_TO_HZ=SPEED_OF_LIGHT()*1.0D-07  	!10^8/10^15

	      T1=1.0E+15_LDP
	      T1=1.0D+15

	    T1=1.0E+22_LDP/C_CMS	  	!1.0E+30*1.0E-08
	    T1=1.0E+22/C_CMS	  	!1.0E+30*1.0E-08

	    XV(I)=1.0E-04_LDP*ANG_TO_HZ/XV(I)
	    XV(I)=1.0D-04*ANG_TO_HZ/XV(I)

	    XV(I)=1.0E+03_LDP*XV(I)/KEV_TO_HZ
	    XV(I)=1.0D+03*XV(I)/KEV_TO_HZ

	    XV(I)=1.0E-08_LDP*C_CMS*(ANG_TO_HZ/XV(I)-LAMC)/LAMC
	    XV(I)=1.0D-08*C_CMS*(ANG_TO_HZ/XV(I)-LAMC)/LAMC

	    XV(I)=1.0E-05_LDP*C_CMS*(ANG_TO_HZ/XV(I)-LAMC)/LAMC
	    XV(I)=1.0D-05*C_CMS*(ANG_TO_HZ/XV(I)-LAMC)/LAMC


dp_cnvrt_j_v2.f

	KEV_TO_HZ=0.241838E+03_LDP
	KEV_TO_HZ=0.241838E+03

	ANG_TO_HZ=SPEED_OF_LIGHT()*1.0E-07_LDP  	!10^8/10^15
	ANG_TO_HZ=SPEED_OF_LIGHT()*1.0D-07  	!10^8/10^15

	      T1=1.0E+15_LDP
	      T1=1.0D+15

	    T1=1.0E+22_LDP/C_CMS	  	!1.0E+30*1.0E-08
	    T1=1.0E+22/C_CMS	  	!1.0E+30*1.0E-08

	    XV(I)=1.0E-04_LDP*ANG_TO_HZ/XV(I)
	    XV(I)=1.0D-04*ANG_TO_HZ/XV(I)

	    XV(I)=1.0E+03_LDP*XV(I)/KEV_TO_HZ
	    XV(I)=1.0D+03*XV(I)/KEV_TO_HZ

	    XV(I)=1.0E-08_LDP*C_CMS*(ANG_TO_HZ/XV(I)-LAMC)/LAMC
	    XV(I)=1.0D-08*C_CMS*(ANG_TO_HZ/XV(I)-LAMC)/LAMC

	    XV(I)=1.0E-05_LDP*C_CMS*(ANG_TO_HZ/XV(I)-LAMC)/LAMC
	    XV(I)=1.0D-05*C_CMS*(ANG_TO_HZ/XV(I)-LAMC)/LAMC


dp_rd_obs_data_v2.f

	TO_JANSKY=1.0E+23_LDP*1.0E-08_LDP/2.998E+10_LDP
	TO_JANSKY=1.0D+23*1.0E-08/2.998E+10

	VAL_SCALE_FAC=1.0_LDP
	VAL_SCALE_FAC=1.0D0

	  LAM(NLST+1:NPTS)=1.0E+04_LDP*LAM(NLST+1:NPTS)
	  LAM(NLST+1:NPTS)=1.0D+04*LAM(NLST+1:NPTS)

	  LAM(NLST+1:NPTS)=2.99794E+18_LDP/LAM(NLST+1:NPTS)
	  LAM(NLST+1:NPTS)=2.99794E+18/LAM(NLST+1:NPTS)

	    FLUX(I)=1.0E+23_LDP*FLUX(I)
	    FLUX(I)=1.0D+23*FLUX(I)

	  FLUX(NLST+1:NPTS)=1.0E-03_LDP*FLUX(NLST+1:NPTS)
	  FLUX(NLST+1:NPTS)=1.0D-03*FLUX(NLST+1:NPTS)

	  IF(MAX(LAM(NLST+1),LAM(NPTS)) .GT. 3500.0_LDP)THEN
	  IF(MAX(LAM(NLST+1),LAM(NPTS)) .GT. 3500.0)THEN


filt_pass_band.f

	DATA FILT_ST_LAM/3000.0_LDP,3600.0_LDP,3600.0_LDP,4700.0_LDP,5500.0_LDP,7000.0_LDP/
	DATA FILT_ST_LAM/3000.0D0,3600.0D0,3600.0D0,4700.0D0,5500.0D0,7000.0D0/

	DATA FILT_DEL_LAM/50.0_LDP,100.0_LDP,100.0_LDP,100.0_LDP,100.0_LDP,100.0_LDP/
	DATA FILT_DEL_LAM/50.0D0,100.0D0,100.0D0,100.0D0,100.0D0,100.0D0/

        DATA FILT_ZP/8.079_LDP,9.035_LDP,9.034_LDP,8.915_LDP,8.755_LDP,8.505_LDP/
        DATA FILT_ZP/8.079,9.035,9.034,8.915,8.755,8.505/

	1    /0.000_LDP,0.016_LDP,0.068_LDP,0.167_LDP,0.287_LDP,0.423_LDP,0.560_LDP,0.673_LDP,0.772_LDP,0.842_LDP,
	1    /0.000,0.016,0.068,0.167,0.287,0.423,0.560,0.673,0.772,0.842,

	1     0.905_LDP,0.943_LDP,0.981_LDP,0.993_LDP,1.000_LDP,0.989_LDP,0.916_LDP,0.804_LDP,0.625_LDP,0.423_LDP,
	1     0.905,0.943,0.981,0.993,1.000,0.989,0.916,0.804,0.625,0.423,

	1     0.238_LDP,0.114_LDP,0.051_LDP,0.019_LDP,0.000_LDP/
	1     0.238,0.114,0.051,0.019,0.000/

	1    /0.000_LDP,0.026_LDP,0.120_LDP,0.523_LDP,0.875_LDP,0.956_LDP,1.000_LDP,0.998_LDP,0.972_LDP,0.901_LDP,
	1    /0.000,0.026,0.120,0.523,0.875,0.956,1.000,0.998,0.972,0.901,

	1     0.793_LDP,0.694_LDP,0.587_LDP,0.460_LDP,0.362_LDP,0.263_LDP,0.169_LDP,0.107_LDP,0.049_LDP,0.010_LDP,
	1     0.793,0.694,0.587,0.460,0.362,0.263,0.169,0.107,0.049,0.010,

	1     0.000_LDP/
	1     0.000/

	1    /0.000_LDP,0.030_LDP,0.134_LDP,0.567_LDP,0.920_LDP,0.978_LDP,1.000_LDP,0.978_LDP,0.935_LDP,0.853_LDP,
	1    /0.000,0.030,0.134,0.567,0.920,0.978,1.000,0.978,0.935,0.853,

	1     0.740_LDP,0.640_LDP,0.536_LDP,0.424_LDP,0.325_LDP,0.235_LDP,0.150_LDP,0.095_LDP,0.043_LDP,0.009_LDP,
	1     0.740,0.640,0.536,0.424,0.325,0.235,0.150,0.095,0.043,0.009,

	1     0.000_LDP/
	1     0.000/

	1   /0.000_LDP,0.030_LDP,0.163_LDP,0.458_LDP,0.780_LDP,0.967_LDP,1.000_LDP,0.973_LDP,0.898_LDP,0.792_LDP,
	1   /0.000,0.030,0.163,0.458,0.780,0.967,1.000,0.973,0.898,0.792,

	1    0.684_LDP,0.574_LDP,0.461_LDP,0.359_LDP,0.270_LDP,0.197_LDP,0.135_LDP,0.081_LDP,0.045_LDP,0.025_LDP,
	1    0.684,0.574,0.461,0.359,0.270,0.197,0.135,0.081,0.045,0.025,

	1    0.017_LDP,0.013_LDP,0.009_LDP,0.000_LDP/
	1    0.017,0.013,0.009,0.000/

	1   /0.00_LDP,0.23_LDP,0.74_LDP,0.91_LDP,0.98_LDP,1.00_LDP,0.98_LDP,0.96_LDP,0.93_LDP,0.90_LDP,
	1   /0.00,0.23,0.74,0.91,0.98,1.00,0.98,0.96,0.93,0.90,

	1    0.86_LDP,0.81_LDP,0.78_LDP,0.72_LDP,0.67_LDP,0.61_LDP,0.56_LDP,0.51_LDP,0.46_LDP,0.40_LDP,
	1    0.86,0.81,0.78,0.72,0.67,0.61,0.56,0.51,0.46,0.40,

	1    0.35_LDP,0.14_LDP,0.03_LDP,0.00_LDP/
	1    0.35,0.14,0.03,0.00/

	1   /0.000_LDP,0.024_LDP,0.232_LDP,0.555_LDP,0.785_LDP,0.910_LDP,0.965_LDP,0.985_LDP,0.990_LDP,0.995_LDP,
	1   /0.000,0.024,0.232,0.555,0.785,0.910,0.965,0.985,0.990,0.995,

	1    1.000_LDP,1.000_LDP,0.990_LDP,0.980_LDP,0.950_LDP,0.910_LDP,0.860_LDP,0.750_LDP,0.560_LDP,0.330_LDP,
	1    1.000,1.000,0.990,0.980,0.950,0.910,0.860,0.750,0.560,0.330,

	1    0.150_LDP,0.030_LDP,0.000_LDP/
	1    0.150,0.030,0.000/


filt_pass_band_v2.f

	DATA FILT_ST_LAM/3000.0_LDP,3600.0_LDP,3600.0_LDP,4700.0_LDP,5500.0_LDP,7000.0_LDP/
	DATA FILT_ST_LAM/3000.0D0,3600.0D0,3600.0D0,4700.0D0,5500.0D0,7000.0D0/

	DATA FILT_DEL_LAM/50.0_LDP,100.0_LDP,100.0_LDP,100.0_LDP,100.0_LDP,100.0_LDP/
	DATA FILT_DEL_LAM/50.0D0,100.0D0,100.0D0,100.0D0,100.0D0,100.0D0/

        DATA FILT_ZP/8.079_LDP,9.035_LDP,9.034_LDP,8.915_LDP,8.755_LDP,8.505_LDP/
        DATA FILT_ZP/8.079,9.035,9.034,8.915,8.755,8.505/

	1    /0.000_LDP,0.016_LDP,0.068_LDP,0.167_LDP,0.287_LDP,0.423_LDP,0.560_LDP,0.673_LDP,0.772_LDP,0.842_LDP,
	1    /0.000,0.016,0.068,0.167,0.287,0.423,0.560,0.673,0.772,0.842,

	1     0.905_LDP,0.943_LDP,0.981_LDP,0.993_LDP,1.000_LDP,0.989_LDP,0.916_LDP,0.804_LDP,0.625_LDP,0.423_LDP,
	1     0.905,0.943,0.981,0.993,1.000,0.989,0.916,0.804,0.625,0.423,

	1     0.238_LDP,0.114_LDP,0.051_LDP,0.019_LDP,0.000_LDP/
	1     0.238,0.114,0.051,0.019,0.000/

	1    /0.000_LDP,0.026_LDP,0.120_LDP,0.523_LDP,0.875_LDP,0.956_LDP,1.000_LDP,0.998_LDP,0.972_LDP,0.901_LDP,
	1    /0.000,0.026,0.120,0.523,0.875,0.956,1.000,0.998,0.972,0.901,

	1     0.793_LDP,0.694_LDP,0.587_LDP,0.460_LDP,0.362_LDP,0.263_LDP,0.169_LDP,0.107_LDP,0.049_LDP,0.010_LDP,
	1     0.793,0.694,0.587,0.460,0.362,0.263,0.169,0.107,0.049,0.010,

	1     0.000_LDP/
	1     0.000/

	1    /0.000_LDP,0.030_LDP,0.134_LDP,0.567_LDP,0.920_LDP,0.978_LDP,1.000_LDP,0.978_LDP,0.935_LDP,0.853_LDP,
	1    /0.000,0.030,0.134,0.567,0.920,0.978,1.000,0.978,0.935,0.853,

	1     0.740_LDP,0.640_LDP,0.536_LDP,0.424_LDP,0.325_LDP,0.235_LDP,0.150_LDP,0.095_LDP,0.043_LDP,0.009_LDP,
	1     0.740,0.640,0.536,0.424,0.325,0.235,0.150,0.095,0.043,0.009,

	1     0.000_LDP/
	1     0.000/

	1   /0.000_LDP,0.030_LDP,0.163_LDP,0.458_LDP,0.780_LDP,0.967_LDP,1.000_LDP,0.973_LDP,0.898_LDP,0.792_LDP,
	1   /0.000,0.030,0.163,0.458,0.780,0.967,1.000,0.973,0.898,0.792,

	1    0.684_LDP,0.574_LDP,0.461_LDP,0.359_LDP,0.270_LDP,0.197_LDP,0.135_LDP,0.081_LDP,0.045_LDP,0.025_LDP,
	1    0.684,0.574,0.461,0.359,0.270,0.197,0.135,0.081,0.045,0.025,

	1    0.017_LDP,0.013_LDP,0.009_LDP,0.000_LDP/
	1    0.017,0.013,0.009,0.000/

	1   /0.00_LDP,0.23_LDP,0.74_LDP,0.91_LDP,0.98_LDP,1.00_LDP,0.98_LDP,0.96_LDP,0.93_LDP,0.90_LDP,
	1   /0.00,0.23,0.74,0.91,0.98,1.00,0.98,0.96,0.93,0.90,

	1    0.86_LDP,0.81_LDP,0.78_LDP,0.72_LDP,0.67_LDP,0.61_LDP,0.56_LDP,0.51_LDP,0.46_LDP,0.40_LDP,
	1    0.86,0.81,0.78,0.72,0.67,0.61,0.56,0.51,0.46,0.40,

	1    0.35_LDP,0.14_LDP,0.03_LDP,0.00_LDP/
	1    0.35,0.14,0.03,0.00/

	1   /0.000_LDP,0.024_LDP,0.232_LDP,0.555_LDP,0.785_LDP,0.910_LDP,0.965_LDP,0.985_LDP,0.990_LDP,0.995_LDP,
	1   /0.000,0.024,0.232,0.555,0.785,0.910,0.965,0.985,0.990,0.995,

	1    1.000_LDP,1.000_LDP,0.990_LDP,0.980_LDP,0.950_LDP,0.910_LDP,0.860_LDP,0.750_LDP,0.560_LDP,0.330_LDP,
	1    1.000,1.000,0.990,0.980,0.950,0.910,0.860,0.750,0.560,0.330,

	1    0.150_LDP,0.030_LDP,0.000_LDP/
	1    0.150,0.030,0.000/


fix_pop_oscillations.f

	    IF(D5*D4 .LT. 0.0_LDP .AND. D4*D3 .LT. 0.0_LDP .AND. D3*D2 .LT. 0.0_LDP)THEN
	    IF(D5*D4 .LT. 0.0D0 .AND. D4*D3 .LT. 0.0D0 .AND. D3*D2 .LT. 0.0D0)THEN

	        POPS(I,J)=(POPS_MAT(I,J,2)+POPS_MAT(I,J,1))/2.0_LDP
	        POPS(I,J)=(POPS_MAT(I,J,2)+POPS_MAT(I,J,1))/2.0D0

	        POPS(I,J)=(POPS_MAT(I,J,5)+POPS_MAT(I,J,4))/2.0_LDP
	        POPS(I,J)=(POPS_MAT(I,J,5)+POPS_MAT(I,J,4))/2.0D0


get_assoc_ion.f


get_mag.f

	    FILT_FREQ(ML)=0.2998E+04_LDP/FILT_LAM(ML)
	    FILT_FREQ(ML)=0.2998D+04/FILT_LAM(ML)

	      ATM_FREQ(ML)=0.2998E+04_LDP/ATM_LAM(ML)
	      ATM_FREQ(ML)=0.2998D+04/ATM_LAM(ML)

	  FILT_RESP(1)=0.0_LDP; FILT_RESP(NF)=0.0_LDP
	  FILT_RESP(1)=0.0D0; FILT_RESP(NF)=0.0D0

	    IF( 2.998E+05_LDP*(NU(ML)/NU(ML+1)-1.0_LDP) .GT. 100.0_LDP)THEN
	    IF( 2.998D+05*(NU(ML)/NU(ML+1)-1.0D0) .GT. 100.0D0)THEN

	      J=2.998E+05_LDP*(NU(ML)/NU(ML+1)-1.0_LDP)/100.0_LDP+1
	      J=2.998D+05*(NU(ML)/NU(ML+1)-1.0D0)/100.0D0+1

	  RESP(1:NX)=0.0_LDP
	  RESP(1:NX)=0.0D0

	  TRANS(1:NX)=1.0_LDP
	  TRANS(1:NX)=1.0D0

	  MAG=0.0_LDP
	  MAG=0.0D0

	  NORM=0.0_LDP
	  NORM=0.0D0

            MAG=MAG+0.5_LDP*(REV_NU(ML)-REV_NU(ML+1))*(REV_FLUX(ML+1) + REV_FLUX(ML))
            MAG=MAG+0.5D0*(REV_NU(ML)-REV_NU(ML+1))*(REV_FLUX(ML+1) + REV_FLUX(ML))

            NORM=NORM+0.5_LDP*(REV_NU(ML)-REV_NU(ML+1))*(RESP(ML+1) + RESP(ML))
            NORM=NORM+0.5D0*(REV_NU(ML)-REV_NU(ML+1))*(RESP(ML+1) + RESP(ML))

          MAG=5.0_LDP*LOG10(DIST)-2.5_LDP*LOG10(MAG)+FILT_ZP
          MAG=5.0*LOG10(DIST)-2.5D0*LOG10(MAG)+FILT_ZP


get_nd_nt_nit.f


get_prof_params.f

	C_MMS=1.0E-08_LDP*SPEED_OF_LIGHT()
	C_MMS=1.0D-08*SPEED_OF_LIGHT()

	MAXIMUM=-1000.0_LDP; MINIMUM=10000.0_LDP
	MAXIMUM=-1000.0D0; MINIMUM=10000.0D0

	  IF(XV(J) .GT. 0.96_LDP*LINE_WAVE .AND. XV(J) .LT. 0.997_LDP*LINE_WAVE)THEN
	  IF(XV(J) .GT. 0.96D0*LINE_WAVE .AND. XV(J) .LT. 0.997D0*LINE_WAVE)THEN

	  IF(XV(J) .LT. 1.1_LDP*LINE_WAVE)THEN
	  IF(XV(J) .LT. 1.1D0*LINE_WAVE)THEN

	DATA=YV-1.0_LDP
	DATA=YV-1.0D0

	IF(MINIMUM .GT. 1.0_LDP .AND. SN_AGE .GT. 30.0_LDP)DATA=DATA-MINIMUM
	IF(MINIMUM .GT. 1.0D0 .AND. SN_AGE .GT. 30.0)DATA=DATA-MINIMUM

	T1=0.0_LDP; T2=0.0_LDP
	T1=0.0D0; T2=0.0D0

	  IF(DATA(J) .GT. 0.0_LDP)THEN
	  IF(DATA(J) .GT. 0.0D0)THEN

	      QW=0.5_LDP*(XV(K+1)-XV(K))
	      QW=0.5D0*(XV(K+1)-XV(K))

	  IF(DATA(J) .GT. 0.0_LDP)THEN
	  IF(DATA(J) .GT. 0.0D0)THEN

	      QW=0.5_LDP*(XV(K+1)-XV(K))
	      QW=0.5D0*(XV(K+1)-XV(K))

	  T1=0.0_LDP
	  T1=0.0D0

	  XEMIS_MEAN=0.0_LDP; T2=0.0_LDP
	  XEMIS_MEAN=0.0D0; T2=0.0D0

	    IF(DATA(J) .LT. 0.75_LDP*DATA(IMAX))THEN
	    IF(DATA(J) .LT. 0.75D0*DATA(IMAX))THEN

	        QW=0.5_LDP*(XV(K+1)-XV(K))
	        QW=0.5D0*(XV(K+1)-XV(K))

	    IF(DATA(J) .LT. 0.75_LDP*DATA(IMAX))THEN
	    IF(DATA(J) .LT. 0.75D0*DATA(IMAX))THEN

	        QW=0.5_LDP*(XV(K+1)-XV(K))
	        QW=0.5D0*(XV(K+1)-XV(K))

	    XEMIS_MEAN=0.0_LDP
	    XEMIS_MEAN=0.0D0


get_prof_params_v2.f

	C_MMS=1.0E-08_LDP*SPEED_OF_LIGHT()
	C_MMS=1.0D-08*SPEED_OF_LIGHT()

	MAXIMUM=-1000.0_LDP; MINIMUM=10000.0_LDP
	MAXIMUM=-1000.0D0; MINIMUM=10000.0D0

	    IF(XV(J) .GT. 0.96_LDP*LINE_WAVE .AND. XV(J) .LT. 0.997_LDP*LINE_WAVE)THEN
	    IF(XV(J) .GT. 0.96D0*LINE_WAVE .AND. XV(J) .LT. 0.997D0*LINE_WAVE)THEN

	  T1=SQRT( (1.0_LDP+EST_VEL_MIN/C_MMS)/(1.0_LDP-EST_VEL_MIN/C_MMS))
	  T1=SQRT( (1.0D0+EST_VEL_MIN/C_MMS)/(1.0D0-EST_VEL_MIN/C_MMS))

	  IF(XV(J) .LT. 1.1_LDP*LINE_WAVE)THEN
	  IF(XV(J) .LT. 1.1D0*LINE_WAVE)THEN

	DATA=YV-1.0_LDP
	DATA=YV-1.0D0

	IF(MINIMUM .GT. 1.0_LDP .AND. SN_AGE .GT. 30.0_LDP)DATA=DATA-MINIMUM
	IF(MINIMUM .GT. 1.0D0 .AND. SN_AGE .GT. 30.0)DATA=DATA-MINIMUM

	T1=0.0_LDP; T2=0.0_LDP
	T1=0.0D0; T2=0.0D0

	  IF(DATA(J) .GT. 0.0_LDP)THEN
	  IF(DATA(J) .GT. 0.0D0)THEN

	      QW=0.5_LDP*(XV(K+1)-XV(K))
	      QW=0.5D0*(XV(K+1)-XV(K))

	  IF(DATA(J) .GT. 0.0_LDP)THEN
	  IF(DATA(J) .GT. 0.0D0)THEN

	      QW=0.5_LDP*(XV(K+1)-XV(K))
	      QW=0.5D0*(XV(K+1)-XV(K))

	  T1=0.0_LDP
	  T1=0.0D0

	  XEMIS_MEAN=0.0_LDP; T2=0.0_LDP
	  XEMIS_MEAN=0.0D0; T2=0.0D0

	    IF(DATA(J) .LT. 0.75_LDP*DATA(IMAX))THEN
	    IF(DATA(J) .LT. 0.75D0*DATA(IMAX))THEN

	        QW=0.5_LDP*(XV(K+1)-XV(K))
	        QW=0.5D0*(XV(K+1)-XV(K))

	    IF(DATA(J) .LT. 0.75_LDP*DATA(IMAX))THEN
	    IF(DATA(J) .LT. 0.75D0*DATA(IMAX))THEN

	        QW=0.5_LDP*(XV(K+1)-XV(K))
	        QW=0.5D0*(XV(K+1)-XV(K))

	    XEMIS_MEAN=0.0_LDP
	    XEMIS_MEAN=0.0D0

	  EST_VEL_MIN=C_Mms*T2/(2.0_LDP+T2)
	  EST_VEL_MIN=C_Mms*T2/(2.0D0+T2)


h2abs.f

	C_KMS=1.0E-05_LDP*SPEED_OF_LIGHT()
	C_KMS=1.0D-05*SPEED_OF_LIGHT()

        B=59.313_LDP        !molec. cnst. B [/cm]
        B=59.313        !molec. cnst. B [/cm]

        HC_ON_K=1.493_LDP        !hc/k [cm K]
        HC_ON_K=1.493        !hc/k [cm K]

	POP_SUM=0._LDP
	POP_SUM=0.D0

	NTOT=10.0E00_LDP**LOG_NTOT
	NTOT=10.0D00**LOG_NTOT

	OPLIN=2.6540081E-02_LDP		!pi*e*e/m/c
	OPLIN=2.6540081E-02		!pi*e*e/m/c

	  H2_FREQ(I)=0.01_LDP*C_KMS/H2_LAM(I)   		!10^15 Hz
	  H2_FREQ(I)=0.01*C_KMS/H2_LAM(I)   		!10^15 Hz

	  NU_DOP(I)=12.85_LDP*H2_FREQ(I)*
	  NU_DOP(I)=12.85*H2_FREQ(I)*

	1             SQRT( (T_IN_K/1.0E+04_LDP)+ (V_TURB/12.85_LDP)**2 )/C_KMS
	1             SQRT( (T_IN_K/1.0D+04)+ (V_TURB/12.85)**2 )/C_KMS

	  CHIL(I)=1.0E-15_LDP*OPLIN*H2_OSC(I)*N_J(H2_L_J(I))/SQRT(PI)/NU_DOP(I)
	  CHIL(I)=1.0D-15*OPLIN*H2_OSC(I)*N_J(H2_L_J(I))/SQRT(PI)/NU_DOP(I)

	  TAU=0.0_LDP
	  TAU=0.0D0

	  FREQ=0.01_LDP*C_KMS/WAVE(J)
	  FREQ=0.01*C_KMS/WAVE(J)

	      a=1.0E-15_LDP*H2_GAM(I)/4/PI/NU_DOP(I)
	      a=1.0D-15*H2_GAM(I)/4/PI/NU_DOP(I)

	    FLUX(J)=0.0_LDP
	    FLUX(J)=0.0D0


hiabs.f

	C_KMS=1.0E-05_LDP*SPEED_OF_LIGHT()
	C_KMS=1.0D-05*SPEED_OF_LIGHT()

	OPLIN=2.6540081E-02_LDP		!pi*e*e/m/c
	OPLIN=2.6540081E-02		!pi*e*e/m/c

	NTOT=10.0E00_LDP**LOG_NTOT
	NTOT=10.0D00**LOG_NTOT

	  HYD_FREQ(I)=0.01_LDP*C_KMS/HYD_LAM(I)   		!10^15 Hz
	  HYD_FREQ(I)=0.01*C_KMS/HYD_LAM(I)   		!10^15 Hz

	  NU_DOP(I)=12.85_LDP*HYD_FREQ(I)*
	  NU_DOP(I)=12.85*HYD_FREQ(I)*

	1             SQRT( (T_IN_K/1.0E+04_LDP)+ (V_TURB/12.85_LDP)**2 )/C_KMS
	1             SQRT( (T_IN_K/1.0D+04)+ (V_TURB/12.85)**2 )/C_KMS

	  CHIL(I)=1.0E-15_LDP*OPLIN*HYD_OSC(I)*NTOT/SQRT(PI)/NU_DOP(I)
	  CHIL(I)=1.0D-15*OPLIN*HYD_OSC(I)*NTOT/SQRT(PI)/NU_DOP(I)

	  TAU=0.0_LDP
	  TAU=0.0D0

	  FREQ=0.01_LDP*C_KMS/WAVE(J)
	  FREQ=0.01*C_KMS/WAVE(J)

	      a=1.0E-15_LDP*HYD_GAM(I)/4/PI/NU_DOP(I)
	      a=1.0D-15*HYD_GAM(I)/4/PI/NU_DOP(I)

	    FLUX(J)=0.0_LDP
	    FLUX(J)=0.0D0


int_rec_ap.f

	T1=1.0E-06_LDP*(P(2)-P(1))
	T1=1.0D-06*(P(2)-P(1))

	  LOC_X_CENT=0.0_LDP
	  LOC_X_CENT=0.0D0

	  LOC_Y_CENT=0.0_LDP
	  LOC_Y_CENT=0.0D0

	ELSE IF(LOC_Y_CENT .LT. 0.5_LDP*LENGTH)THEN
	ELSE IF(LOC_Y_CENT .LT. 0.5D0*LENGTH)THEN

	  LOC_LENGTH=LOC_Y_CENT+0.5_LDP*LENGTH
	  LOC_LENGTH=LOC_Y_CENT+0.5D0*LENGTH

	  LOC_Y_CENT=0.5_LDP*LOC_LENGTH
	  LOC_Y_CENT=0.5D0*LOC_LENGTH

	  LOC_LENGTH=0.5_LDP*LENGTH-ABS(Y_CENT)
	  LOC_LENGTH=0.5D0*LENGTH-ABS(Y_CENT)

	  LOC_Y_CENT=0.5_LDP*LOC_LENGTH
	  LOC_Y_CENT=0.5D0*LOC_LENGTH


is_line_abs.f

	    NCOL(I)=10.0_LDP**NCOL(I)
	    NCOL(I)=10.0**NCOL(I)

	C_KMS=1.0E-05_LDP*SPEED_OF_LIGHT()
	C_KMS=1.0D-05*SPEED_OF_LIGHT()

	OPLIN=2.6540081E-02_LDP		!pi*e*e/m/c
	OPLIN=2.6540081E-02		!pi*e*e/m/c

	  NU_ZERO(I)=0.01_LDP*C_KMS*(1.0_LDP-VRAD(I)/C_KMS)/LAM_ZERO(I)   		!10^15 Hz
	  NU_ZERO(I)=0.01*C_KMS*(1.0D0-VRAD(I)/C_KMS)/LAM_ZERO(I)   		!10^15 Hz

	  CHIL(I)=1.0E-15_LDP*OPLIN*OSC(I)*NCOL(I)/SQRT(PI)/NU_DOP(I)
	  CHIL(I)=1.0D-15*OPLIN*OSC(I)*NCOL(I)/SQRT(PI)/NU_DOP(I)

	  TAU=0.0_LDP
	  TAU=0.0D0

	  FREQ=0.01_LDP*C_KMS/WAVE(J)
	  FREQ=0.01*C_KMS/WAVE(J)

	      IF(ABS(V) .LE. 100.0_LDP)THEN                  !Was 10
	      IF(ABS(V) .LE. 100.0)THEN                  !Was 10

	        a=1.0E-15_LDP*GAM(I)/4/PI/NU_DOP(I)
	        a=1.0D-15*GAM(I)/4/PI/NU_DOP(I)


is_line_abs_v2.f

	    NCOL(I)=10.0_LDP**NCOL(I)
	    NCOL(I)=10.0**NCOL(I)

	C_KMS=1.0E-05_LDP*SPEED_OF_LIGHT()
	C_KMS=1.0D-05*SPEED_OF_LIGHT()

	OPLIN=2.6540081E-02_LDP		!pi*e*e/m/c
	OPLIN=2.6540081E-02		!pi*e*e/m/c

	  NU_ZERO(I)=0.01_LDP*C_KMS*(1.0_LDP-VRAD(I)/C_KMS)/LAM_ZERO(I)   		!10^15 Hz
	  NU_ZERO(I)=0.01*C_KMS*(1.0D0-VRAD(I)/C_KMS)/LAM_ZERO(I)   		!10^15 Hz

	  CHIL(I)=1.0E-15_LDP*OPLIN*OSC(I)*NCOL(I)/SQRT(PI)/NU_DOP(I)
	  CHIL(I)=1.0D-15*OPLIN*OSC(I)*NCOL(I)/SQRT(PI)/NU_DOP(I)

	  TAU=0.0_LDP
	  TAU=0.0D0

	  FREQ=0.01_LDP*C_KMS/WAVE(J)
	  FREQ=0.01*C_KMS/WAVE(J)

	      IF(ABS(V) .LE. 100.0_LDP)THEN                  !Was 10
	      IF(ABS(V) .LE. 100.0)THEN                  !Was 10

	        a=1.0E-15_LDP*GAM(I)/4/PI/NU_DOP(I)
	        a=1.0D-15*GAM(I)/4/PI/NU_DOP(I)


num_rec.f

      REAL(KIND=LDP) :: HALF=0.5_LDP
      REAL(KIND=LDP) :: HALF=0.5D0

      C1=CMPLX(0.5_LDP,0.0_LDP,kind(0d0))
      C1=CMPLX(0.5d0,0.0d0,kind(0d0))

      C2=CMPLX(0.0_LDP,-0.5_LDP,kind(0d0))
      C2=CMPLX(0.0d0,-0.5d0,kind(0d0))

      REAL(KIND=LDP) :: HALF=0.5_LDP
      REAL(KIND=LDP) :: HALF=0.5D0

      THETA=6.28318530717959_LDP/2.0_LDP/DBLE(N)
      THETA=6.28318530717959D0/2.0D0/DBLE(N)

      C1=0.5_LDP
      C1=0.5d0

        C2=-0.5_LDP
        C2=-0.5d0

        C2=0.5_LDP
        C2=0.5d0

      WPR=-2.0_LDP*SIN(HALF*THETA)**2d0
      WPR=-2.0D0*SIN(HALF*THETA)**2d0

      WR=1.0_LDP+WPR
      WR=1.0D0+WPR

      REAL(KIND=LDP) :: HALF=0.5_LDP	
      REAL(KIND=LDP) :: HALF=0.5D0	

        THETA=6.28318530717959_LDP/dble(ISIGN*MMAX)
        THETA=6.28318530717959D0/dble(ISIGN*MMAX)

        WPR=-2._LDP*SIN(HALF*THETA)**2d0
        WPR=-2.D0*SIN(HALF*THETA)**2d0


plt_jh_opt_desc.f


poidev.f

      REAL(KIND=LDP), PARAMETER :: PI=3.141592654_LDP
      REAL(KIND=LDP), PARAMETER :: PI=3.141592654D0

      IF (XM .LT. 12.0_LDP)THEN
      IF (XM .LT. 12.0D0)THEN

        T=1.0_LDP
        T=1.0D0

2       EM=EM+1.0_LDP
2       EM=EM+1.0D0

          G=XM*ALXM-GAMMLN(XM+1.0_LDP)
          G=XM*ALXM-GAMMLN(XM+1.0D0)

        IF (EM .LT. 0.0_LDP) GO TO 1
        IF (EM .LT. 0.0D0) GO TO 1

        T=0.9_LDP*(1.0_LDP+Y**2)*EXP(EM*ALXM-GAMMLN(EM+1.0_LDP)-G)
        T=0.9D0*(1.0D0+Y**2)*EXP(EM*ALXM-GAMMLN(EM+1.0D0)-G)

      DATA COF,STP/76.18009173_LDP,-86.50532033_LDP,24.01409822_LDP,
      DATA COF,STP/76.18009173D0,-86.50532033D0,24.01409822D0,

     *    -1.231739516_LDP,.120858003E-2_LDP,-.536382E-5_LDP,2.50662827465_LDP/
     *    -1.231739516D0,.120858003D-2,-.536382D-5,2.50662827465D0/

      DATA HALF,ONE,FPF/0.5_LDP,1.0_LDP,5.5_LDP/
      DATA HALF,ONE,FPF/0.5D0,1.0D0,5.5D0/


ran2.f

	REAL*4, PARAMETER :: AM=1._LDP/IM1
	REAL*4, PARAMETER :: AM=1./IM1

	REAL*4, PARAMETER :: EPS=1.2E-07_LDP
	REAL*4, PARAMETER :: EPS=1.2E-07

	REAL*4, PARAMETER :: RNMX=1._LDP-EPS
	REAL*4, PARAMETER :: RNMX=1.-EPS

	REAL(KIND=LDP), PARAMETER :: AM=1.0_LDP/IM1
	REAL(KIND=LDP), PARAMETER :: AM=1.0D0/IM1

	REAL(KIND=LDP), PARAMETER :: EPS=1.2E-12_LDP
	REAL(KIND=LDP), PARAMETER :: EPS=1.2D-12

	REAL(KIND=LDP), PARAMETER :: RNMX=1.0_LDP-EPS
	REAL(KIND=LDP), PARAMETER :: RNMX=1.0D0-EPS


raw_subphot.f

	REAL(KIND=LDP), PARAMETER :: CONV_FAC=1.0E-08_LDP
	REAL(KIND=LDP), PARAMETER :: CONV_FAC=1.0D-08

	REAL(KIND=LDP), PARAMETER :: LG10_CONV_FAC=-8.0_LDP
	REAL(KIND=LDP), PARAMETER :: LG10_CONV_FAC=-8.0D0

	ALPHA_BF=2.815E-06_LDP*(ZION**4)
	ALPHA_BF=2.815D-06*(ZION**4)

	DELF=LOG(MAX(100.0_LDP,10.0_LDP*EDGE))/(NCF-1)
	DELF=LOG(MAX(100.0D0,10.0D0*EDGE))/(NCF-1)

	PHOT(1:NCF)=0.0_LDP
	PHOT(1:NCF)=0.0D0

	   T1=1.0_LDP
	   T1=1.0D0

	RYD_HZ=109737.31534_LDP*2.99792458E+10_LDP/(1.0_LDP+1.0_LDP/1840.0_LDP/AMASS)/1.0E+15_LDP
	RYD_HZ=109737.31534D0*2.99792458D+10/(1.0D0+1.0D0/1840.0D0/AMASS)/1.0D+15

	   NEF=20.0_LDP
	   NEF=20.0D0

	  IF(CROSS_A(1) .EQ. 0.0_LDP)THEN
	  IF(CROSS_A(1) .EQ. 0.0D0)THEN

	    PHOT(1:NCF)=0.0_LDP
	    PHOT(1:NCF)=0.0D0

	1        CROSS_A(1)*( CROSS_A(2) + (1.0_LDP-CROSS_A(2))*RU )*( RU**CROSS_A(3) )
	1        CROSS_A(1)*( CROSS_A(2) + (1.0D0-CROSS_A(2))*RU )*( RU**CROSS_A(3) )

	    SUM=0.0_LDP
	    SUM=0.0D0

	        T2=T1*BF_L_CROSS(J+1)+(1.0_LDP-T1)*BF_L_CROSS(J)
	        T2=T1*BF_L_CROSS(J+1)+(1.0D0-T1)*BF_L_CROSS(J)

	      SUM=SUM+(2*L+1)*(10.0_LDP**T2)
	      SUM=SUM+(2*L+1)*(10.0D0**T2)

	      T1=T1*BF_N_GAUNT(J+1)+(1.0_LDP-T1)*BF_N_GAUNT(J)
	      T1=T1*BF_N_GAUNT(J+1)+(1.0D0-T1)*BF_N_GAUNT(J)

1             T1=BF_N_GAUNT(J)*( 10.0_LDP**(T1*(N_PER_N-RJ)) )
1             T1=BF_N_GAUNT(J)*( 10.0D0**(T1*(N_PER_N-RJ)) )

	    X=LOG10(U+3.0_LDP*SPACING(U))
	    X=LOG10(U+3.0D0*SPACING(U))

	      PHOT(ML)=10.0_LDP**(T1+LG10_CONV_FAC)
	      PHOT(ML)=10.0D0**(T1+LG10_CONV_FAC)

	      IF(RU .LE. 1.0_LDP)THEN
	      IF(RU .LE. 1.0D0)THEN

	1               (1.0_LDP-CROSS_A(LMIN+1))*RU )*( RU**CROSS_A(LMIN+2) )
	1               (1.0D0-CROSS_A(LMIN+1))*RU )*( RU**CROSS_A(LMIN+2) )

	       SUM=0.0_LDP
	       SUM=0.0D0

	           T2=T1*BF_L_CROSS(J+1)+(1.0_LDP-T1)*BF_L_CROSS(J)
	           T2=T1*BF_L_CROSS(J+1)+(1.0D0-T1)*BF_L_CROSS(J)

	         SUM=SUM+(2*L+1)*(10.0_LDP**T2)
	         SUM=SUM+(2*L+1)*(10.0D0**T2)

	   EV_TO_HZ=0.241798840766_LDP
	   EV_TO_HZ=0.241798840766D0

	        T1=(U-1.0_LDP)**2 + CROSS_A(K+7)**2
	        T1=(U-1.0D0)**2 + CROSS_A(K+7)**2

	        T2=U**( 5.5_LDP+CROSS_A(K+1)-0.5_LDP*CROSS_A(K+6) )
	        T2=U**( 5.5D0+CROSS_A(K+1)-0.5D0*CROSS_A(K+6) )

	        T3=( 1.0_LDP+SQRT(U/CROSS_A(K+5)) )**CROSS_A(K+6)
	        T3=( 1.0D0+SQRT(U/CROSS_A(K+5)) )**CROSS_A(K+6)

	        PHOT(ML)=PHOT(ML)+1.0E-08_LDP*T1*CROSS_A(K+4)/T2/T3
	        PHOT(ML)=PHOT(ML)+1.0D-08*T1*CROSS_A(K+4)/T2/T3

	PHOT(1:NCF)=1.0E+08_LDP*PHOT(1:NCF)
	PHOT(1:NCF)=1.0D+08*PHOT(1:NCF)


raw_subphot_v2.f

	REAL(KIND=LDP), PARAMETER :: CONV_FAC=1.0E-08_LDP
	REAL(KIND=LDP), PARAMETER :: CONV_FAC=1.0D-08

	REAL(KIND=LDP), PARAMETER :: LG10_CONV_FAC=-8.0_LDP
	REAL(KIND=LDP), PARAMETER :: LG10_CONV_FAC=-8.0D0

	ALPHA_BF=2.815E-06_LDP*(ZION**4)
	ALPHA_BF=2.815D-06*(ZION**4)

	DELF=LOG(MAX(100.0_LDP,10.0_LDP*EDGE))/(NCF-1)
	DELF=LOG(MAX(100.0D0,10.0D0*EDGE))/(NCF-1)

	PHOT(1:NCF)=0.0_LDP
	PHOT(1:NCF)=0.0D0

	   T1=1.0_LDP
	   T1=1.0D0

	RYD_HZ=109737.31534_LDP*2.99792458E+10_LDP/(1.0_LDP+1.0_LDP/1840.0_LDP/AMASS)/1.0E+15_LDP
	RYD_HZ=109737.31534D0*2.99792458D+10/(1.0D0+1.0D0/1840.0D0/AMASS)/1.0D+15

	   NEF=20.0_LDP
	   NEF=20.0D0

	  IF(CROSS_A(1) .EQ. 0.0_LDP)THEN
	  IF(CROSS_A(1) .EQ. 0.0D0)THEN

	    PHOT(1:NCF)=0.0_LDP
	    PHOT(1:NCF)=0.0D0

	1        CROSS_A(1)*( CROSS_A(2) + (1.0_LDP-CROSS_A(2))*RU )*( RU**CROSS_A(3) )
	1        CROSS_A(1)*( CROSS_A(2) + (1.0D0-CROSS_A(2))*RU )*( RU**CROSS_A(3) )

	    SUM=0.0_LDP
	    SUM=0.0D0

	        T2=T1*BF_L_CROSS(J+1)+(1.0_LDP-T1)*BF_L_CROSS(J)
	        T2=T1*BF_L_CROSS(J+1)+(1.0D0-T1)*BF_L_CROSS(J)

	      SUM=SUM+(2*L+1)*(10.0_LDP**T2)
	      SUM=SUM+(2*L+1)*(10.0D0**T2)

	      T1=T1*BF_N_GAUNT(J+1)+(1.0_LDP-T1)*BF_N_GAUNT(J)
	      T1=T1*BF_N_GAUNT(J+1)+(1.0D0-T1)*BF_N_GAUNT(J)

1             T1=BF_N_GAUNT(J)*( 10.0_LDP**(T1*(N_PER_N-RJ)) )
1             T1=BF_N_GAUNT(J)*( 10.0D0**(T1*(N_PER_N-RJ)) )

	    X=LOG10(U+3.0_LDP*SPACING(U))
	    X=LOG10(U+3.0D0*SPACING(U))

	      PHOT(ML)=10.0_LDP**(T1+LG10_CONV_FAC)
	      PHOT(ML)=10.0D0**(T1+LG10_CONV_FAC)

	      IF(RU .LE. 1.0_LDP)THEN
	      IF(RU .LE. 1.0D0)THEN

	1               (1.0_LDP-CROSS_A(LMIN+1))*RU )*( RU**CROSS_A(LMIN+2) )
	1               (1.0D0-CROSS_A(LMIN+1))*RU )*( RU**CROSS_A(LMIN+2) )

	       SUM=0.0_LDP
	       SUM=0.0D0

	           T2=T1*BF_L_CROSS(J+1)+(1.0_LDP-T1)*BF_L_CROSS(J)
	           T2=T1*BF_L_CROSS(J+1)+(1.0D0-T1)*BF_L_CROSS(J)

	         SUM=SUM+(2*L+1)*(10.0_LDP**T2)
	         SUM=SUM+(2*L+1)*(10.0D0**T2)

	   EV_TO_HZ=0.241798840766_LDP
	   EV_TO_HZ=0.241798840766D0

	        T1=(U-1.0_LDP)**2 + CROSS_A(K+7)**2
	        T1=(U-1.0D0)**2 + CROSS_A(K+7)**2

	        T2=U**( 5.5_LDP+CROSS_A(K+1)-0.5_LDP*CROSS_A(K+6) )
	        T2=U**( 5.5D0+CROSS_A(K+1)-0.5D0*CROSS_A(K+6) )

	        T3=( 1.0_LDP+SQRT(U/CROSS_A(K+5)) )**CROSS_A(K+6)
	        T3=( 1.0D0+SQRT(U/CROSS_A(K+5)) )**CROSS_A(K+6)

	        PHOT(ML)=PHOT(ML)+1.0E-08_LDP*T1*CROSS_A(K+4)/T2/T3
	        PHOT(ML)=PHOT(ML)+1.0D-08*T1*CROSS_A(K+4)/T2/T3

	PHOT(1:NCF)=1.0E+08_LDP*PHOT(1:NCF)
	PHOT(1:NCF)=1.0D+08*PHOT(1:NCF)


rd_ew.f

	  LAM(J)=0.0_LDP
	  LAM(J)=0.0D0

	  EW(J)=0.0_LDP
	  EW(J)=0.0D0


rd_ion_locations.f


rd_ion_locations_v2.f


rd_mod.f

	OBS_FREQ(1:NCF_MAX)=0.0_LDP
	OBS_FREQ(1:NCF_MAX)=0.0D0

	OBS_FLUX(1:NCF_MAX)=0.0_LDP
	OBS_FLUX(1:NCF_MAX)=0.0D0


rd_monte_line.f

	LINE_WAVE=0.0_LDP
	LINE_WAVE=0.0D0

	IF(LINE_WAVE .EQ. 0.0_LDP)THEN
	IF(LINE_WAVE .EQ. 0.0D0)THEN

	C_KMS=1.0E-05_LDP*SPEED_OF_LIGHT()
	C_KMS=1.0D-05*SPEED_OF_LIGHT()

	  FREQ(I)=0.01_LDP*C_KMS/(LINE_WAVE*(1.0_LDP+V(I)/C_KMS))
	  FREQ(I)=0.01D0*C_KMS/(LINE_WAVE*(1.0D0+V(I)/C_KMS))


rd_obs_data_v2.f

	TO_JANSKY=1.0E+23_LDP*1.0E-08_LDP/2.998E+10_LDP
	TO_JANSKY=1.0D+23*1.0E-08/2.998E+10

	VAL_SCALE_FAC=1.0_LDP
	VAL_SCALE_FAC=1.0D0

	  LAM(NLST+1:NPTS)=10.0_LDP*LAM(NLST+1:NPTS)
	  LAM(NLST+1:NPTS)=10.0D0*LAM(NLST+1:NPTS)

	  LAM(NLST+1:NPTS)=1.0E+04_LDP*LAM(NLST+1:NPTS)
	  LAM(NLST+1:NPTS)=1.0D+04*LAM(NLST+1:NPTS)

	  LAM(NLST+1:NPTS)=2.99792458E+18_LDP/LAM(NLST+1:NPTS)
	  LAM(NLST+1:NPTS)=2.99792458D+18/LAM(NLST+1:NPTS)

	    FLUX(I)=1.0E+23_LDP*FLUX(I)
	    FLUX(I)=1.0D+23*FLUX(I)

	  FLUX(NLST+1:NPTS)=1.0E-03_LDP*FLUX(NLST+1:NPTS)
	  FLUX(NLST+1:NPTS)=1.0D-03*FLUX(NLST+1:NPTS)

	    FLUX(I)=1.0E+02_LDP*TO_JANSKY*FLUX(I)*(LAM(I)**2)
	    FLUX(I)=1.0D+02*TO_JANSKY*FLUX(I)*(LAM(I)**2)

	  IF(MAX(LAM(NLST+1),LAM(NPTS)) .GT. 3500.0_LDP)THEN
	  IF(MAX(LAM(NLST+1),LAM(NPTS)) .GT. 3500.0)THEN


rd_row_data.f


rd_sing_pol_i.f

	T1=180.0_LDP/ACOS(-1.0_LDP)
	T1=180.0D0/ACOS(-1.0D0)


rd_xy_data.f


rd_xy_data_usr.f


read_corrections.f


recom_opac.f

	CHIBF=2.815E-06_LDP
	CHIBF=2.815E-06

	CHIFF=3.69E-29_LDP
	CHIFF=3.69E-29

	HDKT=4.7994145_LDP
	HDKT=4.7994145

	TWOHCSQ=0.0147452575_LDP
	TWOHCSQ=0.0147452575

	OPLIN=2.6540081E+08_LDP
	OPLIN=2.6540081E+08

	EMLIN=5.27296E-03_LDP
	EMLIN=5.27296E-03

	FRAC_DIFF=1.0E-06_LDP
	FRAC_DIFF=1.0D-06

	MIN_SPACING=0.2_LDP*TEMP/HDKT/EDGE
	MIN_SPACING=0.2*TEMP/HDKT/EDGE

	  REC(I)=0.0_LDP
	  REC(I)=0.0D0

	  IF(NU(I) .LT. 1.0_LDP)IST=IST+1
	  IF(NU(I) .LT. 1.0D0)IST=IST+1

	  T1=(NU(IST)-1.0_LDP)/(NU(IST)-NU(IST-1))
	  T1=(NU(IST)-1.0D0)/(NU(IST)-NU(IST-1))

	  SIG_THRESH=(1.0_LDP-T1)*SIGMA(IST)+T1*SIGMA(IST-1)
	  SIG_THRESH=(1.0D0-T1)*SIGMA(IST)+T1*SIGMA(IST-1)

	TP1=1.8965E+17_LDP		!4*PI/H*DEX(-10)
	TP1=1.8965D+17		!4*PI/H*DEX(-10)

	TP1=TP1*1.0E-08_LDP         !As sigma in megabarns.
	TP1=TP1*1.0D-08         !As sigma in megabarns.

	CONST=TP1*TWOHCSQ*(EDGE**3)*2.07E-22_LDP*STAT_WT/GION
	CONST=TP1*TWOHCSQ*(EDGE**3)*2.07D-22*STAT_WT/GION

	LST_NU=1.0_LDP
	LST_NU=1.0D0

          if(-t2*(nu(i+1)-1.0_LDP) .lt.-500._LDP)then
          if(-t2*(nu(i+1)-1.0D0) .lt.-500.)then

	      DEL_NU_2=0.0_LDP
	      DEL_NU_2=0.0D0

     *             EXP( -T2*(NU(I+1)-1.0_LDP) )*SIGMA(I+1)
     *             EXP( -T2*(NU(I+1)-1.0D0) )*SIGMA(I+1)

     *             EXP( -T2*(NU(I+2)-1.0_LDP) )*SIGMA(I+2)
     *             EXP( -T2*(NU(I+2)-1.0D0) )*SIGMA(I+2)

	      DEL_REC=DEL_NU*(CROSS(1)+4.0_LDP*CROSS(2)+CROSS(3))/3.0_LDP
	      DEL_REC=DEL_NU*(CROSS(1)+4.0D0*CROSS(2)+CROSS(3))/3.0D0

	      REC(I+1)=REC(I)+0.5_LDP*DEL_REC		!Estimate only.
	      REC(I+1)=REC(I)+0.5D0*DEL_REC		!Estimate only.

     *             EXP( -T2*(NU(I+1)-1.0_LDP) )*SIGMA(I+1)
     *             EXP( -T2*(NU(I+1)-1.0D0) )*SIGMA(I+1)

	      DEL_REC=DEL_NU*(CROSS(1) + CROSS(2))/2.0_LDP
	      DEL_REC=DEL_NU*(CROSS(1) + CROSS(2))/2.0D0

	      SIG=T1*SIGMA(I+1)+(1.0_LDP-T1)*SIGMA(I)
	      SIG=T1*SIGMA(I+1)+(1.0D0-T1)*SIGMA(I)

	      CROSS(J+1)=CONST*( X**2 )*EXP( -T2*(X-1.0_LDP) )*SIG
	      CROSS(J+1)=CONST*( X**2 )*EXP( -T2*(X-1.0D0) )*SIG

     *            NU_STEP*(CROSS(J)+4.0_LDP*CROSS(J+1)+CROSS(J+2))/3.0_LDP
     *            NU_STEP*(CROSS(J)+4.0D0*CROSS(J+1)+CROSS(J+2))/3.0D0

	IF(TOT_REC .NE. 0.0_LDP)THEN
	IF(TOT_REC .NE. 0.0D0)THEN

	TOT_REC=TOT_REC/(TEMP**1.5_LDP)
	TOT_REC=TOT_REC/(TEMP**1.5)


recom_opac_v2.f

	CHIBF=2.815E-06_LDP
	CHIBF=2.815E-06

	CHIFF=3.69E-29_LDP
	CHIFF=3.69E-29

	HDKT=4.7994145_LDP
	HDKT=4.7994145

	TWOHCSQ=0.0147452575_LDP
	TWOHCSQ=0.0147452575

	OPLIN=2.6540081E+08_LDP
	OPLIN=2.6540081E+08

	EMLIN=5.27296E-03_LDP
	EMLIN=5.27296E-03

	FRAC_DIFF=1.0E-06_LDP
	FRAC_DIFF=1.0D-06

	MIN_SPACING=0.2_LDP*TEMP/HDKT/FREQ_SCL_FAC		!EDGE
	MIN_SPACING=0.2*TEMP/HDKT/FREQ_SCL_FAC		!EDGE

	TOT_REC=0.0_LDP
	TOT_REC=0.0D0

	  REC(I)=0.0_LDP
	  REC(I)=0.0D0

	  IF(NU(I) .LT. 1.0_LDP)IST=IST+1
	  IF(NU(I) .LT. 1.0D0)IST=IST+1

	  T1=(NU(IST)-1.0_LDP)/(NU(IST)-NU(IST-1))
	  T1=(NU(IST)-1.0D0)/(NU(IST)-NU(IST-1))

	  SIG_THRESH=(1.0_LDP-T1)*SIGMA(IST)+T1*SIGMA(IST-1)
	  SIG_THRESH=(1.0D0-T1)*SIGMA(IST)+T1*SIGMA(IST-1)

	TP1=1.8965E+17_LDP		!4*PI/H*DEX(-10)
	TP1=1.8965D+17		!4*PI/H*DEX(-10)

	TP1=TP1*1.0E-08_LDP         !As sigma in megabarns.
	TP1=TP1*1.0D-08         !As sigma in megabarns.

	CONST=TP1*TWOHCSQ*(FREQ_SCL_FAC**3)*2.07E-22_LDP*STAT_WT/GION
	CONST=TP1*TWOHCSQ*(FREQ_SCL_FAC**3)*2.07D-22*STAT_WT/GION

	LST_NU=1.0_LDP
	LST_NU=1.0D0

          if(-t2*(nu(i+1)-1.0_LDP) .lt.-500._LDP)then
          if(-t2*(nu(i+1)-1.0D0) .lt.-500.)then

	      DEL_NU_2=0.0_LDP
	      DEL_NU_2=0.0D0

     *             EXP( -T2*(NU(I+1)-1.0_LDP) )*SIGMA(I+1)
     *             EXP( -T2*(NU(I+1)-1.0D0) )*SIGMA(I+1)

     *             EXP( -T2*(NU(I+2)-1.0_LDP) )*SIGMA(I+2)
     *             EXP( -T2*(NU(I+2)-1.0D0) )*SIGMA(I+2)

	      DEL_REC=DEL_NU*(CROSS(1)+4.0_LDP*CROSS(2)+CROSS(3))/3.0_LDP
	      DEL_REC=DEL_NU*(CROSS(1)+4.0D0*CROSS(2)+CROSS(3))/3.0D0

	      REC(I+1)=REC(I)+0.5_LDP*DEL_REC		!Estimate only.
	      REC(I+1)=REC(I)+0.5D0*DEL_REC		!Estimate only.

     *             EXP( -T2*(NU(I+1)-1.0_LDP) )*SIGMA(I+1)
     *             EXP( -T2*(NU(I+1)-1.0D0) )*SIGMA(I+1)

	      DEL_REC=DEL_NU*(CROSS(1) + CROSS(2))/2.0_LDP
	      DEL_REC=DEL_NU*(CROSS(1) + CROSS(2))/2.0D0

	      SIG=T1*SIGMA(I+1)+(1.0_LDP-T1)*SIGMA(I)
	      SIG=T1*SIGMA(I+1)+(1.0D0-T1)*SIGMA(I)

	      CROSS(J+1)=CONST*( X**2 )*EXP( -T2*(X-1.0_LDP) )*SIG
	      CROSS(J+1)=CONST*( X**2 )*EXP( -T2*(X-1.0D0) )*SIG

     *            NU_STEP*(CROSS(J)+4.0_LDP*CROSS(J+1)+CROSS(J+2))/3.0_LDP
     *            NU_STEP*(CROSS(J)+4.0D0*CROSS(J+1)+CROSS(J+2))/3.0D0

	IF(TOT_REC .NE. 0.0_LDP)THEN
	IF(TOT_REC .NE. 0.0D0)THEN

	TOT_REC=TOT_REC/(TEMP**1.5_LDP)
	TOT_REC=TOT_REC/(TEMP**1.5)


set_ip_xspat_unit.f

	  T1=1.0E+10_LDP*206265.0_LDP/(DISTANCE*1.0E+03_LDP*PARSEC())
	  T1=1.0E+10*206265.0D0/(DISTANCE*1.0E+03*PARSEC())

	  T1=1.496E+03_LDP
	  T1=1.496D+03


uvabs.f

	t1=0.25_LDP*wave_min*v_turb/c_kms
	t1=0.25D0*wave_min*v_turb/c_kms

	tempwave(1:Ntmp)=1.0E-02_LDP*C_KMS/tempwave(1:Ntmp)
	tempwave(1:Ntmp)=1.0D-02*C_KMS/tempwave(1:Ntmp)

	dlamover2 = dlam/2.0_LDP
	dlamover2 = dlam/2.0d0


uvabs_v2.f

	t1=0.25_LDP*wave_min*v_turb/c_kms
	t1=0.25D0*wave_min*v_turb/c_kms

	tempwave(1:Ntmp)=1.0E-02_LDP*C_KMS/tempwave(1:Ntmp)
	tempwave(1:Ntmp)=1.0D-02*C_KMS/tempwave(1:Ntmp)

	dlamover2 = dlam/2.0_LDP
	dlamover2 = dlam/2.0d0

