
adjust_atm_r_grid.f

	  OLD_TAU(I)=OLD_TAU(I)/(0.1_LDP+MIN(OLD_V(1)/2,OLD_V(I)))
	  OLD_TAU(I)=OLD_TAU(I)/(0.1D0+MIN(OLD_V(1)/2,OLD_V(I)))

	IF(V_RAT_MAX .LT. 1.0_LDP .OR. V_RAT_MAX .GT. 2.0_LDP)THEN
	IF(V_RAT_MAX .LT. 1.0D0 .OR. V_RAT_MAX .GT. 2.0D0)THEN

	LOG_R_CON=(1.0_LDP-T1)*LOG_OLD_R(I+1)+T1*LOG_OLD_R(I)
	LOG_R_CON=(1.0D0-T1)*LOG_OLD_R(I+1)+T1*LOG_OLD_R(I)

	LOG_TAU_CON=(1.0_LDP-T1)*LOG_OLD_TAU(I+1)+T1*LOG_OLD_TAU(I)
	LOG_TAU_CON=(1.0D0-T1)*LOG_OLD_TAU(I+1)+T1*LOG_OLD_TAU(I)

	IF(T1 .LT. 0.5_LDP)T1=0.5_LDP
	IF(T1 .LT. 0.5D0)T1=0.5D0

	IF(T1 .GT. 0.7_LDP)T1=0.7_LDP
	IF(T1 .GT. 0.7D0)T1=0.7D0

	LOG_V(K)=T1*LOG_OLD_V(L+1)+(1.0_LDP-T1)*LOG_OLD_V(L)
	LOG_V(K)=T1*LOG_OLD_V(L+1)+(1.0D0-T1)*LOG_OLD_V(L)

	  dLOG_TAU1=dLOG_TAU1/1.1_LDP
	  dLOG_TAU1=dLOG_TAU1/1.1D0

	LOG_R(K)=T1*LOG_OLD_R(L+1)+(1.0_LDP-T1)*LOG_OLD_R(L)
	LOG_R(K)=T1*LOG_OLD_R(L+1)+(1.0D0-T1)*LOG_OLD_R(L)

	LOG_V(K)=T1*LOG_OLD_V(L+1)+(1.0_LDP-T1)*LOG_OLD_V(L)
	LOG_V(K)=T1*LOG_OLD_V(L+1)+(1.0D0-T1)*LOG_OLD_V(L)

	  dLOG_TAU2=dLOG_TAU2/1.1_LDP
	  dLOG_TAU2=dLOG_TAU2/1.1D0

	LOG_R(K)=T1*LOG_OLD_R(L+1)+(1.0_LDP-T1)*LOG_OLD_R(L)
	LOG_R(K)=T1*LOG_OLD_R(L+1)+(1.0D0-T1)*LOG_OLD_R(L)

	IF( TAU(K)-TAU(K-1) .GT. 1.25_LDP*(TAU(K-1)-TAU(K-2)) )THEN
	IF( TAU(K)-TAU(K-1) .GT. 1.25D0*(TAU(K-1)-TAU(K-2)) )THEN

	  TAU(K)=TAU(K-1)+1.25_LDP*(TAU(K-1)-TAU(K-2))
	  TAU(K)=TAU(K-1)+1.25D0*(TAU(K-1)-TAU(K-2))

	  LOG_V(K)=T1*LOG_OLD_V(L+1)+(1.0_LDP-T1)*LOG_OLD_V(L)
	  LOG_V(K)=T1*LOG_OLD_V(L+1)+(1.0D0-T1)*LOG_OLD_V(L)

	  LOG_R(K)=T1*LOG_OLD_R(L+1)+(1.0_LDP-T1)*LOG_OLD_R(L)
	  LOG_R(K)=T1*LOG_OLD_R(L+1)+(1.0D0-T1)*LOG_OLD_R(L)

	ELSE IF( 1.25_LDP*(TAU(K)-TAU(K-1)) .LT. (TAU(K-1)-TAU(K-2)) )THEN
	ELSE IF( 1.25D0*(TAU(K)-TAU(K-1)) .LT. (TAU(K-1)-TAU(K-2)) )THEN

          TAU(K)=TAU(K+1)-(TAU(K+2)-TAU(K+1))/1.25_LDP
          TAU(K)=TAU(K+1)-(TAU(K+2)-TAU(K+1))/1.25D0

	  V(K)=T1*LOG_OLD_V(L+1)+(1.0_LDP-T1)*LOG_OLD_V(L)
	  V(K)=T1*LOG_OLD_V(L+1)+(1.0D0-T1)*LOG_OLD_V(L)

	  LOG_R(K)=T1*LOG_OLD_R(L+1)+(1.0_LDP-T1)*LOG_OLD_R(L)
	  LOG_R(K)=T1*LOG_OLD_R(L+1)+(1.0D0-T1)*LOG_OLD_R(L)

	  T2=LOG(TAU(K-1)+1.25_LDP*dTAU)
	  T2=LOG(TAU(K-1)+1.25D0*dTAU)

	  LOG_V(K)=T1*LOG_OLD_V(L+1)+(1.0_LDP-T1)*LOG_OLD_V(L)
	  LOG_V(K)=T1*LOG_OLD_V(L+1)+(1.0D0-T1)*LOG_OLD_V(L)

	  LOG_R(K)=T1*LOG_OLD_R(L+1)+(1.0_LDP-T1)*LOG_OLD_R(L)
	  LOG_R(K)=T1*LOG_OLD_R(L+1)+(1.0D0-T1)*LOG_OLD_R(L)

	T1=0.0_LDP; T2=1.0_LDP
	T1=0.0D0; T2=1.0D0

	  LOG_V(K)=T1*LOG_OLD_V(L+1)+(1.0_LDP-T1)*LOG_OLD_V(L)
	  LOG_V(K)=T1*LOG_OLD_V(L+1)+(1.0D0-T1)*LOG_OLD_V(L)

	  LOG_R(K)=T1*LOG_OLD_R(L+1)+(1.0_LDP-T1)*LOG_OLD_R(L)
	  LOG_R(K)=T1*LOG_OLD_R(L+1)+(1.0D0-T1)*LOG_OLD_R(L)

	  IF( dTAU .GT. 1.25_LDP*(TAU(K+2)-TAU(K+1))) THEN
	  IF( dTAU .GT. 1.25*(TAU(K+2)-TAU(K+1))) THEN

            TAU(K)=TAU(K+1)-1.25_LDP*(TAU(K+2)-TAU(K+1))
            TAU(K)=TAU(K+1)-1.25*(TAU(K+2)-TAU(K+1))

	  LOG_V(K)=T1*LOG_OLD_V(L+1)+(1.0_LDP-T1)*LOG_OLD_V(L)
	  LOG_V(K)=T1*LOG_OLD_V(L+1)+(1.0D0-T1)*LOG_OLD_V(L)

	  LOG_R(K)=T1*LOG_OLD_R(L+1)+(1.0_LDP-T1)*LOG_OLD_R(L)
	  LOG_R(K)=T1*LOG_OLD_R(L+1)+(1.0D0-T1)*LOG_OLD_R(L)

	  T1=0.0_LDP; T2=1.0_LDP
	  T1=0.0D0; T2=1.0D0

	  LOG_V(K)=T1*LOG_OLD_V(L+1)+(1.0_LDP-T1)*LOG_OLD_V(L)
	  LOG_V(K)=T1*LOG_OLD_V(L+1)+(1.0D0-T1)*LOG_OLD_V(L)

	  LOG_R(K)=T1*LOG_OLD_R(L+1)+(1.0_LDP-T1)*LOG_OLD_R(L)
	  LOG_R(K)=T1*LOG_OLD_R(L+1)+(1.0D0-T1)*LOG_OLD_R(L)

	  IF(I .NE. 1)T1=(TAU(I+1)-TAU(I))/MAX(TAU(I)-TAU(I-1),1.0E-10_LDP)
	  IF(I .NE. 1)T1=(TAU(I+1)-TAU(I))/MAX(TAU(I)-TAU(I-1),1.0D-10)


adjust_sn_r_grid.f

	IF(dLOGT_MAX .GT. 0 .AND. dLOGT_MAX .LT. 1._LDP)THEN
	IF(dLOGT_MAX .GT. 0 .AND. dLOGT_MAX .LT. 1.D0)THEN

	    T2=T1*LOG_OLD_TAU(J+1)+(1.0_LDP-T1)*LOG_OLD_TAU(J)
	    T2=T1*LOG_OLD_TAU(J+1)+(1.0D0-T1)*LOG_OLD_TAU(J)

	      LOG_R(I)=T1*LOG_OLD_R(J+1)+(1.0_LDP-T1)*LOG_OLD_R(J)
	      LOG_R(I)=T1*LOG_OLD_R(J+1)+(1.0D0-T1)*LOG_OLD_R(J)

	      LOG_TAU(I)=T1*LOG_OLD_TAU(J+1)+(1.0_LDP-T1)*LOG_OLD_TAU(J)
	      LOG_TAU(I)=T1*LOG_OLD_TAU(J+1)+(1.0D0-T1)*LOG_OLD_TAU(J)

	      LOG_T(I)=T1*LOG_OLD_T(J+1)+(1.0_LDP-T1)*LOG_OLD_T(J)
	      LOG_T(I)=T1*LOG_OLD_T(J+1)+(1.0D0-T1)*LOG_OLD_T(J)

	        LOG_R(I)=LOG_R(I)+0.1_LDP*(LOG_R(I-1)-LOG_R(I))
	        LOG_R(I)=LOG_R(I)+0.1D0*(LOG_R(I-1)-LOG_R(I))

	        LOG_TAU(I)=T1*LOG_OLD_TAU(J+1)+(1.0_LDP-T1)*LOG_OLD_TAU(J)
	        LOG_TAU(I)=T1*LOG_OLD_TAU(J+1)+(1.0D0-T1)*LOG_OLD_TAU(J)

	        LOG_T(I)=T1*LOG_OLD_T(J+1)+(1.0_LDP-T1)*LOG_OLD_T(J)
	        LOG_T(I)=T1*LOG_OLD_T(J+1)+(1.0D0-T1)*LOG_OLD_T(J)

	    IF(LOG_R(I)-1.5_LDP*(LOG_R(I-1)-LOG_R(I)) .LT. LOG_OLD_R(NS))EXIT
	    IF(LOG_R(I)-1.5D0*(LOG_R(I-1)-LOG_R(I)) .LT. LOG_OLD_R(NS))EXIT

	    IF(LOG_TAU(I)+1.5_LDP*(LOG_TAU(I-1)-LOG_TAU(I)) .GT. LOG_OLD_TAU(NS))EXIT
	    IF(LOG_TAU(I)+1.5D0*(LOG_TAU(I-1)-LOG_TAU(I)) .GT. LOG_OLD_TAU(NS))EXIT

	    XN(I)=1.0_LDP+(I-1.0_LDP)*(ND_TMP-1.0_LDP)/(J-1.0_LDP)
	    XN(I)=1.0D0+(I-1.0D0)*(ND_TMP-1.0D0)/(J-1.0D0)

	IF(N_IB_INS .EQ. 1 .AND. IB_RAT .EQ. 0.0_LDP)THEN
	IF(N_IB_INS .EQ. 1 .AND. IB_RAT .EQ. 0.0D0)THEN

	  LOG_R(I)=LOG_OLD_R(NS)+0.2_LDP*T1
	  LOG_R(I)=LOG_OLD_R(NS)+0.2D0*T1

	  LOG_TAU(I)=LOG_OLD_TAU(NS)+0.2_LDP*T2
	  LOG_TAU(I)=LOG_OLD_TAU(NS)+0.2D0*T2

	ELSE IF(N_IB_INS .EQ. 2 .AND. IB_RAT .EQ. 0.0_LDP)THEN
	ELSE IF(N_IB_INS .EQ. 2 .AND. IB_RAT .EQ. 0.0D0)THEN

	  LOG_R(I+1)=LOG_OLD_R(NS)+0.1_LDP*T1     !0.1D0
	  LOG_R(I+1)=LOG_OLD_R(NS)+0.1D0*T1     !0.1D0

	  LOG_R(I)=LOG_OLD_R(NS)+0.4_LDP*T1      !0.4D0
	  LOG_R(I)=LOG_OLD_R(NS)+0.4D0*T1      !0.4D0

	  LOG_TAU(I+1)=LOG_OLD_TAU(NS)+0.1_LDP*T2     !0.1D0
	  LOG_TAU(I+1)=LOG_OLD_TAU(NS)+0.1D0*T2     !0.1D0

	  LOG_TAU(I)=LOG_OLD_TAU(NS)+0.4_LDP*T2      !0.4D0
	  LOG_TAU(I)=LOG_OLD_TAU(NS)+0.4D0*T2      !0.4D0

	ELSE IF(N_IB_INS .EQ. 3 .AND. IB_RAT .EQ. 0.0_LDP)THEN
	ELSE IF(N_IB_INS .EQ. 3 .AND. IB_RAT .EQ. 0.0D0)THEN

	  LOG_R(I+2)=LOG_OLD_R(NS)+0.06_LDP*T1
	  LOG_R(I+2)=LOG_OLD_R(NS)+0.06D0*T1

	  LOG_R(I+1)=LOG_OLD_R(NS)+0.16_LDP*T1
	  LOG_R(I+1)=LOG_OLD_R(NS)+0.16D0*T1

	  LOG_R(I)=LOG_OLD_R(NS)+0.4_LDP*T1
	  LOG_R(I)=LOG_OLD_R(NS)+0.4D0*T1

	  LOG_TAU(I+2)=LOG_OLD_TAU(NS)+0.06_LDP*T2
	  LOG_TAU(I+2)=LOG_OLD_TAU(NS)+0.06D0*T2

	  LOG_TAU(I+1)=LOG_OLD_TAU(NS)+0.16_LDP*T2
	  LOG_TAU(I+1)=LOG_OLD_TAU(NS)+0.16D0*T2

	  LOG_TAU(I)=LOG_OLD_TAU(NS)+0.4_LDP*T2
	  LOG_TAU(I)=LOG_OLD_TAU(NS)+0.4D0*T2

	IF(DTAU2_ON_DTAU1 .LT. 2.0_LDP)K=1
	IF(DTAU2_ON_DTAU1 .LT. 2.0D0)K=1

	T1=0.0_LDP
	T1=0.0D0


append_dc.f


append_r_dc.f


ave_dc.f

	REAL(KIND=LDP), PARAMETER :: HDKT=4.7994145_LDP
	REAL(KIND=LDP), PARAMETER :: HDKT=4.7994145D0

	GF_CUT=1.0E+06_LDP			!Only want energy levels
	GF_CUT=1.0E+06			!Only want energy levels

	    DO WHILE(ABS(DELTA_T) .GT. 1.0E-08_LDP)
	    DO WHILE(ABS(DELTA_T) .GT. 1.0E-08)

	      FX=DC1(I,J)*EXP(HDKT*EDGE(I)*(1.0_LDP/T1(J)-1.0_LDP/T_EXCITE))*
	      FX=DC1(I,J)*EXP(HDKT*EDGE(I)*(1.0D0/T1(J)-1.0D0/T_EXCITE))*

	1           (T_EXCITE/T1(J))**1.5_LDP
	1           (T_EXCITE/T1(J))**1.5D0

	      DELTA_T=(FX-1.0_LDP)*T_EXCITE/FX/(1.5_LDP+HDKT*EDGE(I)/T_EXCITE)
	      DELTA_T=(FX-1.0D0)*T_EXCITE/FX/(1.5D0+HDKT*EDGE(I)/T_EXCITE)

	      IF(DELTA_T .GT.  0.8_LDP*T_EXCITE)DELTA_T=0.8_LDP*T_EXCITE
	      IF(DELTA_T .GT.  0.8D0*T_EXCITE)DELTA_T=0.8D0*T_EXCITE

	      IF(DELTA_T .LT. -0.8_LDP*T_EXCITE)DELTA_T=-0.8_LDP*T_EXCITE
	      IF(DELTA_T .LT. -0.8D0*T_EXCITE)DELTA_T=-0.8D0*T_EXCITE

	    DO WHILE(ABS(DELTA_T) .GT. 1.0E-08_LDP)
	    DO WHILE(ABS(DELTA_T) .GT. 1.0E-08)

	      FX=DC2(I,J)*EXP(HDKT*EDGE(I)*(1.0_LDP/T2(J)-1.0_LDP/T_EXCITE))*
	      FX=DC2(I,J)*EXP(HDKT*EDGE(I)*(1.0D0/T2(J)-1.0D0/T_EXCITE))*

	1           (T_EXCITE/T2(J))**1.5_LDP
	1           (T_EXCITE/T2(J))**1.5D0

	      DELTA_T=(FX-1.0_LDP)*T_EXCITE/FX/(1.5_LDP+HDKT*EDGE(I)/T_EXCITE)
	      DELTA_T=(FX-1.0D0)*T_EXCITE/FX/(1.5D0+HDKT*EDGE(I)/T_EXCITE)

	      IF(DELTA_T .GT.  0.8_LDP*T_EXCITE)DELTA_T=0.8_LDP*T_EXCITE
	      IF(DELTA_T .GT.  0.8D0*T_EXCITE)DELTA_T=0.8D0*T_EXCITE

	      IF(DELTA_T .LT. -0.8_LDP*T_EXCITE)DELTA_T=-0.8_LDP*T_EXCITE
	      IF(DELTA_T .LT. -0.8D0*T_EXCITE)DELTA_T=-0.8D0*T_EXCITE

	X1=0.5_LDP
	X1=0.5D0

	DELTA_T=0.5_LDP*(R2(ND2)-R1(ND1))/V1(ND1)
	DELTA_T=0.5D0*(R2(ND2)-R1(ND1))/V1(ND1)

	ED(1:ND)=EXP( (1.0_LDP-X1)*LOG(ED1(1:ND))+X1*TA)
	ED(1:ND)=EXP( (1.0D0-X1)*LOG(ED1(1:ND))+X1*TA)

	DION(1:ND)=EXP( (1.0_LDP-X1)*LOG(DION1(1:ND))+X1*TC)
	DION(1:ND)=EXP( (1.0D0-X1)*LOG(DION1(1:ND))+X1*TC)

	T(1:ND)=EXP( (1.0_LDP-X1)*LOG(T1(1:ND))+X1*TC)
	T(1:ND)=EXP( (1.0D0-X1)*LOG(T1(1:ND))+X1*TC)

	  DC(J,1:ND)=EXP( (1.0_LDP-X1)*LOG(DC1(J,1:ND))+X1*TC(1:ND))
	  DC(J,1:ND)=EXP( (1.0D0-X1)*LOG(DC1(J,1:ND))+X1*TC(1:ND))

	    DC(J,I)=EXP(HDKT*EDGE(J)*(1.0_LDP/DC(J,I)-1.0_LDP/T(I)))*
	    DC(J,I)=EXP(HDKT*EDGE(J)*(1.0D0/DC(J,I)-1.0D0/T(I)))*

	1         (T(I)/DC(J,I))**1.5_LDP
	1         (T(I)/DC(J,I))**1.5D0


check_ba_estimates.f

	 PRED_CHNG(I)=CMAT_B(I,NT)*(POPS_B(NT)/POPS_A(NT)-1.0_LDP)
	 PRED_CHNG(I)=CMAT_B(I,NT)*(POPS_B(NT)/POPS_A(NT)-1.0D0)

	 RATIO(I)=0.0_LDP
	 RATIO(I)=0.0D0

	 IF(ACT_CHNG(I) .NE. 0.0_LDP)RATIO(I)=PRED_CHNG(I)/ACT_CHNG(I)
	 IF(ACT_CHNG(I) .NE. 0.0D0)RATIO(I)=PRED_CHNG(I)/ACT_CHNG(I)


check_energy_cons.f

	SN_AGE=0.0_LDP
	SN_AGE=0.0D0

	VINF=0.0_LDP
	VINF=0.0D0

	C_MMS=1.0E-08_LDP*SPEED_OF_LIGHT()
	C_MMS=1.0D-08*SPEED_OF_LIGHT()

	PI=4.0_LDP*ATAN(1.0_LDP)
	PI=4.0D0*ATAN(1.0D0)

          LUM_CONV_FACTOR=16*ATAN(1.0_LDP)*1.0E+15_LDP*1.0E-23_LDP*((3.0856E+21_LDP)**2)/3.826E+33_LDP
          LUM_CONV_FACTOR=16*ATAN(1.0D0)*1.0D+15*1.0D-23*((3.0856D+21)**2)/3.826D+33

	        ALLOCATE(OBS_FREQ(NCF_MAX)); OBS_FREQ=0.0_LDP
	        ALLOCATE(OBS_FREQ(NCF_MAX)); OBS_FREQ=0.0D0

	        DO WHILE(OBS_FREQ(NCF) .EQ. 0.0_LDP)
	        DO WHILE(OBS_FREQ(NCF) .EQ. 0.0D0)

              L_OBS(I)=0.0_LDP
              L_OBS(I)=0.0D0

              L_OBS(I)=LUM_CONV_FACTOR*L_OBS(I)*0.5_LDP
              L_OBS(I)=LUM_CONV_FACTOR*L_OBS(I)*0.5D0

	    IF( ABS(1.0_LDP-R_RVTJ(J)/R(J)) .GT. 1.0E-07_LDP)THEN
	    IF( ABS(1.0D0-R_RVTJ(J)/R(J)) .GT. 1.0D-07)THEN

	  YV=0.0_LDP
	  YV=0.0D0

	  E_RAD(I)=2.0_LDP*PI*4.0E+37_LDP*PI*SUM(YV(1:ND))/C_MMS
	  E_RAD(I)=2.0D0*PI*4.0D+37*PI*SUM(YV(1:ND))/C_MMS

	SN_AGE(1:NMOD)=SN_AGE(1:NMOD)*24.0_LDP*3600.0_LDP
	SN_AGE(1:NMOD)=SN_AGE(1:NMOD)*24.0D0*3600.0D0

	T1=0.0_LDP; T2=0.0_LDP; T3=0.0_LDP
	T1=0.0D0; T2=0.0D0; T3=0.0D0

	   T1=T1+(SN_AGE(I)-SN_AGE(I-1))*(SN_AGE(I)*L_CMF(I)+SN_AGE(I-1)*L_CMF(I-1))*0.5_LDP*3.826E+33_LDP
	   T1=T1+(SN_AGE(I)-SN_AGE(I-1))*(SN_AGE(I)*L_CMF(I)+SN_AGE(I-1)*L_CMF(I-1))*0.5D0*3.826D+33

	   T2=T2+(SN_AGE(I)-SN_AGE(I-1))*(SN_AGE(I)*L_DECAY(I)+SN_AGE(I-1)*L_DECAY(I-1))*0.5_LDP*3.826E+33_LDP
	   T2=T2+(SN_AGE(I)-SN_AGE(I-1))*(SN_AGE(I)*L_DECAY(I)+SN_AGE(I-1)*L_DECAY(I-1))*0.5D0*3.826D+33

	   T3=T3+(SN_AGE(I)-SN_AGE(I-1))*(SN_AGE(I)*L_INTERN(I)+SN_AGE(I-1)*L_INTERN(I-1))*0.5_LDP*3.826E+33_LDP
	   T3=T3+(SN_AGE(I)-SN_AGE(I-1))*(SN_AGE(I)*L_INTERN(I)+SN_AGE(I-1)*L_INTERN(I-1))*0.5D0*3.826D+33

	   T5=100.0_LDP*(E_CONS(I)-SN_AGE(1)*E_RAD(1))
	   T5=100.0D0*(E_CONS(I)-SN_AGE(1)*E_RAD(1))

	   T5=2.0_LDP*T5/(ABS(T1)+ABS(T2)+ABS(T3)+SN_AGE(I)*E_RAD(I)+SN_AGE(1)*E_RAD(1))
	   T5=2.0D0*T5/(ABS(T1)+ABS(T2)+ABS(T3)+SN_AGE(I)*E_RAD(I)+SN_AGE(1)*E_RAD(1))

	T1=0.0_LDP; T2=0.0_LDP; T3=0.0_LDP
	T1=0.0D0; T2=0.0D0; T3=0.0D0

	   T1=T1+(SN_AGE(I)-SN_AGE(I-1))*(SN_AGE(I)*L_CMF(I)+SN_AGE(I-1)*L_CMF(I-1))*0.5_LDP*3.826E+33_LDP
	   T1=T1+(SN_AGE(I)-SN_AGE(I-1))*(SN_AGE(I)*L_CMF(I)+SN_AGE(I-1)*L_CMF(I-1))*0.5D0*3.826D+33

	   T2=T2+(SN_AGE(I)-SN_AGE(I-1))*(SN_AGE(I)*L_DECAY(I)+SN_AGE(I-1)*L_DECAY(I-1))*0.5_LDP*3.826E+33_LDP
	   T2=T2+(SN_AGE(I)-SN_AGE(I-1))*(SN_AGE(I)*L_DECAY(I)+SN_AGE(I-1)*L_DECAY(I-1))*0.5D0*3.826D+33

	   T3=T3+(SN_AGE(I)-SN_AGE(I-1))*(SN_AGE(I)*L_INTERN(I)+SN_AGE(I-1)*L_INTERN(I-1))*0.5_LDP*3.826E+33_LDP
	   T3=T3+(SN_AGE(I)-SN_AGE(I-1))*(SN_AGE(I)*L_INTERN(I)+SN_AGE(I-1)*L_INTERN(I-1))*0.5D0*3.826D+33

	T1=0.0_LDP; T2=0.0_LDP; T3=0.0_LDP
	T1=0.0D0; T2=0.0D0; T3=0.0D0

	E_CONS(1)=0.0_LDP
	E_CONS(1)=0.0D0

	   T1=T1+(SN_AGE(I)-SN_AGE(I-1))*(L_CMF(I)+L_CMF(I-1))*0.5_LDP*3.826E+33_LDP
	   T1=T1+(SN_AGE(I)-SN_AGE(I-1))*(L_CMF(I)+L_CMF(I-1))*0.5D0*3.826D+33

	   T2=T2+(SN_AGE(I)-SN_AGE(I-1))*(L_DECAY(I)+L_DECAY(I-1))*0.5_LDP*3.826E+33_LDP
	   T2=T2+(SN_AGE(I)-SN_AGE(I-1))*(L_DECAY(I)+L_DECAY(I-1))*0.5D0*3.826D+33

	   T3=T3+(SN_AGE(I)-SN_AGE(I-1))*(L_INTERN(I)+L_INTERN(I-1))*0.5_LDP*3.826E+33_LDP
	   T3=T3+(SN_AGE(I)-SN_AGE(I-1))*(L_INTERN(I)+L_INTERN(I-1))*0.5D0*3.826D+33

	   E_CONS(I)=E_CONS(I-1)+(SN_AGE(I)-SN_AGE(I-1))*(E_RAD(I)/SN_AGE(I)+E_RAD(I-1)/SN_AGE(I-1))*0.5_LDP
	   E_CONS(I)=E_CONS(I-1)+(SN_AGE(I)-SN_AGE(I-1))*(E_RAD(I)/SN_AGE(I)+E_RAD(I-1)/SN_AGE(I-1))*0.5D0


chk_ba_est.f

	  IF(T1 .NE. 0)T1=100.0_LDP*(dSTEQ(I)/T1-1.0_LDP)
	  IF(T1 .NE. 0)T1=100.0D0*(dSTEQ(I)/T1-1.0D0)


chk_phot.f

	CHIBF=2.815E-06_LDP
	CHIBF=2.815E-06

	CHIFF=3.69E-29_LDP
	CHIFF=3.69E-29

	HDKT=4.7994145_LDP
	HDKT=4.7994145

	TWOHCSQ=0.0147452575_LDP
	TWOHCSQ=0.0147452575

	OPLIN=2.6540081E+08_LDP
	OPLIN=2.6540081E+08

	EMLIN=5.27296E-03_LDP
	EMLIN=5.27296E-03

	TEMP(1)=1.0_LDP
	TEMP(1)=1.0D0

	TEMP(2)=2.0_LDP
	TEMP(2)=2.0D0

	TEMP(3)=4.0_LDP
	TEMP(3)=4.0D0

	TEMP(4)=8.0_LDP
	TEMP(4)=8.0D0

	GF_CUT=0.0_LDP			!These ensure we get all transitions.
	GF_CUT=0.0D0			!These ensure we get all transitions.

	      T1=0.0_LDP
	      T1=0.0D0

	  EDGE_PACK(:)=0.0_LDP; G_PACK(:)=0.0_LDP; FOSC_PACK(:,:)=0.0_LDP
	  EDGE_PACK(:)=0.0D0; G_PACK(:)=0.0D0; FOSC_PACK(:,:)=0.0D0

	  ARAD=0.0_LDP; GAM2=0.0_LDP; GAM4=0.0_LDP
	  ARAD=0.0D0; GAM2=0.0D0; GAM4=0.0D0

	AT_NO=12.0_LDP
	AT_NO=12.0D0

	SIG_GAU_KMS=3000.0_LDP
	SIG_GAU_KMS=3000.0D0

	FRAC_SIG_GAU=0.25_LDP
	FRAC_SIG_GAU=0.25D0

	CUT_ACCURACY=0.02_LDP
	CUT_ACCURACY=0.02

	  VSM_DIE_KMS=3000.0_LDP
	  VSM_DIE_KMS=3000.0D0

	  IF(EXC_EN .NE. 0.0_LDP)THEN
	  IF(EXC_EN .NE. 0.0D0)THEN

	    RECOM_PACK(:,:)=0.0_LDP
	    RECOM_PACK(:,:)=0.0D0


comp_ba_mat_sol.f

	HDKT=4.7994145_LDP
	HDKT=4.7994145

	   IF(STEQ_RD(I) .EQ. 0.0_LDP)THEN
	   IF(STEQ_RD(I) .EQ. 0.0D0)THEN

	  IONIZATION_ENERGY=109678.7640_LDP
	  IONIZATION_ENERGY=109678.7640D0

	    EDGE(I)=IONIZATION_ENERGY*SPEED_OF_LIGHT()*1.0E-15_LDP/I/I
	    EDGE(I)=IONIZATION_ENERGY*SPEED_OF_LIGHT()*1.0D-15/I/I

	    STAT_WT(I)=2.0_LDP*I*I
	    STAT_WT(I)=2.0D0*I*I

	  GION=1.0_LDP
	  GION=1.0D0

	  RGU=LOG(2.07078E-22_LDP)
	  RGU=LOG(2.07078D-22)

	  Y=POPS(N-1)*POPS(N-2)*( POPS(N)**(-1.5_LDP) )/GION
	  Y=POPS(N-1)*POPS(N-2)*( POPS(N)**(-1.5D0) )/GION

	      CMAT(I,N)=CMAT(I,N)-(1.5_LDP+HDKT*EDGE(J)/POPS(N))*CMAT(I,J)
	      CMAT(I,N)=CMAT(I,N)-(1.5D0+HDKT*EDGE(J)/POPS(N))*CMAT(I,J)

	RHS=0.0_LDP
	RHS=0.0D0

	LARGEST_VAL=1.0E-42_LDP
	LARGEST_VAL=1.0D-42

	T1=0.0_LDP
	T1=0.0D0

	T2=1.0_LDP
	T2=1.0D0

	IF(SAV_STEQ(N) .NE. 0.0_LDP)T2=SAV_STEQ(N)
	IF(SAV_STEQ(N) .NE. 0.0D0)T2=SAV_STEQ(N)

	  DI_NEW=POPS(N-2)*(1.0_LDP-STEQ(N-2))
	  DI_NEW=POPS(N-2)*(1.0D0-STEQ(N-2))

	  ED_NEW=POPS(N-1)*(1.0_LDP-STEQ(N-1))
	  ED_NEW=POPS(N-1)*(1.0D0-STEQ(N-1))

	  T_NEW=POPS(N)*(1.0_LDP-STEQ(N))
	  T_NEW=POPS(N)*(1.0D0-STEQ(N))

	  RGU=LOG(2.07078E-22_LDP)
	  RGU=LOG(2.07078D-22)

	  Y=ED_NEW*DI_NEW*( T_NEW**(-1.5_LDP) )/GION
	  Y=ED_NEW*DI_NEW*( T_NEW**(-1.5D0) )/GION

	    NEW_POPS(I)=(POPS(I)/PLTE(I))*(1.0_LDP-STEQ(I))*NEW_LTE(I)
	    NEW_POPS(I)=(POPS(I)/PLTE(I))*(1.0-STEQ(I))*NEW_LTE(I)

	RHS=0.0_LDP
	RHS=0.0D0

	LARGEST_VAL=1.0E-42_LDP
	LARGEST_VAL=1.0D-42

	  OLD_SOL(I)=MAX(1.0_LDP,ABS(STEQ(I)))
	  OLD_SOL(I)=MAX(1.0D0,ABS(STEQ(I)))

	RHS=0.0_LDP
	RHS=0.0D0

	LARGEST_VAL=1.0E-42_LDP
	LARGEST_VAL=1.0D-42


count_phot_data.f


create_batch_ins.f


create_batobs_ins.f

	        STRING='    -e "/\'//STRING(K1:K2-1)//'\]/s/._LDP*/'//TRIM(STRING)//'/" \'
	        STRING='    -e "/\'//STRING(K1:K2-1)//'\]/s/.*/'//TRIM(STRING)//'/" \'

	        STRING='sed -e "/\'//STRING(K1:K2-1)//'\]/s/._LDP*/'//TRIM(STRING)//'/" \'
	        STRING='sed -e "/\'//STRING(K1:K2-1)//'\]/s/.*/'//TRIM(STRING)//'/" \'


create_if_file.f

	TS(:)%SN_AGE=0.0_LDP
	TS(:)%SN_AGE=0.0D0

	  TS(L)%T=1.0E+04_LDP*TS(L)%T
	  TS(L)%T=1.0D+04*TS(L)%T


create_kappa_file.f

	TS(:)%SN_AGE=0.0_LDP
	TS(:)%SN_AGE=0.0D0

	  TS(L)%T=1.0E+04_LDP*TS(L)%T
	  TS(L)%T=1.0D+04*TS(L)%T

	  TS(L)%ROSS_MEAN=1.0E-10_LDP*TS(L)%ROSS_MEAN/TS(L)%DENSITY
	  TS(L)%ROSS_MEAN=1.0D-10*TS(L)%ROSS_MEAN/TS(L)%DENSITY

	  TS(L)%FLUX_MEAN=1.0E-10_LDP*TS(L)%FLUX_MEAN/TS(L)%DENSITY
	  TS(L)%FLUX_MEAN=1.0D-10*TS(L)%FLUX_MEAN/TS(L)%DENSITY

	  TS(L)%PLANCK_MEAN=1.0E-10_LDP*TS(L)%PLANCK_MEAN/TS(L)%DENSITY
	  TS(L)%PLANCK_MEAN=1.0D-10*TS(L)%PLANCK_MEAN/TS(L)%DENSITY

	  IF(TS(L)%PLANCK_MEAN(1) .EQ. 0.0_LDP)THEN
	  IF(TS(L)%PLANCK_MEAN(1) .EQ. 0.0D0)THEN

	        TS(L)%PLANCK_MEAN(I)=1.0E-99_LDP
	        TS(L)%PLANCK_MEAN(I)=1.0D-99

	  TS(L)%JCMF=0.0_LDP; HTMP=0.0_LDP
	  TS(L)%JCMF=0.0D0; HTMP=0.0D0

	    T1=0.5E+15_LDP*(NU(ML)-NU(ML+1))
	    T1=0.5D+15*(NU(ML)-NU(ML+1))

	    RMID(I)=0.5_LDP*(TS(L)%R(I)+TS(L)%R(I-1))
	    RMID(I)=0.5D0*(TS(L)%R(I)+TS(L)%R(I-1))


create_mod_sum.f

	       IF(T1 .LT. 1.0_LDP .AND. T1 .GT. 0.1_LDP)THEN
	       IF(T1 .LT. 1.0 .AND. T1 .GT. 0.1)THEN

	  IF(T1 .LT. 1.0_LDP .AND. T1 .GT. 0.1_LDP)THEN
	  IF(T1 .LT. 1.0 .AND. T1 .GT. 0.1)THEN


create_pp_mod_sum.f

	  IF(T1 .LT. 1.0_LDP .AND. T1 .GT. 0.1_LDP)THEN
	  IF(T1 .LT. 1.0 .AND. T1 .GT. 0.1)THEN


do_ng_v2.f

	  SCALE_FAC=2.0_LDP
	  SCALE_FAC=2.0D0

	  SCALE_FAC=2.0_LDP
	  SCALE_FAC=2.0D0

	  SCALE_FAC=2.0_LDP
	  SCALE_FAC=2.0D0

	  BIG_FAC=5.0_LDP
	  BIG_FAC=5.0D0

	BIG_POPS(NT+3,:)=SIGMA(:)+1.0_LDP
	BIG_POPS(NT+3,:)=SIGMA(:)+1.0D0

	  RDPOPS(NT+3,:,I)=SIGMA(:)+1.0_LDP
	  RDPOPS(NT+3,:,I)=SIGMA(:)+1.0D0

	      BIG_POPS(I,J)=0.5_LDP*(RDPOPS(I,J,IT1)+RDPOPS(I,J,IT2))
	      BIG_POPS(I,J)=0.5D0*(RDPOPS(I,J,IT1)+RDPOPS(I,J,IT2))

	  REAL_LIMIT=1.0E-08_LDP
	  REAL_LIMIT=1.0D-08

	        RDPOPS(:,J,K)=0.5_LDP*(RDPOPS(:,J,2*K-1)+RDPOPS(:,J,2*K))
	        RDPOPS(:,J,K)=0.5D0*(RDPOPS(:,J,2*K-1)+RDPOPS(:,J,2*K))

	    IF(T1 .LT. -1.0_LDP)THEN
	    IF(T1 .LT. -1.0)THEN

	        T2=(RDPOPS(I,J,1)-RDPOPS(I,J,2))/(T1-1.0_LDP)
	        T2=(RDPOPS(I,J,1)-RDPOPS(I,J,2))/(T1-1.0D0)

	        IF(T2 .LT. -0.5_LDP*RDPOPS(I,J,1))T2=-0.5_LDP*RDPOPS(I,J,1)
	        IF(T2 .LT. -0.5D0*RDPOPS(I,J,1))T2=-0.5D0*RDPOPS(I,J,1)

	    ELSE IF(T1 .GT. 1.0_LDP)THEN
	    ELSE IF(T1 .GT. 1.0)THEN

	      IF(T1 .LT. 1.010_LDP)T1=1.010_LDP
	      IF(T1 .LT. 1.010D0)T1=1.010D0

	        T2=(RDPOPS(I,J,1)-RDPOPS(I,J,2))/(T1-1.0_LDP)
	        T2=(RDPOPS(I,J,1)-RDPOPS(I,J,2))/(T1-1.0D0)

	        IF(T2 .LT. -0.5_LDP*RDPOPS(I,J,1))T2=-0.5_LDP*RDPOPS(I,J,1)
	        IF(T2 .LT. -0.5D0*RDPOPS(I,J,1))T2=-0.5D0*RDPOPS(I,J,1)

	        BIG_POPS(I,J)=RDPOPS(I,J,1)*(1.0_LDP+T1)**K
	        BIG_POPS(I,J)=RDPOPS(I,J,1)*(1.0D0+T1)**K

	      BIG_POPS(I,J)=RDPOPS(I,J,1)*(1.0_LDP+T1)**K
	      BIG_POPS(I,J)=RDPOPS(I,J,1)*(1.0D0+T1)**K

	    T1=-1000.0_LDP
	    T1=-1000.0D0

	    T2=1000.0_LDP
	    T2=1000.0D0

	    IF(T3*T2 .GT. (1.0_LDP-1.0_LDP/BIG_FAC))T3=(1.0_LDP-1.0_LDP/BIG_FAC)/T2
	    IF(T3*T2 .GT. (1.0D0-1.0D0/BIG_FAC))T3=(1.0D0-1.0D0/BIG_FAC)/T2

	      IF(T1 .LT. -0.9_LDP)T1=-0.9
	      IF(T1 .LT. -0.9)T1=-0.9

	      IF(T1 .GT. 10.0_LDP)T1=10.0
	      IF(T1 .GT. 10.0)T1=10.0

	      BIG_POPS(I,J)=BIG_POPS(I,J)*(1.0_LDP+T1)
	      BIG_POPS(I,J)=BIG_POPS(I,J)*(1.0D0+T1)

	SIGMA(2:ND-1)=BIG_POPS(NT+3,2:ND-1)-1.0_LDP
	SIGMA(2:ND-1)=BIG_POPS(NT+3,2:ND-1)-1.0D0

	VEC_INC(1:ND)=0.0_LDP
	VEC_INC(1:ND)=0.0D0

	VEC_DEC(1:ND)=0.0_LDP
	VEC_DEC(1:ND)=0.0D0

	T1=0.0_LDP
	T1=0.0D0

	  TA(L)=100.0_LDP*(1.0_LDP-RDPOPS(T_INDEX,L,1)/NEWPOP(T_INDEX,L))
	  TA(L)=100.0D0*(1.0D0-RDPOPS(T_INDEX,L,1)/NEWPOP(T_INDEX,L))

	  TB(L)=100.0_LDP*(1.0_LDP-RDPOPS(T_INDEX,L,2)/RDPOPS(T_INDEX,L,1))
	  TB(L)=100.0D0*(1.0D0-RDPOPS(T_INDEX,L,2)/RDPOPS(T_INDEX,L,1))

	  TC(L)=100.0_LDP*(1.0_LDP-RDPOPS(T_INDEX,L,3)/RDPOPS(T_INDEX,L,2))
	  TC(L)=100.0D0*(1.0D0-RDPOPS(T_INDEX,L,3)/RDPOPS(T_INDEX,L,2))

	IF(T1 .EQ. 0.0_LDP)THEN
	IF(T1 .EQ. 0.0D0)THEN

	    TA(L)=100.0_LDP*(1.0_LDP-RDPOPS(K,L,1)/NEWPOP(K,L))
	    TA(L)=100.0D0*(1.0D0-RDPOPS(K,L,1)/NEWPOP(K,L))

	    TB(L)=100.0_LDP*(1.0_LDP-RDPOPS(K,L,2)/RDPOPS(K,L,1))
	    TB(L)=100.0D0*(1.0D0-RDPOPS(K,L,2)/RDPOPS(K,L,1))

	  LOCDEC=1000.0_LDP	
	  LOCDEC=1000.0	

	    IF(POPS(K,L) .NE. 0.0_LDP)T1=NEWPOP(K,L)/POPS(K,L)
	    IF(POPS(K,L) .NE. 0.0D0)T1=NEWPOP(K,L)/POPS(K,L)

	  VEC_INC(L)=100.0_LDP*(LOCINC-1.0_LDP)
	  VEC_INC(L)=100.0D0*(LOCINC-1.0D0)

	  VEC_DEC(L)=100.0_LDP*(LOCDEC-1.0_LDP)
	  VEC_DEC(L)=100.0D0*(LOCDEC-1.0D0)

	        IF(NEWPOP(K,L) .LT. 0.1_LDP*POPS(K,L))THEN
	        IF(NEWPOP(K,L) .LT. 0.1D0*POPS(K,L))THEN

	          POPS(K,L)=0.1_LDP*POPS(K,L)
	          POPS(K,L)=0.1D0*POPS(K,L)

	        ELSE IF(NEWPOP(K,L) .GT. 10.0_LDP*POPS(K,L))THEN
	        ELSE IF(NEWPOP(K,L) .GT. 10.0D0*POPS(K,L))THEN

	          POPS(K,L)=10.0_LDP*POPS(K,L)
	          POPS(K,L)=10.0D0*POPS(K,L)

	      T1=1.0_LDP
	      T1=1.0D0

                ELSE IF(NEWPOP(K,L) .LT. 0.1_LDP*POPS(K,L))THEN
                ELSE IF(NEWPOP(K,L) .LT. 0.1D0*POPS(K,L))THEN

                  T1=MIN( T1, 0.9_LDP*POPS(K,L)/(POPS(K,L)-NEWPOP(K,L)) )
                  T1=MIN( T1, 0.9D0*POPS(K,L)/(POPS(K,L)-NEWPOP(K,L)) )

                ELSE IF(NEWPOP(K,L) .GT. 10.0_LDP*POPS(K,L))THEN
                ELSE IF(NEWPOP(K,L) .GT. 10.0D0*POPS(K,L))THEN

                  T1=MIN( T1, 9.0_LDP*POPS(K,L)/(NEWPOP(K,L)-POPS(K,L)) )
                  T1=MIN( T1, 9.0D0*POPS(K,L)/(NEWPOP(K,L)-POPS(K,L)) )

	  ELSE IF(LOCINC .GT. 10.1_LDP .OR. LOCDEC .LT. 0.09_LDP)THEN
	  ELSE IF(LOCINC .GT. 10.1D0 .OR. LOCDEC .LT. 0.09D0)THEN

	MAXINC=100.0_LDP*(MAXINC-1.0_LDP)
	MAXINC=100.0D0*(MAXINC-1.0D0)

	MAXDEC=100.0_LDP*(1.0_LDP/MAXDEC-1.0_LDP)
	MAXDEC=100.0D0*(1.0D0/MAXDEC-1.0D0)


do_recom_sum.f

	DATA T_REC_CHK/0.1_LDP,0.2_LDP,0.5_LDP,1.0_LDP,2.0_LDP,5.0_LDP,10.0_LDP/
	DATA T_REC_CHK/0.1D0,0.2D0,0.5D0,1.0D0,2.0D0,5.0D0,10.0D0/

	     RECOM_CHK=0.0_LDP
	     RECOM_CHK=0.0D0

                    RECOM_CHK(K)=(1.0_LDP-T1)*RECOM_RATE(I)+T1*RECOM_RATE(I+1)
                    RECOM_CHK(K)=(1.0D0-T1)*RECOM_RATE(I)+T1*RECOM_RATE(I+1)


ed_vadat.f


extrap_scr.f

	T1=1.0E-05_LDP*24.0_LDP*3600.0_LDP*(SCR(3)%SN_AGE-SCR(2)%SN_AGE)
	T1=1.0D-05*24.0D0*3600.0D0*(SCR(3)%SN_AGE-SCR(2)%SN_AGE)

	  T2=0.0_LDP
	  T2=0.0D0

	    T1=ABS(1.0_LDP-SCR(2)%V(I)/SCR(1)%V(I))
	    T1=ABS(1.0D0-SCR(2)%V(I)/SCR(1)%V(I))

	  IF(T2 .GT. 1.0E-08_LDP)SAME_GRID=.FALSE.
	  IF(T2 .GT. 1.0D-08)SAME_GRID=.FALSE.

	  SCR(3)%POPS=T1*LOG(SCR(2)%POPS)+(1.0_LDP-T1)*LOG(SCR(1)%POPS)
	  SCR(3)%POPS=T1*LOG(SCR(2)%POPS)+(1.0D0-T1)*LOG(SCR(1)%POPS)

	  SCR(3)%POPS=T1*LOG(SCR(2)%POPS)+(1.0_LDP-T1)*LOG(SCR(1)%WRK_POPS)
	  SCR(3)%POPS=T1*LOG(SCR(2)%POPS)+(1.0D0-T1)*LOG(SCR(1)%WRK_POPS)


get_exc_freq.f


guess_dc.f

	CHIBF=2.815E-06_LDP
	CHIBF=2.815E-06

	CHIFF=3.69E-29_LDP
	CHIFF=3.69E-29

	HDKT=4.7994145_LDP
	HDKT=4.7994145

	TWOHCSQ=0.0147452575_LDP
	TWOHCSQ=0.0147452575

	OPLIN=2.6540081E+08_LDP
	OPLIN=2.6540081E+08

	EMLIN=5.27296E-03_LDP
	EMLIN=5.27296E-03

	OPLIN=2.6540081E+08_LDP
	OPLIN=2.6540081E+08

	EMLIN=5.27296E-03_LDP
	EMLIN=5.27296E-03

	  TAU_ROSS(1:ND)=0.0_LDP
	  TAU_ROSS(1:ND)=0.0D0

	 TA(1:ND_ATM)=6.65E-15_LDP*ED(1:ND_ATM)
	 TA(1:ND_ATM)=6.65D-15*ED(1:ND_ATM)

	PHOT_SUM(1:ND)=0.0_LDP
	PHOT_SUM(1:ND)=0.0D0

	RECOM_SUM(1:ND)=0.0_LDP
	RECOM_SUM(1:ND)=0.0D0

	    PHOT_SUM(I)=PHOT_SUM(I)+0.5_LDP*(NU(ML)-NU(ML+1))*(RJ(I,ML)+RJ(I,ML+1))
	    PHOT_SUM(I)=PHOT_SUM(I)+0.5D0*(NU(ML)-NU(ML+1))*(RJ(I,ML)+RJ(I,ML+1))

	    RECOM_SUM(I)=RECOM_SUM(I)+0.5_LDP*(NU(ML)-NU(ML+1))*(T1+T2)
	    RECOM_SUM(I)=RECOM_SUM(I)+0.5D0*(NU(ML)-NU(ML+1))*(T1+T2)

	IF(NU(EDGE_ML) .GT. 1.00000001_LDP*FEDGE(1))THEN
	IF(NU(EDGE_ML) .GT. 1.00000001D0*FEDGE(1))THEN

	      RJ1=(1.0_LDP-T1)*RJ(I,EDGE_ML)+T1*RJ(I,EDGE_ML+1)
	      RJ1=(1.0D0-T1)*RJ(I,EDGE_ML)+T1*RJ(I,EDGE_ML+1)

	      RJ2=(1.0_LDP-T2)*RJ(I,EDGE_ML)+T2*RJ(I,EDGE_ML+1)
	      RJ2=(1.0D0-T2)*RJ(I,EDGE_ML)+T2*RJ(I,EDGE_ML+1)

	      PHOT_SUM(I)=PHOT_SUM(I)+0.5_LDP*(NU1-NU2)*(RJ1+RJ2)
	      PHOT_SUM(I)=PHOT_SUM(I)+0.5D0*(NU1-NU2)*(RJ1+RJ2)

	      RECOM_SUM(I)=RECOM_SUM(I)+0.5_LDP*(NU1-NU2)*(T3+T4)
	      RECOM_SUM(I)=RECOM_SUM(I)+0.5D0*(NU1-NU2)*(T3+T4)

	T1=5.0_LDP
	T1=5.0D0

	  IF(GS_DC(I) .LT. 1.0E-250_LDP)THEN
	  IF(GS_DC(I) .LT. 1.0D-250)THEN

	    GS_DC(I)=1.0E-250_LDP
	    GS_DC(I)=1.0D-250

	  ELSE IF(ABS(GS_DC(I)-1.0_LDP) .LT. 0.1_LDP)THEN
	  ELSE IF(ABS(GS_DC(I)-1.0D0) .LT. 0.1D0)THEN

	      T1=LOG( GS_DC(I)*(T1/T(I))**1.5_LDP )/HDKT/FEDGE(1)+1.0_LDP/T(I)
	      T1=LOG( GS_DC(I)*(T1/T(I))**1.5 )/HDKT/FEDGE(1)+1.0/T(I)

	      T1=1.0_LDP/T1
	      T1=1.0/T1

	     DC(J,I)=((T(I)/T_EXC(I))**1.5_LDP )*EXP(HDKT*FEDGE(J)*(1.0_LDP/T_EXC(I)-1.0_LDP/T(I)))
	     DC(J,I)=((T(I)/T_EXC(I))**1.5 )*EXP(HDKT*FEDGE(J)*(1.0D0/T_EXC(I)-1.0D0/T(I)))

	    T1=LOG(2.07078E-22_LDP*ED(I)*DC(1,I))
	    T1=LOG(2.07078D-22*ED(I)*DC(1,I))

	    T1=GION_LOW/(T(I)**1.5_LDP)/GION_UP
	    T1=GION_LOW/(T(I)**1.5D0)/GION_UP

	  ION_POP(1:ND)=1.0E-10_LDP
	  ION_POP(1:ND)=1.0D-10


land_col_merge.f


land_multi_merge.f


mass_sc.f

	  IF(ABS(ABUND(1,J)-12.0_LDP) .LT. 0.1_LDP)THEN
	  IF(ABS(ABUND(1,J)-12.0D0) .LT. 0.1)THEN

	      ABUND(I,J)=10.0_LDP**(ABUND(I,J)-12.0_LDP)
	      ABUND(I,J)=10.0D0**(ABUND(I,J)-12.0D0)

	  MASS=0.0_LDP
	  MASS=0.0D0

	NEW_ABUND(:,:)=0.0_LDP
	NEW_ABUND(:,:)=0.0D0

	  OLD_MASS_SUM=0.0_LDP
	  OLD_MASS_SUM=0.0D0

	  NEW_MASS_SUM=0.0_LDP
	  NEW_MASS_SUM=0.0D0

	  MASS=0.0_LDP
	  MASS=0.0D0

	  NHE=0.0_LDP
	  NHE=0.0D0

	  IF(NHE .EQ. 0.0_LDP)NHE=MAXVAL(NEW_ABUND)
	  IF(NHE .EQ. 0.0D0)NHE=MAXVAL(NEW_ABUND)

	  MASS=0.0_LDP
	  MASS=0.0D0


merge_scr.f

	T1=1.0E-05_LDP*24.0_LDP*3600.0_LDP*(SCR(3)%SN_AGE-SCR(2)%SN_AGE)
	T1=1.0D-05*24.0D0*3600.0D0*(SCR(3)%SN_AGE-SCR(2)%SN_AGE)

	  T2=0.0_LDP
	  T2=0.0D0

	    T1=ABS(1.0_LDP-SCR(2)%V(I)/SCR(1)%V(I))
	    T1=ABS(1.0D0-SCR(2)%V(I)/SCR(1)%V(I))

	  IF(T2 .GT. 1.0E-08_LDP)SAME_GRID=.FALSE.
	  IF(T2 .GT. 1.0D-08)SAME_GRID=.FALSE.


mod_cool.f

	ALLOCATE (SUM(ND)); SUM=0.0_LDP
	ALLOCATE (SUM(ND)); SUM=0.0D0

	ALLOCATE (BOUND(ND));  BOUND=0.0_LDP
	ALLOCATE (BOUND(ND));  BOUND=0.0D0

	ALLOCATE (TOTAL_RATE(ND)); TOTAL_RATE=0.0_LDP
	ALLOCATE (TOTAL_RATE(ND)); TOTAL_RATE=0.0D0

	ALLOCATE (COOLING_TIME(ND)); COOLING_TIME=0.0_LDP
	ALLOCATE (COOLING_TIME(ND)); COOLING_TIME=0.0D0

	ALLOCATE (ATOM_DENSITY(ND)); ATOM_DENSITY=0.0_LDP
	ALLOCATE (ATOM_DENSITY(ND)); ATOM_DENSITY=0.0D0

	ALLOCATE (ED(ND)); ED=0.0_LDP
	ALLOCATE (ED(ND)); ED=0.0D0

	ALLOCATE (T(ND)); T=0.0_LDP
	ALLOCATE (T(ND)); T=0.0D0

	ALLOCATE (R(ND)); R=0.0_LDP
	ALLOCATE (R(ND)); R=0.0D0

	ALLOCATE (V(ND)); V=0.0_LDP
	ALLOCATE (V(ND)); V=0.0D0

	ALLOCATE (NET_RATE(ND)); NET_RATE=0.0_LDP
	ALLOCATE (NET_RATE(ND)); NET_RATE=0.0D0

	ALLOCATE (RAD_DECAY(ND));    RAD_DECAY=0.0_LDP
	ALLOCATE (RAD_DECAY(ND));    RAD_DECAY=0.0D0

	ALLOCATE (SHOCK_POWER(ND)); SHOCK_POWER=0.0_LDP
	ALLOCATE (SHOCK_POWER(ND)); SHOCK_POWER=0.0D0

	ALLOCATE (COL_RATE(ND));       COL_RATE=0.0_LDP
	ALLOCATE (COL_RATE(ND));       COL_RATE=0.0D0

	ALLOCATE (BF_RATE(ND));        BF_RATE=0.0_LDP
	ALLOCATE (BF_RATE(ND));        BF_RATE=0.0D0

	ALLOCATE (FF_RATE(ND));        FF_RATE=0.0_LDP
	ALLOCATE (FF_RATE(ND));        FF_RATE=0.0D0

	ALLOCATE (NT_RATE(ND));        NT_RATE=0.0_LDP
	ALLOCATE (NT_RATE(ND));        NT_RATE=0.0D0

	ALLOCATE (XKS_RATE(ND));      XKS_RATE=0.0_LDP
	ALLOCATE (XKS_RATE(ND));      XKS_RATE=0.0D0

	ALLOCATE (ART_HT(ND));          ART_HT=0.0_LDP
	ALLOCATE (ART_HT(ND));          ART_HT=0.0D0

	ALLOCATE (CHG_RATE(ND));      CHG_RATE=0.0_LDP
	ALLOCATE (CHG_RATE(ND));      CHG_RATE=0.0D0

	ALLOCATE (AC_RV(ND));            AC_RV=0.0_LDP
	ALLOCATE (AC_RV(ND));            AC_RV=0.0D0

	ALLOCATE (AC_RdT(ND));          AC_RDT=0.0_LDP
	ALLOCATE (AC_RdT(ND));          AC_RDT=0.0D0

	   T1=0.0_LDP
	   T1=0.0D0

	        SUM=0.0_LDP
	        SUM=0.0D0

	        SUM=0.0_LDP
	        SUM=0.0D0

	TOTAL_RATE=TOTAL_RATE*0.5_LDP
	TOTAL_RATE=TOTAL_RATE*0.5D0

	  COOLING_TIME=3.0_LDP*1.3806E-12_LDP*T*ED/TOTAL_RATE
	  COOLING_TIME=3.0D0*1.3806D-12*T*ED/TOTAL_RATE

	  COOLING_TIME=1.5_LDP*1.3806E-12_LDP*T*(ED+ATOM_DENSITY)/TOTAL_RATE
	  COOLING_TIME=1.5D0*1.3806D-12*T*(ED+ATOM_DENSITY)/TOTAL_RATE

	VALS=0.0_LDP
	VALS=0.0D0

	  IF(V(1) .GT. 0.0_LDP)THEN
	  IF(V(1) .GT. 0.0D0)THEN


mod_prrr.f

	CHG_IR(1:ND)=0.0_LDP
	CHG_IR(1:ND)=0.0D0

	COL_IR(1:ND)=0.0_LDP
	COL_IR(1:ND)=0.0D0

	NT_IR(1:ND)=0.0_LDP
	NT_IR(1:ND)=0.0D0

	CHG_RR(1:ND)=0.0_LDP
	CHG_RR(1:ND)=0.0D0

	COL_RR(1:ND)=0.0_LDP
	COL_RR(1:ND)=0.0D0

	XRAY_RR(1:ND)=0.0_LDP
	XRAY_RR(1:ND)=0.0D0

	ADVEC_RR(1:ND)=0.0_LDP
	ADVEC_RR(1:ND)=0.0D0

	RECOM_SUM(1:ND)=0.0_LDP
	RECOM_SUM(1:ND)=0.0D0

	PHOT_SUM(1:ND)=0.0_LDP
	PHOT_SUM(1:ND)=0.0D0

	1             ABS(ADVEC_RR(I)) )/2.0_LDP
	1             ABS(ADVEC_RR(I)) )/2.0D0

	  YLEV=0.0_LDP; YLEV(1)=PHOT(J,1); XLEV(1)=1
	  YLEV=0.0D0; YLEV(1)=PHOT(J,1); XLEV(1)=1

	       T1=T1/1.0E+06_LDP; T3=T3/1.0E+04_LDP; T4=T4/1.0E+04_LDP
	       T1=T1/1.0D+06; T3=T3/1.0D+04; T4=T4/1.0D+04

	         YVEC(K)=T1*(TEMP(K)**(-1.5_LDP))*EXP(-T3/TEMP(K))*(1.0_LDP+T2*EXP(-T4/TEMP(K)))
	         YVEC(K)=T1*(TEMP(K)**(-1.5D0))*EXP(-T3/TEMP(K))*(1.0D0+T2*EXP(-T4/TEMP(K)))

	      YVEC(1:ND)=1.0E+14_LDP*PHOT(1:ND,J)/ED/DI
	      YVEC(1:ND)=1.0D+14*PHOT(1:ND,J)/ED/DI

	      YVEC(1:ND)=1.0E+14_LDP*RECOM(1:ND,J)/ED/DI
	      YVEC(1:ND)=1.0D+14*RECOM(1:ND,J)/ED/DI

	IF(MAXVAL(ABS(PHOT_SUM)) .EQ. 0.0_LDP)RETURN
	IF(MAXVAL(ABS(PHOT_SUM)) .EQ. 0.0D0)RETURN

	    IF(PHOT_SUM(I) .GT. 0.0_LDP)YVEC(I)=LOG10(PHOT_SUM(I))
	    IF(PHOT_SUM(I) .GT. 0.0D0)YVEC(I)=LOG10(PHOT_SUM(I))


n_col_merge.f


n_multi_merge.f


n_pair_merge.f


output_term_seq.f


pack_osc.f

	CHIBF=2.815E-06_LDP
	CHIBF=2.815D-06

	CHIFF=3.69E-29_LDP
	CHIFF=3.69D-29

	HDKT=4.7994145_LDP
	HDKT=4.7994145D0

	TWOHCSQ=0.0147452575_LDP
	TWOHCSQ=0.0147452575D0

	OPLIN=2.6540081E+08_LDP
	OPLIN=2.6540081D+08

	EMLIN=5.27296E-03_LDP
	EMLIN=5.27296D-03

	GF_CUT=0.0_LDP			!These ensure we get all transitions.
	GF_CUT=0.0D0			!These ensure we get all transitions.

	EMIN_PACK=-1.0_LDP			!i.e. pack all states
	EMIN_PACK=-1.0D0			!i.e. pack all states

	  EDGE_PACK(:)=0.0_LDP; G_PACK(:)=0.0_LDP; FOSC_PACK(:,:)=0.0_LDP
	  EDGE_PACK(:)=0.0D0; G_PACK(:)=0.0D0; FOSC_PACK(:,:)=0.0D0

	        IF(FOSC(I,J) .EQ. 0.0_LDP)THEN
	        IF(FOSC(I,J) .EQ. 0.0D0)THEN

	  ARAD=0.0_LDP; GAM2=0.0_LDP; GAM4=0.0_LDP
	  ARAD=0.0D0; GAM2=0.0D0; GAM4=0.0D0

	      T1=0.0_LDP
	      T1=0.0D0


plt_alpha.f


plt_cmf_lum.f

	LUM=0.0_LDP; HJ_LUM=0.0_LDP; MECH=0.0_LDP; DJDT=0.0_LDP; ADI=0.0_LDP; LOC_SHOCK=0.0_LDP
	LUM=0.0D0; HJ_LUM=0.0D0; MECH=0.0D0; DJDT=0.0D0; ADI=0.0D0; LOC_SHOCK=0.0D0

	RAD_DECAY=0.0_LDP; TOTAL=0.0_LDP; CHANGE=0.0_LDP; T=0.0_LDP; WRK_VEC=0.0_LDP
	RAD_DECAY=0.0D0; TOTAL=0.0D0; CHANGE=0.0D0; T=0.0D0; WRK_VEC=0.0D0

	V(1:ND)=0.001_LDP*V(1:ND)
	V(1:ND)=0.001D0*V(1:ND)

	IF(T(1) .NE. 0.0_LDP)THEN
	IF(T(1) .NE. 0.0D0)THEN

	      IF(MAXVAL(ABS(MECH)) .GT. 0.0_LDP)NON_ZERO_MECH=.TRUE.
	      IF(MAXVAL(ABS(MECH)) .GT. 0.0D0)NON_ZERO_MECH=.TRUE.

	      IF(MAXVAL(ABS(LOC_SHOCK)) .GT. 0.0_LDP)NON_ZERO_LOC_SHOCK=.TRUE.
	      IF(MAXVAL(ABS(LOC_SHOCK)) .GT. 0.0D0)NON_ZERO_LOC_SHOCK=.TRUE.

	      IF(MAXVAL(ABS(ADI)) .GT. 0.0_LDP)NON_ZERO_ADI=.TRUE.
	      IF(MAXVAL(ABS(ADI)) .GT. 0.0D0)NON_ZERO_ADI=.TRUE.

	      IF(MAXVAL(ABS(HJ_LUM)) .GT. 0.0_LDP)NON_ZERO_HJ_LUM=.TRUE.
	      IF(MAXVAL(ABS(HJ_LUM)) .GT. 0.0D0)NON_ZERO_HJ_LUM=.TRUE.

	      IF(MAXVAL(ABS(DJDt)) .GT. 0.0_LDP)NON_ZERO_DJDt=.TRUE.
	      IF(MAXVAL(ABS(DJDt)) .GT. 0.0D0)NON_ZERO_DJDt=.TRUE.

	      IF(MAXVAL(ABS(RAD_DECAY)) .GT. 0.0_LDP)NON_ZERO_RAD_DECAY=.TRUE.
	      IF(MAXVAL(ABS(RAD_DECAY)) .GT. 0.0D0)NON_ZERO_RAD_DECAY=.TRUE.

	T1=0.0_LDP
	T1=0.0D0

	WRK_VEC=0.1_LDP*TOTAL/TOTAL(2)
	WRK_VEC=0.1*TOTAL/TOTAL(2)

	LOC_SHOCK(2:ND)=LOC_SHOCK(1:ND-1); LOC_SHOCK(1)=0.0_LDP
	LOC_SHOCK(2:ND)=LOC_SHOCK(1:ND-1); LOC_SHOCK(1)=0.0D0

	MECH(2:ND)=MECH(1:ND-1); MECH(1)=0.0_LDP
	MECH(2:ND)=MECH(1:ND-1); MECH(1)=0.0D0

	DJDT(2:ND)=DJDT(1:ND-1); DJDT(1)=0.0_LDP
	DJDT(2:ND)=DJDT(1:ND-1); DJDT(1)=0.0D0

	ADI(2:ND)=ADI(1:ND-1); ADI(1)=0.0_LDP
	ADI(2:ND)=ADI(1:ND-1); ADI(1)=0.0D0

	RAD_DECAY(2:ND)=RAD_DECAY(1:ND); RAD_DECAY(1)=0.0_LDP
	RAD_DECAY(2:ND)=RAD_DECAY(1:ND); RAD_DECAY(1)=0.0D0


plt_cool.f

	  LUM(1:ND)=100.0_LDP*(LUM(1:ND)-LUM_STAR)/LUM_STAR
	  LUM(1:ND)=100.0D0*(LUM(1:ND)-LUM_STAR)/LUM_STAR


plt_cool_sort.f

	RATE=0.0_LDP; VRATE=0.0_LDP; dLUM=0.0_LDP
	RATE=0.0D0; VRATE=0.0D0; dLUM=0.0D0

	  RATE=0.0_LDP
	  RATE=0.0D0

	IF(V(1) .GT. 10000.0_LDP)THEN
	IF(V(1) .GT. 10000.0D0)THEN

	  XV(1:ND)=1.0E-03_LDP*V(1:ND)
	  XV(1:ND)=1.0D-03*V(1:ND)

	dLUM=0.0_LDP
	dLUM=0.0D0

	T1=4.0_LDP*3.1459_LDP*1.0E+30_LDP
	T1=4.0D0*3.1459*1.0D+30

	T2=1.0_LDP
	T2=1.0D0

	      TOTAL=0.0_LDP
	      TOTAL=0.0D0

	      TOTAL(1:ND)=0.5_LDP*TOTAL(1:ND)                !Average of heating and cooling rate
	      TOTAL(1:ND)=0.5D0*TOTAL(1:ND)                !Average of heating and cooling rate

	    IF(V(1) .GT. 10000.0_LDP)THEN
	    IF(V(1) .GT. 10000.0D0)THEN

	      XV(1:ND)=1.0E-03_LDP*V(1:ND)
	      XV(1:ND)=1.0D-03*V(1:ND)

	    TMP_RATE=0.0_LDP; TMP_RATE=VRATE(1:NREC,IST:IEND)
	    TMP_RATE=0.0D0; TMP_RATE=VRATE(1:NREC,IST:IEND)

	      TMP_RATE(INDX(1),:)=0.0_LDP
	      TMP_RATE(INDX(1),:)=0.0D0

	        YV(1:ND)=100.0_LDP*RATE(POINT(L),1:ND)/TOTAL(1:ND)
	        YV(1:ND)=100.0D0*RATE(POINT(L),1:ND)/TOTAL(1:ND)


plt_ddt_work.f

	  T1=4.0_LDP*(4.0_LDP*ATAN(1.0_LDP))/2.998E+10_LDP
	  T1=4.0D0*(4.0D0*ATAN(1.0D0))/2.998D+10


plt_gf.f

	FRAC(1:ND,1:12)=FRAC(1:ND,1:12)*100.0_LDP
	FRAC(1:ND,1:12)=FRAC(1:ND,1:12)*100.0D0


plt_hydro.f

	GRAV_CON=1.0E-20_LDP*GRAVITATIONAL_CONSTANT()*MASS_SUN()
	GRAV_CON=1.0D-20*GRAVITATIONAL_CONSTANT()*MASS_SUN()

	  ALLOCATE(ATM(ID)%TEMP(ND));  ATM(ID)%TEMP=0.0_LDP
	  ALLOCATE(ATM(ID)%TEMP(ND));  ATM(ID)%TEMP=0.0D0

	  ALLOCATE(ATM(ID)%GAS_PRES(ND)); ATM(ID)%GAS_PRES=0.0_LDP
	  ALLOCATE(ATM(ID)%GAS_PRES(ND)); ATM(ID)%GAS_PRES=0.0D0

	  ALLOCATE(ATM(ID)%TAU(ND));           ATM(ID)%TAU=0.0_LDP
	  ALLOCATE(ATM(ID)%TAU(ND));           ATM(ID)%TAU=0.0D0

	  ALLOCATE(ATM(ID)%SOUND(ND));         ATM(ID)%SOUND=0.0_LDP
	  ALLOCATE(ATM(ID)%SOUND(ND));         ATM(ID)%SOUND=0.0D0

	  ALLOCATE(ATM(ID)%ATOM(ND));          ATM(ID)%ATOM=0.0_LDP
	  ALLOCATE(ATM(ID)%ATOM(ND));          ATM(ID)%ATOM=0.0D0

	  ALLOCATE(ATM(ID)%CLUMP_FAC(ND));     ATM(ID)%CLUMP_FAC=0.0_LDP
	  ALLOCATE(ATM(ID)%CLUMP_FAC(ND));     ATM(ID)%CLUMP_FAC=0.0D0

	  ALLOCATE(ATM(ID)%DENSITY(ND));       ATM(ID)%DENSITY=0.0_LDP
	  ALLOCATE(ATM(ID)%DENSITY(ND));       ATM(ID)%DENSITY=0.0D0

	  ALLOCATE(ATM(ID)%TAU_FLUX(ND));      ATM(ID)%TAU_FLUX=0.0_LDP
	  ALLOCATE(ATM(ID)%TAU_FLUX(ND));      ATM(ID)%TAU_FLUX=0.0D0

	  ALLOCATE(ATM(ID)%FLUX_MEAN(ND));     ATM(ID)%FLUX_MEAN=0.0_LDP
	  ALLOCATE(ATM(ID)%FLUX_MEAN(ND));     ATM(ID)%FLUX_MEAN=0.0D0

	    ATM(ID)%STARS_MASS=0.0_LDP
	    ATM(ID)%STARS_MASS=0.0D0

	  IF(ATM(ID)%STARS_MASS .EQ. 0.0_LDP)CALL GEN_IN(ATM(ID)%STARS_MASS,'Stars surface gravity')
	  IF(ATM(ID)%STARS_MASS .EQ. 0.0D0)CALL GEN_IN(ATM(ID)%STARS_MASS,'Stars surface gravity')

	  IF(ATM(ID)%STARS_MDOT .EQ. 0.0_LDP)CALL GEN_IN(ATM(ID)%STARS_MDOT,'Stars mass loss rate')
	  IF(ATM(ID)%STARS_MDOT .EQ. 0.0D0)CALL GEN_IN(ATM(ID)%STARS_MDOT,'Stars mass loss rate')

	  ALLOCATE(DATA_VECS(ATM(ID)%ND,NVECS)); DATA_VECS=0.0_LDP
	  ALLOCATE(DATA_VECS(ATM(ID)%ND,NVECS)); DATA_VECS=0.0D0

	    ATM(ID)%dVdR(I)=1.0E-05_LDP*ATM(ID)%VdVdR(I)/ATM(ID)%VEL(I)
	    ATM(ID)%dVdR(I)=1.0D-05*ATM(ID)%VdVdR(I)/ATM(ID)%VEL(I)

	  DO WHILE(ATM(ID)%ATOM(1) .EQ. 0.0_LDP .OR. ATM(ID)%CLUMP_FAC(1) .EQ. 0.0_LDP)
	  DO WHILE(ATM(ID)%ATOM(1) .EQ. 0.0D0 .OR. ATM(ID)%CLUMP_FAC(1) .EQ. 0.0D0)

	    ATM(ID)%GAS_PRES=1.0E+04_LDP*BOLTZMANN_CONSTANT()*(ATM(ID)%ED+ATM(ID)%ATOM)*ATM(ID)%TEMP
	    ATM(ID)%GAS_PRES=1.0D+04*BOLTZMANN_CONSTANT()*(ATM(ID)%ED+ATM(ID)%ATOM)*ATM(ID)%TEMP

	    ATM(ID)%XVEC(1:ND)=1000.0_LDP*ATM(ID)%dVdR(1:ND)
	    ATM(ID)%XVEC(1:ND)=1000.0D0*ATM(ID)%dVdR(1:ND)

	      ATM(ID)%YVEC(1:ND)=ATM(ID)%ATOM(1:ND)*6.65E-25_LDP*10.0E+05_LDP/ATM(ID)%dVdR(1:ND)
	      ATM(ID)%YVEC(1:ND)=ATM(ID)%ATOM(1:ND)*6.65D-25*10.0D+05/ATM(ID)%dVdR(1:ND)

	      ATM(ID)%XVEC(1:ND)=ATM(ID)%ATOM(1:ND)*6.65E-25_LDP*10.0E+05_LDP/ATM(ID)%dVdR(1:ND)
	      ATM(ID)%XVEC(1:ND)=ATM(ID)%ATOM(1:ND)*6.65D-25*10.0D+05/ATM(ID)%dVdR(1:ND)

	    T1=0.0_LDP
	    T1=0.0D0

	    DO WHILE(ATM(ID)%VEL(I+1) .GT. 30.0_LDP)
	    DO WHILE(ATM(ID)%VEL(I+1) .GT. 30.0D0)

	      ATM(ID)%YVEC(I)=(2.00_LDP*ATM(ID)%GRAD(I)+(1.0_LDP-T1)*ATM(ID)%GRAD(I))/ATM(ID)%VEL(I)/3.0_LDP
	      ATM(ID)%YVEC(I)=(2.00*ATM(ID)%GRAD(I)+(1.0D0-T1)*ATM(ID)%GRAD(I))/ATM(ID)%VEL(I)/3.0D0

	      ATM(ID)%ZVEC(I)=(ATM(ID)%GRAV(I)-T1*ATM(ID)%GRAD(I)/3.0_LDP)/ATM(ID)%VEL(I)
	      ATM(ID)%ZVEC(I)=(ATM(ID)%GRAV(I)-T1*ATM(ID)%GRAD(I)/3.0D0)/ATM(ID)%VEL(I)

	    T1=0.0_LDP; T2=0.0_LDP
	    T1=0.0D0; T2=0.0D0

	    T1=0.5_LDP*T1; T2=0.5_LDP*T2
	    T1=0.5D0*T1; T2=0.5D0*T2

	      ATM(ID)%YVEC(J)=2.3205_LDP*ATM(ID)%YVEC(J)*ATM(ID)%R(J)/ATM(ID)%VEL(1)
	      ATM(ID)%YVEC(J)=2.3205D0*ATM(ID)%YVEC(J)*ATM(ID)%R(J)/ATM(ID)%VEL(1)

	      ATM(ID)%ZVEC(J)=2.3205_LDP*ATM(ID)%ZVEC(J)*ATM(ID)%R(J)/ATM(ID)%VEL(1)
	      ATM(ID)%ZVEC(J)=2.3205D0*ATM(ID)%ZVEC(J)*ATM(ID)%R(J)/ATM(ID)%VEL(1)

	    ATM(ID)%YVEC=-2.0_LDP*ATM(ID)%SOUND**2/ATM(ID)%R
	    ATM(ID)%YVEC=-2.0D0*ATM(ID)%SOUND**2/ATM(ID)%R

	    ATM(ID)%YVEC=-1.0E+05_LDP*ATM(ID)%SOUND**2*ATM(ID)%dVdR/ATM(ID)%VEL
	    ATM(ID)%YVEC=-1.0D+05*ATM(ID)%SOUND**2*ATM(ID)%dVdR/ATM(ID)%VEL

	    ATM(ID)%YVEC=2.0_LDP*ATM(ID)%SOUND*ATM(ID)%YVEC
	    ATM(ID)%YVEC=2.0D0*ATM(ID)%SOUND*ATM(ID)%YVEC

	       ATM(ID)%TAU_FLUX(I)=ATM(ID)%TAU_FLUX(I-1)+0.5_LDP*(ATM(ID)%R(I-1)-ATM(ID)%R(I))*
	       ATM(ID)%TAU_FLUX(I)=ATM(ID)%TAU_FLUX(I-1)+0.5D0*(ATM(ID)%R(I-1)-ATM(ID)%R(I))*

	    ATM(ID)%TA(:)=0.0_LDP; ATM(ID)%TB(:)=0.0_LDP
	    ATM(ID)%TA(:)=0.0D0; ATM(ID)%TB(:)=0.0D0

	       T2=0.5E+10_LDP*(ATM(ID)%R(I)-ATM(ID)%R(I+1))
	       T2=0.5D+10*(ATM(ID)%R(I)-ATM(ID)%R(I+1))

	       ATM(ID)%TA(I)=ATM(ID)%TA(I+1)+ T2*( (ATM(ID)%GAM(I)-1.0_LDP)*ATM(ID)%DENSITY(I)*ATM(ID)%CLUMP_FAC(I) +
	       ATM(ID)%TA(I)=ATM(ID)%TA(I+1)+ T2*( (ATM(ID)%GAM(I)-1.0D0)*ATM(ID)%DENSITY(I)*ATM(ID)%CLUMP_FAC(I) +

	1                                        (ATM(ID)%GAM(I+1)-1.0_LDP)*ATM(ID)%DENSITY(I+1)*ATM(ID)%CLUMP_FAC(I+1) )
	1                                        (ATM(ID)%GAM(I+1)-1.0D0)*ATM(ID)%DENSITY(I+1)*ATM(ID)%CLUMP_FAC(I+1) )

	    T1=1.0E+20_LDP*365.25_LDP*24*3600/1.0E+05_LDP 	!1.0D+20*1year/1km/s
	    T1=1.0D+20*365.25*24*3600/1.0D+05 	!1.0D+20*1year/1km/s

	    ATM(ID)%DEP_WIND_MOM=4.0_LDP*3.1459_LDP*T1*ATM(ID)%STARS_MASS*GRAV_CON*ATM(ID)%TA(1)/MASS_SUN()
	    ATM(ID)%DEP_WIND_MOM=4.0D0*3.1459D0*T1*ATM(ID)%STARS_MASS*GRAV_CON*ATM(ID)%TA(1)/MASS_SUN()

	    ATM(ID)%YVEC=SQRT(0.5_LDP*ABS(ATM(ID)%YVEC))/1.0E+05_LDP
	    ATM(ID)%YVEC=SQRT(0.5D0*ABS(ATM(ID)%YVEC))/1.0D+05

	    ATM(ID)%YVEC=1.0E-05_LDP*COEF(:,3)
	    ATM(ID)%YVEC=1.0D-05*COEF(:,3)

	    ATM(ID)%YVEC=1.0E-05_LDP*SQRT(0.5_LDP*ABS(COEF(:,3)))
	    ATM(ID)%YVEC=1.0D-05*SQRT(0.5D0*ABS(COEF(:,3)))


plt_ion_mf.f

	    IF(PERCENTAGE)YV(1:ND)=100.0_LDP*YV(1:ND)/FLUX_MEAN(1:ND)
	    IF(PERCENTAGE)YV(1:ND)=100.0D0*YV(1:ND)/FLUX_MEAN(1:ND)

	      IF(PERCENTAGE)YV(1:ND)=100.0_LDP*YV(1:ND)/FLUX_MEAN(1:ND)
	      IF(PERCENTAGE)YV(1:ND)=100.0D0*YV(1:ND)/FLUX_MEAN(1:ND)


plt_j_comp.f

	LAM(1:NCF)=2.99792458E+03_LDP/NU(1:NCF)
	LAM(1:NCF)=2.99792458D+03/NU(1:NCF)

	SUM1=0.0_LDP
	SUM1=0.0D0

	SUM2=0.0_LDP
	SUM2=0.0D0

	SUM3=0.0_LDP
	SUM3=0.0D0

	  IF(RJ(I) .GT. 0.0_LDP)THEN
	  IF(RJ(I) .GT. 0.0D0)THEN

	    YV(I)=-1000.0_LDP
	    YV(I)=-1000.0D0


plt_ln_heat.f

          NU(1:N_LINES)=2.99792458E+03_LDP/LAM(1:N_LINES)
          NU(1:N_LINES)=2.99792458D+03/LAM(1:N_LINES)

          LAM(1:N_LINES)=2.99792458E+03_LDP/NU(1:N_LINES)
          LAM(1:N_LINES)=2.99792458D+03/NU(1:N_LINES)

	    SUMD=0.0_LDP; SPEC(1:NS_MAX)=' '
	    SUMD=0.0D0; SPEC(1:NS_MAX)=' '

	      Y(ML)=LH(IDEPTH,ML)*(1.0_LDP-SCALE_FAC(ML))
	      Y(ML)=LH(IDEPTH,ML)*(1.0D0-SCALE_FAC(ML))

	        CUR_SUM=0.0_LDP
	        CUR_SUM=0.0D0

	          T2=LH(IDEPTH,J)*(1.0_LDP-SCALE_FAC(J))/T1
	          T2=LH(IDEPTH,J)*(1.0D0-SCALE_FAC(J))/T1

	    Y(1:N_LINES)=SCALE_FAC(1:N_LINES)-1.0_LDP
	    Y(1:N_LINES)=SCALE_FAC(1:N_LINES)-1.0D0


plt_lte_ross.f

	  IF(POP_ATOM(1,I_D) .GT. 1.0E+10_LDP)EXIT
	  IF(POP_ATOM(1,I_D) .GT. 1.0D+10)EXIT

	   YV(1:N_T)=(TEMP(1:N_T)**3.5_LDP)*(KAP(1:N_T,I_D)/KES(1:N_T,I_D))/RHO(I_D)**ALPHA
	   YV(1:N_T)=(TEMP(1:N_T)**3.5)*(KAP(1:N_T,I_D)/KES(1:N_T,I_D))/RHO(I_D)**ALPHA

	     YV(1:N_T)=(TEMP(1:N_T)**3.5_LDP)*(KAP(1:N_T,I_D)/KES(1:N_T,I_D)-1.0_LDP)/RHO(I_D)**ALPHA
	     YV(1:N_T)=(TEMP(1:N_T)**3.5)*(KAP(1:N_T,I_D)/KES(1:N_T,I_D)-1.0D0)/RHO(I_D)**ALPHA


plt_net.f

	ALLOCATE(R(ND));     R=0.0_LDP
	ALLOCATE(R(ND));     R=0.0D0

	ALLOCATE(V(ND));     V=0.0_LDP
	ALLOCATE(V(ND));     V=0.0D0

	ALLOCATE(T(ND));     T=0.0_LDP
	ALLOCATE(T(ND));     T=0.0D0

	ALLOCATE(ED(ND));    ED=0.0_LDP
	ALLOCATE(ED(ND));    ED=0.0D0

	ALLOCATE(DI(ND));    DI=0.0_LDP
	ALLOCATE(DI(ND));    DI=0.0D0

	ALLOCATE(PHOT_RATE(NLEV,ND));      PHOT_RATE=0.0_LDP
	ALLOCATE(PHOT_RATE(NLEV,ND));      PHOT_RATE=0.0D0

	ALLOCATE(REC_RATE(NLEV,ND));       REC_RATE=0.0_LDP
	ALLOCATE(REC_RATE(NLEV,ND));       REC_RATE=0.0D0

	ALLOCATE(TOT_PHOT_RATE(ND));      TOT_PHOT_RATE=0.0_LDP
	ALLOCATE(TOT_PHOT_RATE(ND));      TOT_PHOT_RATE=0.0D0

	ALLOCATE(TOT_REC_RATE(ND));       TOT_REC_RATE=0.0_LDP
	ALLOCATE(TOT_REC_RATE(ND));       TOT_REC_RATE=0.0D0

	ALLOCATE(COL_ION_RATE(ND));       COL_ION_RATE=0.0_LDP
	ALLOCATE(COL_ION_RATE(ND));       COL_ION_RATE=0.0D0

	ALLOCATE(COL_REC_RATE(ND));       COL_REC_RATE=0._LDP
	ALLOCATE(COL_REC_RATE(ND));       COL_REC_RATE=0.D0

	ALLOCATE(ADV_REC_RATE(ND));       ADV_REC_RATE=0.0_LDP
	ALLOCATE(ADV_REC_RATE(ND));       ADV_REC_RATE=0.0D0

	ALLOCATE(NT_ION_RATE(ND));        NT_ION_RATE=0.0_LDP
	ALLOCATE(NT_ION_RATE(ND));        NT_ION_RATE=0.0D0

	ALLOCATE(XRAY_REC_RATE_PS(ND));   XRAY_REC_RATE_PS=0.0_LDP
	ALLOCATE(XRAY_REC_RATE_PS(ND));   XRAY_REC_RATE_PS=0.0D0

	ALLOCATE(XRAY_REC_RATE_GS(ND));   XRAY_REC_RATE_GS=0.0_LDP
	ALLOCATE(XRAY_REC_RATE_GS(ND));   XRAY_REC_RATE_GS=0.0D0

	ALLOCATE(REC_COEF(ND));           REC_COEF=0.0_LDP
	ALLOCATE(REC_COEF(ND));           REC_COEF=0.0D0

	ALLOCATE(NET(ND));                NET=0.0_LDP
	ALLOCATE(NET(ND));                NET=0.0D0

	IF(V(1) .EQ. 0.0_LDP)THEN
	IF(V(1) .EQ. 0.0D0)THEN

	YV=0.0_LDP
	YV=0.0D0

	SUM_VAL=1.0E+50_LDP			!Some non-zero value in case X option
	SUM_VAL=1.0D+50			!Some non-zero value in case X option

	    XV=1.0E-03_LDP*V
	    XV=1.0D-03*V

	    XV=XV-3.0_LDP
	    XV=XV-3.0D0

	  IF(NORM_RATE)YV=1.0E+12_LDP*YV/ED/DI
	  IF(NORM_RATE)YV=1.0D+12*YV/ED/DI

	  IF(SUM _VAL .NE. 0.0_LDP)CALL DP_CURVE(ND,XV,YV)
	  IF(SUM _VAL .NE. 0.0D0)CALL DP_CURVE(ND,XV,YV)

	  IF(NORM_RATE)YV=1.0E+12_LDP*YV/ED/DI
	  IF(NORM_RATE)YV=1.0D+12*YV/ED/DI

	  IF(SUM _VAL .NE. 0.0_LDP)CALL DP_CURVE(ND,XV,YV)
	  IF(SUM _VAL .NE. 0.0D0)CALL DP_CURVE(ND,XV,YV)

	  IF(NORM_RATE)YV=1.0E+12_LDP*YV/ED/DI
	  IF(NORM_RATE)YV=1.0D+12*YV/ED/DI

	  IF(SUM _VAL .NE. 0.0_LDP)CALL DP_CURVE(ND,XV,YV)
	  IF(SUM _VAL .NE. 0.0D0)CALL DP_CURVE(ND,XV,YV)

	  IF(NORM_RATE)YV=1.0E+12_LDP*YV/ED/DI
	  IF(NORM_RATE)YV=1.0D+12*YV/ED/DI

	  IF(SUM _VAL .NE. 0.0_LDP)CALL DP_CURVE(ND,XV,YV)
	  IF(SUM _VAL .NE. 0.0D0)CALL DP_CURVE(ND,XV,YV)

	  IF(NORM_RATE)YV=1.0E+12_LDP*YV/ED/DI
	  IF(NORM_RATE)YV=1.0D+12*YV/ED/DI

	  IF(NORM_RATE)YV=1.0E+12_LDP*YV/ED/DI
	  IF(NORM_RATE)YV=1.0D+12*YV/ED/DI

	  IF(NORM_RATE)YV=1.0E+12_LDP*YV/ED/DI
	  IF(NORM_RATE)YV=1.0D+12*YV/ED/DI

	  IF(SUM _VAL .NE. 0.0_LDP)CALL DP_CURVE(ND,XV,YV)
	  IF(SUM _VAL .NE. 0.0D0)CALL DP_CURVE(ND,XV,YV)

	  IF(NORM_RATE)YV=1.0E+12_LDP*YV/ED/DI
	  IF(NORM_RATE)YV=1.0D+12*YV/ED/DI

	  IF(SUM _VAL .NE. 0.0_LDP)CALL DP_CURVE(ND,XV,YV)
	  IF(SUM _VAL .NE. 0.0D0)CALL DP_CURVE(ND,XV,YV)

	  IF(NORM_RATE)YV=1.0E+12_LDP*YV/ED/DI
	  IF(NORM_RATE)YV=1.0D+12*YV/ED/DI

	  IF(SUM _VAL .NE. 0.0_LDP)CALL DP_CURVE(ND,XV,YV)
	  IF(SUM _VAL .NE. 0.0D0)CALL DP_CURVE(ND,XV,YV)

	IF(SUM_VAL .EQ. 0.0_LDP)THEN
	IF(SUM_VAL .EQ. 0.0D0)THEN


plt_non_therm.f

	PI=4.0_LDP*ATAN(1.0_LDP)
	PI=4.0D0*ATAN(1.0D0)

	  T1=SQRT(9.109389E-28_LDP/2.0_LDP/1.602177E-12_LDP)
	  T1=SQRT(9.109389D-28/2.0D0/1.602177D-12)

	dX=100.0_LDP/NX
	dX=100.0D0/NX

	T1=0.86173324_LDP*T(DPTH_INDX)
	T1=0.86173324D0*T(DPTH_INDX)

	  ED_EV(I)=2.0_LDP*ED(DPTH_INDX)*SQRT(E_EV(I)/PI/T1)*EXP(-E_EV(I)/T1)
	  ED_EV(I)=2.0D0*ED(DPTH_INDX)*SQRT(E_EV(I)/PI/T1)*EXP(-E_EV(I)/T1)

	THERMAL_ED=0.0_LDP
	THERMAL_ED=0.0D0

	THERMAL_ED=THERMAL_ED*0.5_LDP/T1
	THERMAL_ED=THERMAL_ED*0.5D0/T1

	NON_THERMAL_ED=0.0_LDP
	NON_THERMAL_ED=0.0D0

	NON_THERMAL_ED=NON_THERMAL_ED*0.5_LDP*(RAD_ENERGY(DPTH_INDX)*6.24150974E+11_LDP)
	NON_THERMAL_ED=NON_THERMAL_ED*0.5D0*(RAD_ENERGY(DPTH_INDX)*6.24150974D+11)


plt_q_col.f

	REAL(KIND=LDP), PARAMETER :: PI=3.141592653589793238462643_LDP
	REAL(KIND=LDP), PARAMETER :: PI=3.141592653589793238462643D0

	REAL(KIND=LDP), PARAMETER :: A0 = 0.529189379E-8_LDP    		!Bohr radius in cm
	REAL(KIND=LDP), PARAMETER :: A0 = 0.529189379D-8    		!Bohr radius in cm

	REAL(KIND=LDP), PARAMETER :: Hz_TO_EV=4.1356691_LDP
	REAL(KIND=LDP), PARAMETER :: Hz_TO_EV=4.1356691D0

	REAL(KIND=LDP), PARAMETER :: COL_CONST=13.6_LDP*8.0_LDP*PI*PI*A0*A0/1.732_LDP
	REAL(KIND=LDP), PARAMETER :: COL_CONST=13.6D0*8.0D0*PI*PI*A0*A0/1.732D0

	REAL(KIND=LDP), PARAMETER :: COEF0=-0.0745397_LDP
	REAL(KIND=LDP), PARAMETER :: COEF0=-0.0745397d0

	REAL(KIND=LDP), PARAMETER :: COEF1=0.232715_LDP
	REAL(KIND=LDP), PARAMETER :: COEF1=0.232715d0

	REAL(KIND=LDP), PARAMETER :: COEF2=-0.00647558_LDP
	REAL(KIND=LDP), PARAMETER :: COEF2=-0.00647558d0

	REAL(KIND=LDP), PARAMETER :: CONNECT_POINT=1.2212243_LDP
	REAL(KIND=LDP), PARAMETER :: CONNECT_POINT=1.2212243D0

	DATA ARN_HeI/24.60_LDP,17.8_LDP,-11.000_LDP,7.00_LDP,-23.20_LDP/
	DATA ARN_HeI/24.60,17.8,-11.000,7.00,-23.20/

	Q(:)=0.0_LDP
	Q(:)=0.0D0

	gbar(:)=0.0_LDP
	gbar(:)=0.0d0

	ZION=1.0_LDP; GLOW=1.0_LDP
	ZION=1.0D0; GLOW=1.0D0

	dE=5.13_LDP; FVAL=0.274_LDP	
	dE=5.13; FVAL=0.274	

	GLOW=1.0_LDP
	GLOW=1.0D0

	OMEGA=0.05_LDP
	OMEGA=0.05D0

	T1=3.28978_LDP*COL_CONST*FVAL/dE
	T1=3.28978D0*COL_CONST*FVAL/dE

	    X = sqrt(xkt(ikt)/dE_eV-1.0_LDP)
	    X = sqrt(xkt(ikt)/dE_eV-1.0d0)

	      GBAR(IKT) = 0.2_LDP
	      GBAR(IKT) = 0.2D0

	      GBAR(IKT) = 1.077_LDP*LOG(X)/1.7725_LDP
	      GBAR(IKT) = 1.077*LOG(X)/1.7725

	    if(gbar(ikt) .ge. 0.0_LDP)then
	    if(gbar(ikt) .ge. 0.0d0)then

	T1=PI*A0*A0*13.6_LDP/GLOW
	T1=PI*A0*A0*13.6D0/GLOW

	Q=Q*1.0E+18_LDP
	Q=Q*1.0D+18

	T1=PI*A0*A0*13.6_LDP
	T1=PI*A0*A0*13.6d0

	    Q(IKT)=0.0_LDP
	    Q(IKT)=0.0D0

	Q=Q*1.0E+18_LDP
	Q=Q*1.0D+18

	    T1=(1.0_LDP-1.0_LDP/U1)
	    T1=(1.0D0-1.0D0/U1)

	    Q(IKT) = 1.0E-14_LDP*( ARN_HeI(2)*T1 + ARN_HeI(3)*T1*T1 +
	    Q(IKT) = 1.0D-14*( ARN_HeI(2)*T1 + ARN_HeI(3)*T1*T1 +

	    Q(IKT)=0.0_LDP
	    Q(IKT)=0.0D0

	Q=Q*1.0E+18_LDP
	Q=Q*1.0D+18


plt_rates.f

	RATE_THRESHOLD=0.05_LDP
	RATE_THRESHOLD=0.05

        LAM(1:N_LINES)=2.99792458E+03_LDP/NU(1:N_LINES)
        LAM(1:N_LINES)=2.99792458D+03/NU(1:N_LINES)

	      T1=0.0_LDP
	      T1=0.0D0

	    YV=0.0_LDP
	    YV=0.0D0

	    SUM_RATES=0.0_LDP
	    SUM_RATES=0.0D0

	      SUM_RATES(J)=0.0_LDP
	      SUM_RATES(J)=0.0D0

	      T1=0.0_LDP
	      T1=0.0D0

	      YV=0.0_LDP; ZV=0.0_LDP
	      YV=0.0D0; ZV=0.0D0

	    MAX_RATE=0.0_LDP
	    MAX_RATE=0.0D0

	      T1=0.0_LDP
	      T1=0.0D0

	      T1=0.0_LDP
	      T1=0.0D0

	    T1=0.0_LDP; I=DPTH_INDX; CNT=0
	    T1=0.0D0; I=DPTH_INDX; CNT=0

	        IF(CNT .LE. N_TRANS_LIM .AND. ABS(T2) .GT.  0.00001_LDP)THEN
	        IF(CNT .LE. N_TRANS_LIM .AND. ABS(T2) .GT.  0.00001)THEN

	    T1=0.0_LDP; CNT=0.0_LDP
	    T1=0.0D0; CNT=0.0D0

	        IF(CNT .LE. N_TRANS_LIM .AND. ABS(T2) .GT. 0.00001_LDP)THEN
	        IF(CNT .LE. N_TRANS_LIM .AND. ABS(T2) .GT. 0.00001)THEN

	        IF(ABS(T1) .GT. 0.00001_LDP)THEN
	        IF(ABS(T1) .GT. 0.00001)THEN

	        IF(ABS(T1) .GT. 0.00001_LDP)THEN
	        IF(ABS(T1) .GT. 0.00001)THEN

	    SUM_TO=0.0_LDP
	    SUM_TO=0.0D0

	    SUM_FROM=0.0_LDP
	    SUM_FROM=0.0D0

	    NT_SUM_TO=0.0_LDP
	    NT_SUM_TO=0.0D0

	    NT_SUM_FROM=0.0_LDP
	    NT_SUM_FROM=0.0D0

	    COL_SUM_TO=0.0_LDP
	    COL_SUM_TO=0.0D0

	    COL_SUM_FROM=0.0_LDP
	    COL_SUM_FROM=0.0D0

	      NET_AUTO=0.0_LDP
	      NET_AUTO=0.0D0


plt_raw_xray.f

	CONV_FACT=4.0E-10_LDP*ACOS(-1.0_LDP)
	CONV_FACT=4.0D-10*ACOS(-1.0D0)

	TSHOCK_1=100.0_LDP
	TSHOCK_1=100.0D0

	TSHOCK_2=200.0_LDP
	TSHOCK_2=200.0D0

	X_EMISS1=LOG10(CONV_FACT*X_EMISS1+1.0E-300_LDP)
	X_EMISS1=LOG10(CONV_FACT*X_EMISS1+1.0D-300)

	X_EMISS2=LOG10(CONV_FACT*X_EMISS2+1.0E-300_LDP)
	X_EMISS2=LOG10(CONV_FACT*X_EMISS2+1.0D-300)

	TSHOCK_1=400.0_LDP
	TSHOCK_1=400.0D0

	TSHOCK_2=1000.0_LDP
	TSHOCK_2=1000.0D0

	X_EMISS1=LOG10(CONV_FACT*X_EMISS1+1.0E-300_LDP)
	X_EMISS1=LOG10(CONV_FACT*X_EMISS1+1.0D-300)

	X_EMISS2=LOG10(CONV_FACT*X_EMISS2+1.0E-300_LDP)
	X_EMISS2=LOG10(CONV_FACT*X_EMISS2+1.0D-300)


rd_ba_mat.f


rd_f_to_s_ids.f


rd_f_to_s_ids_v2.f


recom_chk_v2.f

	FOUR_PI_ON_H=189.65E+15_LDP
	FOUR_PI_ON_H=189.65D+15

	RECOM(:)=0.0_LDP
	RECOM(:)=0.0D0

	RGU=LOG(2.07078E-22_LDP)
	RGU=LOG(2.07078D-22)

	1                 (T**1.5_LDP)/GIONC2
	1                 (T**1.5)/GIONC2

	MAX_dNU=0.1_LDP*T/HDKT
	MAX_dNU=0.1D0*T/HDKT

	  IF(HIGH_NU .GT. 0.0_LDP)EXIT
	  IF(HIGH_NU .GT. 0.0D0)EXIT

	HIGH_CROSS=0.0_LDP
	HIGH_CROSS=0.0D0

	IF(HIGH_NU_MAX*HDKT/T .LT. 10)HIGH_NU_MAX=10.0_LDP*T/HDKT
	IF(HIGH_NU_MAX*HDKT/T .LT. 10)HIGH_NU_MAX=10.0D0*T/HDKT

	  HIGH_NU=MIN(LOW_NU*1.1_LDP,LOW_NU+MAX_dNU)
	  HIGH_NU=MIN(LOW_NU*1.1,LOW_NU+MAX_dNU)

	T1=FOUR_PI_ON_H*TWOHCSQ*0.5_LDP
	T1=FOUR_PI_ON_H*TWOHCSQ*0.5D0


recomz.f

	GAMMA=0.5772_LDP
	GAMMA=0.5772

	A=15.7892_LDP*Z*Z/N/N/T
	A=15.7892*Z*Z/N/N/T

	E=log( 1.0_LDP+EXP(-GAMMA/(1.0_LDP+2.0_LDP*A))/A )
	E=log( 1.0D0+EXP(-GAMMA/(1.0+2.0*A))/A )

	ALPHA=1.032E-13_LDP*Z*Z/SQRT(T)*(  E+log(A)+GAMMA -
	ALPHA=1.032D-13*Z*Z/SQRT(T)*(  E+log(A)+GAMMA -

	1          A/N*( 1.0_LDP/3/N+(1.0_LDP-1.0_LDP/N-A/3/N)*E )  )
	1          A/N*( 1.0D0/3/N+(1.0-1.0/N-A/3/N)*E )  )


rev_hydro_file.f

	GRAV_CON=1.0E-20_LDP*GRAVITATIONAL_CONSTANT()*MASS_SUN()
	GRAV_CON=1.0D-20*GRAVITATIONAL_CONSTANT()*MASS_SUN()

	  g_tot=(Gamma-1.0_LDP)*g_rad/Gamma
	  g_tot=(Gamma-1.0D0)*g_rad/Gamma

	  E=200.0_LDP*(VdVdR+dPdR-g_TOT)/(ABS(VdVdR)+ ABS(dPdR)+ ABS(g_TOT))
	  E=200.0D0*(VdVdR+dPdR-g_TOT)/(ABS(VdVdR)+ ABS(dPdR)+ ABS(g_TOT))

	  MT=g_rad/g_elec-1.0_LDP
	  MT=g_rad/g_elec-1.0D0

	  IF(R .GT. 9.99E+04_LDP)THEN
	  IF(R .GT. 9.99E+04)THEN


rev_hydro_turb.f

	GRAV_CON=1.0E-20_LDP*GRAVITATIONAL_CONSTANT()*MASS_SUN()
	GRAV_CON=1.0D-20*GRAVITATIONAL_CONSTANT()*MASS_SUN()

	MASS_OLD=0.0_LDP
	MASS_OLD=0.0D0

        VTURB=0.0_LDP; CALL GEN_IN(VTURB,'Turbulent velcity in km/s)')
        VTURB=0.0D0; CALL GEN_IN(VTURB,'Turbulent velcity in km/s)')

	IF(T1/RND .LT. 1.5_LDP)PLANE_PARALLEL=.TRUE.
	IF(T1/RND .LT. 1.5D0)PLANE_PARALLEL=.TRUE.

	    dTPdR=0.0_LDP
	    dTPdR=0.0D0

	  IF(VTURB .NE. 0.0_LDP)THEN
	  IF(VTURB .NE. 0.0D0)THEN

	    dTPdR=-0.5_LDP*VTURB*VTURB*(2.0_LDP/R+VdVdR/V/V)
	    dTPdR=-0.5D0*VTURB*VTURB*(2.0D0/R+VdVdR/V/V)

          E=200.0_LDP*(VdVdR+dPdR+dTPdR-g_TOT)/DENOM
          E=200.0D0*(VdVdR+dPdR+dTPdR-g_TOT)/DENOM

          E_ON_GRAD=100.0_LDP*(VdVdR+dPdR+dTPdR-g_TOT)/G_RAD
          E_ON_GRAD=100.0D0*(VdVdR+dPdR+dTPdR-g_TOT)/G_RAD

          MT=g_rad/g_elec-1.0_LDP
          MT=g_rad/g_elec-1.0D0

            SUM_ERROR=SUM_ERROR+0.005_LDP*E/R**2/DENOM
            SUM_ERROR=SUM_ERROR+0.005*E/R**2/DENOM

	  P_dVdR(I)=1.0E-05_LDP*VdVdR/V
	  P_dVdR(I)=1.0D-05*VdVdR/V

	  IF(R .GT. 9.99E+04_LDP)THEN
	  IF(R .GT. 9.99E+04)THEN

	  XVEC(1:ND)=1000.0_LDP*P_dVdR(1:ND)
	  XVEC(1:ND)=1000.0D0*P_dVdR(1:ND)

	  XVEC(1:ND)=ED(1:ND)*6.65E-25_LDP*10.0E+05_LDP/P_dVdR(1:ND)
	  XVEC(1:ND)=ED(1:ND)*6.65D-25*10.0D+05/P_dVdR(1:ND)

	  T1=0.0_LDP
	  T1=0.0D0

	  DO WHILE(P_VEL(I+1) .GT. 30.0_LDP)
	  DO WHILE(P_VEL(I+1) .GT. 30.0D0)

	    YVEC(I)=(2.00_LDP*P_GRAD(I)+(1.0_LDP-T1)*P_GRAD(I))/P_VEL(I)/3.0_LDP
	    YVEC(I)=(2.00*P_GRAD(I)+(1.0D0-T1)*P_GRAD(I))/P_VEL(I)/3.0D0

	    ZVEC(I)=(P_GRAV(I)-T1*P_GRAD(I)/3.0_LDP)/P_VEL(I)
	    ZVEC(I)=(P_GRAV(I)-T1*P_GRAD(I)/3.0D0)/P_VEL(I)

	  T1=0.0_LDP; T2=0.0_LDP
	  T1=0.0D0; T2=0.0D0

	  T1=0.5_LDP*T1; T2=0.5_LDP*T2
	  T1=0.5D0*T1; T2=0.5D0*T2

	    YVEC(J)=2.3205_LDP*YVEC(J)*P_R(J)/P_VEL(1)
	    YVEC(J)=2.3205D0*YVEC(J)*P_R(J)/P_VEL(1)

	    ZVEC(J)=2.3205_LDP*ZVEC(J)*P_R(J)/P_VEL(1)
	    ZVEC(J)=2.3205D0*ZVEC(J)*P_R(J)/P_VEL(1)


rev_rdinr.f

	      IF( ABS(RTMP(I)-R(I))/T1 .GT. 2.0E-03_LDP .AND. .NOT. ROUND_ERROR)THEN
	      IF( ABS(RTMP(I)-R(I))/T1 .GT. 2.0D-03 .AND. .NOT. ROUND_ERROR)THEN

	  IB_RAT=2.0_LDP; OB_RAT=1.5_LDP
	  IB_RAT=2.0D0; OB_RAT=1.5D0

	  SCL_FAC=0.0_LDP
	  SCL_FAC=0.0D0

	  DTAU2_ON_DTAU1=100.0_LDP
	  DTAU2_ON_DTAU1=100.0D0

	  dLOGT_MAX=0.05_LDP
	  dLOGT_MAX=0.05D0

	  IF(SCL_FAC .LT. 0.0_LDP .OR. SCL_FAC .GE. 1.0_LDP)THEN
	  IF(SCL_FAC .LT. 0.0D0 .OR. SCL_FAC .GE. 1.0D0)THEN

	  DO WHILE(TAU_MIN .GT. 0.0_LDP)
	  DO WHILE(TAU_MIN .GT. 0.0D0)

	    TAU_MIN=0.0_LDP
	    TAU_MIN=0.0D0

	  T1=0.0_LDP
	  T1=0.0D0

	  IF(T1 .NE. 0.0_LDP)THEN
	  IF(T1 .NE. 0.0D0)THEN

	    SCALE_FACTOR=1.0_LDP
	    SCALE_FACTOR=1.0D0

	  RMAX=2.0_LDP
	  RMAX=2.0D0

	  IF( R(I)*(1.0_LDP+(GRID_RATIO-1.0_LDP)/3) .GT. RMAX)I=I-1
	  IF( R(I)*(1.0D0+(GRID_RATIO-1.0D0)/3) .GT. RMAX)I=I-1

	    R(NEW_ND+J)=R(NEW_ND+J-1)+0.6_LDP*(RMAX-R(NEW_ND+J-1))
	    R(NEW_ND+J)=R(NEW_ND+J-1)+0.6D0*(RMAX-R(NEW_ND+J-1))

	  R(NEW_ND)=RMAX-0.01_LDP*(RMAX-R(NEW_ND-1))
	  R(NEW_ND)=RMAX-0.01D0*(RMAX-R(NEW_ND-1))

	      NEW_XV(I+1)=0.0_LDP
	      NEW_XV(I+1)=0.0D0

	      IF(NEW_XV(I+1) .EQ. 0.0_LDP)EXIT
	      IF(NEW_XV(I+1) .EQ. 0.0D0)EXIT

	    T1=(IEND-IST)/(NG+1.0_LDP)
	    T1=(IEND-IST)/(NG+1.0D0)

	    T1=IST+0.9_LDP;  NEW_XV(IST+1)=T1
	    T1=IST+0.9;  NEW_XV(IST+1)=T1

	    T1=T1 +0.8_LDP;  NEW_XV(IST+2)=T1
	    T1=T1 +0.8;  NEW_XV(IST+2)=T1

	    T1=T1 +0.7_LDP;  NEW_XV(IST+3)=T1
	    T1=T1 +0.7;  NEW_XV(IST+3)=T1

	    T1=T1 +0.6_LDP;  NEW_XV(IST+4)=T1
	    T1=T1 +0.6;  NEW_XV(IST+4)=T1

	      K=K+1; T1=T1+0.5_LDP; NEW_XV(K)=T1
	      K=K+1; T1=T1+0.5; NEW_XV(K)=T1

	      K=K+1; T1=T1+0.5_LDP; NEW_XV(K)=T1
	      K=K+1; T1=T1+0.5; NEW_XV(K)=T1

	    K=K+1; T1=T1+0.6_LDP; NEW_XV(K)=T1
	    K=K+1; T1=T1+0.6; NEW_XV(K)=T1

	    K=K+1; T1=T1+0.7_LDP; NEW_XV(K)=T1
	    K=K+1; T1=T1+0.7; NEW_XV(K)=T1

	    K=K+1; T1=T1+0.8_LDP; NEW_XV(K)=T1
	    K=K+1; T1=T1+0.8; NEW_XV(K)=T1

	    K=K+1; T1=T1+0.9_LDP; NEW_XV(K)=T1
	    K=K+1; T1=T1+0.9; NEW_XV(K)=T1

	    T1=IST+0.8_LDP;  NEW_XV(IST+1)=T1
	    T1=IST+0.8;  NEW_XV(IST+1)=T1

	    T1=T1 +0.7_LDP;  NEW_XV(IST+2)=T1
	    T1=T1 +0.7;  NEW_XV(IST+2)=T1

	    T1=T1 +0.6_LDP;  NEW_XV(IST+3)=T1
	    T1=T1 +0.6;  NEW_XV(IST+3)=T1

	    T1=T1 +0.5_LDP;  NEW_XV(IST+4)=T1
	    T1=T1 +0.5;  NEW_XV(IST+4)=T1

	    T1=T1 +0.4_LDP;  NEW_XV(IST+5)=T1
	    T1=T1 +0.4;  NEW_XV(IST+5)=T1

	    I=IST+3; T1=I; T2=1.0_LDP/3.0_LDP
	    I=IST+3; T1=I; T2=1.0D0/3.0D0

	    K=K+1; T1=T1+0.4_LDP; NEW_XV(K)=T1
	    K=K+1; T1=T1+0.4; NEW_XV(K)=T1

	    K=K+1; T1=T1+0.5_LDP; NEW_XV(K)=T1
	    K=K+1; T1=T1+0.5; NEW_XV(K)=T1

	    K=K+1; T1=T1+0.6_LDP; NEW_XV(K)=T1
	    K=K+1; T1=T1+0.6; NEW_XV(K)=T1

	    K=K+1; T1=T1+0.7_LDP; NEW_XV(K)=T1
	    K=K+1; T1=T1+0.7; NEW_XV(K)=T1

	    K=K+1; T1=T1+0.8_LDP; NEW_XV(K)=T1
	    K=K+1; T1=T1+0.8; NEW_XV(K)=T1

	    T1=EXP( LOG(R(IEND)/R(IST))/(NG+1.0_LDP) )
	    T1=EXP( LOG(R(IEND)/R(IST))/(NG+1.0D0) )

	    T1=(R(IEND)-R(IST))/(NG+1.0_LDP)
	    T1=(R(IEND)-R(IST))/(NG+1.0D0)

	  GRID_RATIO=1.0_LDP/GRID_RATIO
	  GRID_RATIO=1.0D0/GRID_RATIO

	  DELR=(R(NI-1)-R(ND))*(1.0_LDP-GRID_RATIO)/(1.0_LDP-GRID_RATIO**(ND-NI+NG+1))
	  DELR=(R(NI-1)-R(ND))*(1.0D0-GRID_RATIO)/(1.0D0-GRID_RATIO**(ND-NI+NG+1))

	  NI=2; NG=3; GRID_RATIO=2.0_LDP
	  NI=2; NG=3; GRID_RATIO=2.0D0

	  GRID_RATIO=1.0_LDP/GRID_RATIO
	  GRID_RATIO=1.0D0/GRID_RATIO

	    T2=(R(1)-T1)*(1.0_LDP-GRID_RATIO)/(1.0_LDP-GRID_RATIO**(I+1))
	    T2=(R(1)-T1)*(1.0D0-GRID_RATIO)/(1.0D0-GRID_RATIO**(I+1))

	    DELR=MIN(T2,1.2_LDP*DELR)
	    DELR=MIN(T2,1.2D0*DELR)

	NEW_TAU=0.0_LDP
	NEW_TAU=0.0D0

	  T1=0.0_LDP
	  T1=0.0D0

	  NEW_SIGMA(I)=RTMP(I)*NEW_SIGMA(I)/NEW_VEL(I)-1.0_LDP
	  NEW_SIGMA(I)=RTMP(I)*NEW_SIGMA(I)/NEW_VEL(I)-1.0D0


rev_rvsig.f

	      IF( ABS(RTMP(I)-R(I))/T1 .GT. 2.0E-03_LDP .AND. .NOT. ROUND_ERROR)THEN
	      IF( ABS(RTMP(I)-R(I))/T1 .GT. 2.0D-03 .AND. .NOT. ROUND_ERROR)THEN

	  V_TRANS=30.0_LDP; V_RAT_MAX=1.5
	  V_TRANS=30.0D0; V_RAT_MAX=1.5

	  IB_RAT=2.0_LDP; OB_RAT=4.0_LDP; DTAU2_ON_DTAU1=100.0_LDP
	  IB_RAT=2.0; OB_RAT=4.0D0; DTAU2_ON_DTAU1=100.0D0

	      SIGMA(I)=COEF(J,3)+T1*(2.0_LDP*COEF(J,2)+3.0_LDP*T1*COEF(J,1))
	      SIGMA(I)=COEF(J,3)+T1*(2.0D0*COEF(J,2)+3.0*T1*COEF(J,1))

	      SIGMA(I)=R(I)*SIGMA(I)/V(I)-1.0_LDP
	      SIGMA(I)=R(I)*SIGMA(I)/V(I)-1.0D0

	      SIGMA(I)=COEF(J,3)+T1*(2.0_LDP*COEF(J,2)+3.0_LDP*T1*COEF(J,1))
	      SIGMA(I)=COEF(J,3)+T1*(2.0D0*COEF(J,2)+3.0*T1*COEF(J,1))

	      SIGMA(I)=R(I)*SIGMA(I)/V(I)-1.0_LDP
	      SIGMA(I)=R(I)*SIGMA(I)/V(I)-1.0D0

	      SIGMA(I)=COEF(J,3)+T1*(2.0_LDP*COEF(J,2)+3.0_LDP*T1*COEF(J,1))
	      SIGMA(I)=COEF(J,3)+T1*(2.0D0*COEF(J,2)+3.0*T1*COEF(J,1))

	      SIGMA(I)=R(I)*SIGMA(I)/V(I)-1.0_LDP
	      SIGMA(I)=R(I)*SIGMA(I)/V(I)-1.0D0

	      SIGMA(I)=COEF(J,3)+T1*(2.0_LDP*COEF(J,2)+3.0_LDP*T1*COEF(J,1))
	      SIGMA(I)=COEF(J,3)+T1*(2.0D0*COEF(J,2)+3.0*T1*COEF(J,1))

	      SIGMA(I)=R(I)*SIGMA(I)/V(I)-1.0_LDP
	      SIGMA(I)=R(I)*SIGMA(I)/V(I)-1.0D0

	  T1=1.1_LDP
	  T1=1.1D0

	  T2=0.0_LDP
	  T2=0.0D0

            T1=(I_END-I_ST)/(NX+1.0_LDP)
            T1=(I_END-I_ST)/(NX+1.0D0)

            T1=EXP(LOG(OLD_TAU(I_END)/OLD_TAU(I_ST))/(NX+1.0_LDP))
            T1=EXP(LOG(OLD_TAU(I_END)/OLD_TAU(I_ST))/(NX+1.0D0))

	      SIGMA(I)=COEF(J,3)+T1*(2.0_LDP*COEF(J,2)+3.0_LDP*T1*COEF(J,1))
	      SIGMA(I)=COEF(J,3)+T1*(2.0D0*COEF(J,2)+3.0*T1*COEF(J,1))

	      SIGMA(I)=R(I)*SIGMA(I)/V(I)-1.0_LDP
	      SIGMA(I)=R(I)*SIGMA(I)/V(I)-1.0D0

	      SIGMA(I)=COEF(J,3)+T1*(2.0_LDP*COEF(J,2)+3.0_LDP*T1*COEF(J,1))
	      SIGMA(I)=COEF(J,3)+T1*(2.0D0*COEF(J,2)+3.0*T1*COEF(J,1))

	      SIGMA(I)=R(I)*SIGMA(I)/V(I)-1.0_LDP
	      SIGMA(I)=R(I)*SIGMA(I)/V(I)-1.0D0

	  IF(V_MAX*V_MIN .LT. 0.0_LDP)THEN
	  IF(V_MAX*V_MIN .LT. 0.0D0)THEN

	  IF(V_MAX .LT. 0.0_LDP)THEN
	  IF(V_MAX .LT. 0.0D0)THEN

	      SIGMA(I)=COEF(J,3)+T1*(2.0_LDP*COEF(J,2)+3.0_LDP*T1*COEF(J,1))
	      SIGMA(I)=COEF(J,3)+T1*(2.0D0*COEF(J,2)+3.0*T1*COEF(J,1))

	      SIGMA(I)=R(I)*SIGMA(I)/V(I)-1.0_LDP
	      SIGMA(I)=R(I)*SIGMA(I)/V(I)-1.0D0

	    R(I+1)=R(1)-0.3333_LDP*(R(1)-R(I+2))
	    R(I+1)=R(1)-0.3333D0*(R(1)-R(I+2))

	    SIGMA(I)=COEF(1,3)+T1*(2.0_LDP*COEF(1,2)+3.0_LDP*T1*COEF(1,1))
	    SIGMA(I)=COEF(1,3)+T1*(2.0D0*COEF(1,2)+3.0*T1*COEF(1,1))

	    SIGMA(I)=R(I)*SIGMA(I)/V(I)-1.0_LDP
	    SIGMA(I)=R(I)*SIGMA(I)/V(I)-1.0D0

	  FAC=2.0_LDP
	  FAC=2.0D0

	  VINF=1000.0_LDP
	  VINF=1000.0D0

	  BETA=1.0_LDP
	  BETA=1.0D0

	  RX=OLD_R(1)*(1.0_LDP-(OLD_V(1)/VINF)**(1.0_LDP/BETA))
	  RX=OLD_R(1)*(1.0D0-(OLD_V(1)/VINF)**(1.0D0/BETA))

	    V(I)=VINF*(1.0_LDP-RX/TMP_R(I))**BETA
	    V(I)=VINF*(1.0D0-RX/TMP_R(I))**BETA

	    R(2)=R(1)-0.2_LDP*(R(1)-R(3))
	    R(2)=R(1)-0.2*(R(1)-R(3))

	    R(2)=R(1)-0.1_LDP*(R(1)-R(4))
	    R(2)=R(1)-0.1*(R(1)-R(4))

	    R(3)=R(1)-0.4_LDP*(R(1)-R(4))
	    R(3)=R(1)-0.4*(R(1)-R(4))

	    R(2)=R(1)-0.05_LDP*(R(1)-R(5))
	    R(2)=R(1)-0.05*(R(1)-R(5))

	    R(3)=R(1)-0.15_LDP*(R(1)-R(5))
	    R(3)=R(1)-0.15*(R(1)-R(5))

	    R(4)=R(1)-0.40_LDP*(R(1)-R(5))
	    R(4)=R(1)-0.40*(R(1)-R(5))

	    R(2)=R(1)-0.015_LDP*(R(1)-R(6))
	    R(2)=R(1)-0.015*(R(1)-R(6))

	    R(3)=R(1)-0.05_LDP*(R(1)-R(6))
	    R(3)=R(1)-0.05*(R(1)-R(6))

	    R(4)=R(1)-0.15_LDP*(R(1)-R(6))
	    R(4)=R(1)-0.15*(R(1)-R(6))

	    R(5)=R(1)-0.40_LDP*(R(1)-R(6))
	    R(5)=R(1)-0.40*(R(1)-R(6))

	    V(I)=VINF*(1.0_LDP-RX/R(I))**BETA
	    V(I)=VINF*(1.0D0-RX/R(I))**BETA

	    SIGMA(I)=BETA*RX/R(I)/(1.0_LDP-RX/R(I))-1.0_LDP
	    SIGMA(I)=BETA*RX/R(I)/(1.0D0-RX/R(I))-1.0D0

	  V_TRANS=4.0_LDP
	  V_TRANS=4.0D0

	  MDOT=OLD_MDOT*(NEW_RSTAR/OLD_R(ND_OLD))**1.5_LDP
	  MDOT=OLD_MDOT*(NEW_RSTAR/OLD_R(ND_OLD))**1.5D0

	    VINF=1000.0_LDP
	    VINF=1000.0D0

	    BETA=1.0_LDP
	    BETA=1.0D0

	      V(I)=T3*OLD_V(I)*(T1+(1.0_LDP-T1)*T2/(1.0_LDP+T2))
	      V(I)=T3*OLD_V(I)*(T1+(1.0D0-T1)*T2/(1.0D0+T2))

	      SIGMA(I)=R(I)*SIGMA(I)/V(I)-1.0_LDP
	      SIGMA(I)=R(I)*SIGMA(I)/V(I)-1.0D0

	    SIGMA(I)=(OLD_SIGMA(I)+1.0_LDP)*R(I)/OLD_R(I)-1.0_LDP
	    SIGMA(I)=(OLD_SIGMA(I)+1.0D0)*R(I)/OLD_R(I)-1.0D0

	  dVdR_TRANS=(SIGMA(TRANS_I)+1.0_LDP)*V_TRANS/R_TRANS
	  dVdR_TRANS=(SIGMA(TRANS_I)+1.0D0)*V_TRANS/R_TRANS

	  OLD_MDOT=0.0_LDP; VINF=0.0_LDP; BETA=1.0_LDP; V_TRANS=10.0_LDP
	  OLD_MDOT=0.0D0; VINF=0.0D0; BETA=1.0D0; V_TRANS=10.0D0

	      V(I)=OLD_V(I)*(T1+(1.0_LDP-T1)*T2/(1.0_LDP+T2))
	      V(I)=OLD_V(I)*(T1+(1.0D0-T1)*T2/(1.0D0+T2))

	      SIGMA(I)=R(I)*SIGMA(I)/V(I)-1.0_LDP
	      SIGMA(I)=R(I)*SIGMA(I)/V(I)-1.0D0

	    dVdR_TRANS=(SIGMA(TRANS_I)+1.0_LDP)*V_TRANS/R_TRANS
	    dVdR_TRANS=(SIGMA(TRANS_I)+1.0D0)*V_TRANS/R_TRANS

	      V(I)=V(I+1)*1.01_LDP		!Value irrelevant
	      V(I)=V(I+1)*1.01D0		!Value irrelevant

	  T1=3.0_LDP; CALL GEN_IN(T1,'Number of depth points per scale height')
	  T1=3.0D0; CALL GEN_IN(T1,'Number of depth points per scale height')

	  IF(T1 .GT. 1)T1=1.0_LDP/T1
	  IF(T1 .GT. 1)T1=1.0D0/T1

	  V(1:ND)=1.0E-15_LDP*V(1:ND)
	  V(1:ND)=1.0D-15*V(1:ND)

	    SIGMA(I)=R(I)*SIGMA(I)/V(I)-1.0_LDP
	    SIGMA(I)=R(I)*SIGMA(I)/V(I)-1.0D0

	    SIGMA(I)=R(I)*SIGMA(I)/V(I)-1.0_LDP
	    SIGMA(I)=R(I)*SIGMA(I)/V(I)-1.0D0

	    SIGMA(I)=R(I)*SIGMA(I)/V(I)-1.0_LDP
	    SIGMA(I)=R(I)*SIGMA(I)/V(I)-1.0D0

	    XVAL=5.0_LDP; CALL PGSCH(XVAL)
	    XVAL=5.0; CALL PGSCH(XVAL)

	        R(1:ND)=(10.0_LDP**R(1:ND))*OLD_R(ND_OLD)
	        R(1:ND)=(10.0D0**R(1:ND))*OLD_R(ND_OLD)

	        V(1:ND)=(10.0_LDP**V(1:ND))
	        V(1:ND)=(10.0D0**V(1:ND))

	    SIGMA(I)=R(I)*SIGMA(I)/V(I)-1.0_LDP
	    SIGMA(I)=R(I)*SIGMA(I)/V(I)-1.0D0

	    T2=0.00_LDP
	    T2=0.00

	  RO = R_TRANS * (1.0_LDP - (2.0_LDP*V_TRANS/VINF)**(1.0_LDP/BETA) )
	  RO = R_TRANS * (1.0D0 - (2.0D0*V_TRANS/VINF)**(1.0D0/BETA) )

	  SCALE_HEIGHT =  0.5_LDP*R_TRANS / (T1 - BETA*RO/(R_TRANS-RO) )
	  SCALE_HEIGHT =  0.5D0*R_TRANS / (T1 - BETA*RO/(R_TRANS-RO) )

            T2=1.0_LDP-T1
            T2=1.0D0-T1

            BOT = 1.0_LDP + exp( (R_TRANS-R(I))/SCALE_HEIGHT )
            BOT = 1.0D0 + exp( (R_TRANS-R(I))/SCALE_HEIGHT )

            dTOPdR = VINF * BETA * T1 / R(I) * T2**(BETA - 1.0_LDP)
            dTOPdR = VINF * BETA * T1 / R(I) * T2**(BETA - 1.0D0)

            SIGMA(I)=R(I)*dVdR/V(I)-1.0_LDP
            SIGMA(I)=R(I)*dVdR/V(I)-1.0D0

	  SCALE_HEIGHT = V_TRANS / (2.0_LDP * DVDR_TRANS)
	  SCALE_HEIGHT = V_TRANS / (2.0D0 * DVDR_TRANS)

	    T2=1.0_LDP-T1
	    T2=1.0D0-T1

	    TOP = 2.0_LDP*V_TRANS + (VINF-2.0_LDP*V_TRANS) * T2**BETA
	    TOP = 2.0D0*V_TRANS + (VINF-2.0D0*V_TRANS) * T2**BETA

	    BOT = 1.0_LDP + exp( (R_TRANS-R(I))/SCALE_HEIGHT )
	    BOT = 1.0D0 + exp( (R_TRANS-R(I))/SCALE_HEIGHT )

	    dTOPdR = (VINF - 2.0_LDP*V_TRANS) * BETA * T1 / R(I) * T2**(BETA - 1.0_LDP)
	    dTOPdR = (VINF - 2.0D0*V_TRANS) * BETA * T1 / R(I) * T2**(BETA - 1.0D0)

            SIGMA(I)=R(I)*dVdR/V(I)-1.0_LDP
            SIGMA(I)=R(I)*dVdR/V(I)-1.0D0

	  SCALE_HEIGHT = V_TRANS / (2.0_LDP * DVDR_TRANS)
	  SCALE_HEIGHT = V_TRANS / (2.0D0 * DVDR_TRANS)

	  ALPHA=2.0_LDP
	  ALPHA=2.0D0

	  IF(VEL_TYPE .EQ. 4)ALPHA=3.0_LDP
	  IF(VEL_TYPE .EQ. 4)ALPHA=3.0D0

	    T2=1.0_LDP-T1
	    T2=1.0D0-T1

	    BOT = 1.0_LDP + (ALPHA-1.0_LDP)*exp( (R_TRANS-R(I))/SCALE_HEIGHT )
	    BOT = 1.0D0 + (ALPHA-1.0D0)*exp( (R_TRANS-R(I))/SCALE_HEIGHT )

	    dTOPdR = (VINF - ALPHA*V_TRANS) * BETA * T1 / R(I) * T2**(T3-1.0_LDP) +
	    dTOPdR = (VINF - ALPHA*V_TRANS) * BETA * T1 / R(I) * T2**(T3-1.0D0) +

	1                  T1*TOP*(BETA2-BETA)*(1.0_LDP+LOG(T2))/R(I)
	1                  T1*TOP*(BETA2-BETA)*(1.0D0+LOG(T2))/R(I)

	    dBOTdR=  (ALPHA-1.0_LDP)*exp( (R_TRANS-R(I))/SCALE_HEIGHT ) / SCALE_HEIGHT
	    dBOTdR=  (ALPHA-1.0D0)*exp( (R_TRANS-R(I))/SCALE_HEIGHT ) / SCALE_HEIGHT

            SIGMA(I)=R(I)*dVdR/V(I)-1.0_LDP
            SIGMA(I)=R(I)*dVdR/V(I)-1.0D0

	  BETA2=BETA; VEXT=0.1_LDP*VINF; RP2=2.0_LDP
	  BETA2=BETA; VEXT=0.1D0*VINF; RP2=2.0D0

	  SCALE_HEIGHT = V_TRANS / (2.0_LDP * DVDR_TRANS)
	  SCALE_HEIGHT = V_TRANS / (2.0D0 * DVDR_TRANS)

	    T2=1.0_LDP-T1
	    T2=1.0D0-T1

	    TOP = 2.0_LDP*V_TRANS + (VINF-2.0_LDP*V_TRANS) * T2**BETA
	    TOP = 2.0D0*V_TRANS + (VINF-2.0D0*V_TRANS) * T2**BETA

	    BOT = 1.0_LDP + exp( (R_TRANS-R(I))/SCALE_HEIGHT )
	    BOT = 1.0D0 + exp( (R_TRANS-R(I))/SCALE_HEIGHT )

            IF(RP2/R(I) .LT. 1.0_LDP)THEN
            IF(RP2/R(I) .LT. 1.0D0)THEN

               TOP=TOP+ VEXT*(1.0_LDP-RP2/R(I))**BETA2
               TOP=TOP+ VEXT*(1.0D0-RP2/R(I))**BETA2

               dTOPdR=(RP2/R(I)/R(I))*BETA2*VEXT*(1.0_LDP-RP2/R(I))**(BETA2-1)
               dTOPdR=(RP2/R(I)/R(I))*BETA2*VEXT*(1.0D0-RP2/R(I))**(BETA2-1)

               dTOPdR=0.0_LDP
               dTOPdR=0.0D0

	    dTOPdR = dTOPdR + (VINF - 2.0_LDP*V_TRANS) * BETA * T1 / R(I) * T2**(BETA - 1.0_LDP)
	    dTOPdR = dTOPdR + (VINF - 2.0D0*V_TRANS) * BETA * T1 / R(I) * T2**(BETA - 1.0D0)

            SIGMA(I)=R(I)*dVdR/V(I)-1.0_LDP
            SIGMA(I)=R(I)*dVdR/V(I)-1.0D0


rewrite_dc.f

	CHIBF=2.815E-06_LDP
	CHIBF=2.815E-06

	CHIFF=3.69E-29_LDP
	CHIFF=3.69E-29

	HDKT=4.7994145_LDP
	HDKT=4.7994145

	TWOHCSQ=0.0147452575_LDP
	TWOHCSQ=0.0147452575

	OPLIN=2.6540081E+08_LDP		!pi*e*e/m/c*1.0E+10
	OPLIN=2.6540081E+08		!pi*e*e/m/c*1.0E+10

	EMLIN=5.27296E-03_LDP		!pc*1.0E+025/4.0/pi
	EMLIN=5.27296E-03		!pc*1.0E+025/4.0/pi

	INDX(1:N_N)=0.0_LDP
	INDX(1:N_N)=0.0D0


rewrite_dc_v2.f

	CHIBF=2.815E-06_LDP
	CHIBF=2.815E-06

	CHIFF=3.69E-29_LDP
	CHIFF=3.69E-29

	HDKT=4.7994145_LDP
	HDKT=4.7994145

	TWOHCSQ=0.0147452575_LDP
	TWOHCSQ=0.0147452575

	OPLIN=2.6540081E+08_LDP		!pi*e*e/m/c*1.0E+10
	OPLIN=2.6540081E+08		!pi*e*e/m/c*1.0E+10

	EMLIN=5.27296E-03_LDP		!pc*1.0E+025/4.0/pi
	EMLIN=5.27296E-03		!pc*1.0E+025/4.0/pi


rewrite_jh.f


rewrite_old_model_data.f


rewrite_scr.f


scale_omega_v1.f

	SCALE_FACTOR=1.0_LDP
	SCALE_FACTOR=1.0D0

	  IF(MINVAL(OMEGA(1:NUM_TVALS)) .GT. 0.01_LDP .AND. MAXVAL(OMEGA(1:NUM_TVALS)) .LT. 9999.0_LDP)THEN
	  IF(MINVAL(OMEGA(1:NUM_TVALS)) .GT. 0.01 .AND. MAXVAL(OMEGA(1:NUM_TVALS)) .LT. 9999.0D0)THEN


set_hydro_hd_loc.f


set_new_sn_mod.f

            FRAC_TIME_STEP=1.1_LDP
            FRAC_TIME_STEP=1.1D0


show_float_kind.f


solve_ba_mat.f

	HDKT=4.7994145_LDP
	HDKT=4.7994145D0

	  IONIZATION_ENERGY=109678.7640_LDP
	  IONIZATION_ENERGY=109678.7640D0

	    EDGE(I)=IONIZATION_ENERGY*SPEED_OF_LIGHT()*1.0E-15_LDP/I/I
	    EDGE(I)=IONIZATION_ENERGY*SPEED_OF_LIGHT()*1.0D-15/I/I

	    STAT_WT(I)=2.0_LDP*I*I
	    STAT_WT(I)=2.0D0*I*I

	  GION=1.0_LDP
	  GION=1.0D0

	  RGU=LOG(2.07078E-22_LDP)
	  RGU=LOG(2.07078D-22)

	  Y=POPS(N-1)*POPS(N-2)*( POPS(N)**(-1.5_LDP) )/GION
	  Y=POPS(N-1)*POPS(N-2)*( POPS(N)**(-1.5D0) )/GION

	      CMAT(I,N)=CMAT(I,N)-(1.5_LDP+HDKT*EDGE(J)/POPS(N))*CMAT(I,J)
	      CMAT(I,N)=CMAT(I,N)-(1.5D0+HDKT*EDGE(J)/POPS(N))*CMAT(I,J)

	RHS=0.0_LDP
	RHS=0.0D0

	    T1=0.0_LDP
	    T1=0.0D0

	    IF(NEW_SOL(I) .NE. 0)T1=100.0_LDP*(NEW_SOL(I)-STEQ(I))/NEW_SOL(I)
	    IF(NEW_SOL(I) .NE. 0)T1=100.0D0*(NEW_SOL(I)-STEQ(I))/NEW_SOL(I)

	  DI_NEW=POPS(N-2)*(1.0_LDP-STEQ(N-2))
	  DI_NEW=POPS(N-2)*(1.0D0-STEQ(N-2))

	  ED_NEW=POPS(N-1)*(1.0_LDP-STEQ(N-1))
	  ED_NEW=POPS(N-1)*(1.0D0-STEQ(N-1))

	  T_NEW=POPS(N)*(1.0_LDP-STEQ(N))
	  T_NEW=POPS(N)*(1.0D0-STEQ(N))

	  RGU=LOG(2.07078E-22_LDP)
	  RGU=LOG(2.07078D-22)

	  Y=ED_NEW*DI_NEW*( T_NEW**(-1.5_LDP) )/GION
	  Y=ED_NEW*DI_NEW*( T_NEW**(-1.5D0) )/GION

	    NEW_POPS(I)=(POPS(I)/PLTE(I))*(1.0_LDP-STEQ(I))*NEW_LTE(I)
	    NEW_POPS(I)=(POPS(I)/PLTE(I))*(1.0-STEQ(I))*NEW_LTE(I)

	  RHS=0.0_LDP
	  RHS=0.0D0


tlusty_vel.f

	RSTAR=18.48_LDP
	RSTAR=18.48D0

	RMAX=50.0_LDP
	RMAX=50.0D0

	MDOT=1.0E-06_LDP
	MDOT=1.0D-06

	VINF=800._LDP
	VINF=800.D0

	BETA=1.0_LDP
	BETA=1.0D0

	BETA_SCL=0.2_LDP
	BETA_SCL=0.2D0

	      MDOT=1.0E-22_LDP
	      MDOT=1.0D-22

	  MDOT=1.0E-22_LDP
	  MDOT=1.0D-22

	RCORE=RSTAR*6.9599_LDP
	RCORE=RSTAR*6.9599D0

	AMDOT=MDOT*6.3029_LDP
	AMDOT=MDOT*6.3029D0

	T(1:ND)=1.0E-04_LDP*T(1:ND)
	T(1:ND)=1.0D-04*T(1:ND)

	ZZ(ND)=0.0_LDP
	ZZ(ND)=0.0D0

	  ZZ(ID)=ZZ(ID+1)+2.0E-10_LDP*(DM(ID+1)-DM(ID))/(DSH(ID+1)+DSH(ID))
	  ZZ(ID)=ZZ(ID+1)+2.0D-10*(DM(ID+1)-DM(ID))/(DSH(ID+1)+DSH(ID))

	    TA(I)=1.0_LDP+ND*(I-1.0_LDP)/ND_CMF
	    TA(I)=1.0D0+ND*(I-1.0D0)/ND_CMF

	  TA(1)=1.0_LDP; TA(ND_CMF)=ND
	  TA(1)=1.0D0; TA(ND_CMF)=ND

	    VW(K)=VINF*(1.0_LDP-R0/RA(K))**(BETA+(BETA_MIN-BETA)*
	    VW(K)=VINF*(1.0D0-R0/RA(K))**(BETA+(BETA_MIN-BETA)*

	1          EXP( (1.0_LDP-RA(K)/RCORE)/BETA_SCL ))
	1          EXP( (1.0D0-RA(K)/RCORE)/BETA_SCL ))

	MIN_VAL=1.0E+37_LDP
	MIN_VAL=1.0E+37

	  VW(K)=VINF*(1.0_LDP-R0/RA(K))**(BETA+(BETA_MIN-BETA)*
	  VW(K)=VINF*(1.0D0-R0/RA(K))**(BETA+(BETA_MIN-BETA)*

	1          EXP( (1.0_LDP-RA(K)/RCORE)/BETA_SCL ))
	1          EXP( (1.0D0-RA(K)/RCORE)/BETA_SCL ))

	    VW_F(K)=VINF*(1.0_LDP-R0/R_F(K))**(BETA+(BETA_MIN-BETA)*
	    VW_F(K)=VINF*(1.0D0-R0/R_F(K))**(BETA+(BETA_MIN-BETA)*

	1          EXP( (1.0_LDP-R_F(K)/RCORE)/BETA_SCL ))
	1          EXP( (1.0D0-R_F(K)/RCORE)/BETA_SCL ))

	  TAUR_F(1)=KAPPA_A(1)*R_F(1)*1.0E+10_LDP*DSH_F(1)
	  TAUR_F(1)=KAPPA_A(1)*R_F(1)*1.0D+10*DSH_F(1)

	    TAUR_F(I)=TAUR_F(I-1)+0.5E+10_LDP*(R_F(I-1)-R_F(I))*
	    TAUR_F(I)=TAUR_F(I-1)+0.5D+10*(R_F(I-1)-R_F(I))*

	  VW_BEG=MIN(1.0_LDP,VPA(C_INDX))
	  VW_BEG=MIN(1.0D0,VPA(C_INDX))

	  TAUR_CMF(ND_CMF-1)=TEMP_F(NF)-0.1_LDP*T1
	  TAUR_CMF(ND_CMF-1)=TEMP_F(NF)-0.1*T1

	  TAUR_CMF(ND_CMF-2)=TEMP_F(NF)-0.3_LDP*T1
	  TAUR_CMF(ND_CMF-2)=TEMP_F(NF)-0.3*T1

	  DENS_CMF(2)=DSH_F(1)+0.1_LDP*T1
	  DENS_CMF(2)=DSH_F(1)+0.1*T1

	  DENS_CMF(3)=DSH_F(1)+0.3_LDP*T1
	  DENS_CMF(3)=DSH_F(1)+0.3*T1

	    CONS=0.1_LDP
	    CONS=0.1D0

	    EPS=0.75E00_LDP
	    EPS=0.75D00

	    TAUR_CMF(2)=TEMP_F(1)+0.1_LDP*T1
	    TAUR_CMF(2)=TEMP_F(1)+0.1*T1

	    TAUR_CMF(3)=TEMP_F(1)+0.3_LDP*T1
	    TAUR_CMF(3)=TEMP_F(1)+0.3*T1

	    TAUR_CMF(ND_CMF-1)=TEMP_F(NF)-0.1_LDP*T1
	    TAUR_CMF(ND_CMF-1)=TEMP_F(NF)-0.1*T1

	    TAUR_CMF(ND_CMF-2)=TEMP_F(NF)-0.3_LDP*T1
	    TAUR_CMF(ND_CMF-2)=TEMP_F(NF)-0.3*T1

	    DENS_CMF(2)=DSH_F(1)+0.1_LDP*T1
	    DENS_CMF(2)=DSH_F(1)+0.1*T1

	    DENS_CMF(3)=DSH_F(1)+0.3_LDP*T1
	    DENS_CMF(3)=DSH_F(1)+0.3*T1

	    DENS_CMF(ND_CMF-1)=DSH_F(NF)-0.1_LDP*T1
	    DENS_CMF(ND_CMF-1)=DSH_F(NF)-0.1*T1

	    DENS_CMF(ND_CMF-2)=DSH_F(NF)-0.3_LDP*T1
	    DENS_CMF(ND_CMF-2)=DSH_F(NF)-0.3*T1

	V_CMF(1:ND_CMF)=V_CMF(1:ND_CMF)/1.0E+05_LDP
	V_CMF(1:ND_CMF)=V_CMF(1:ND_CMF)/1.0D+05


tst_ba_mat_sol.f

	HDKT=4.7994145_LDP
	HDKT=4.7994145

	  IONIZATION_ENERGY=109678.7640_LDP
	  IONIZATION_ENERGY=109678.7640D0

	    EDGE(I)=IONIZATION_ENERGY*SPEED_OF_LIGHT()*1.0E-15_LDP/I/I
	    EDGE(I)=IONIZATION_ENERGY*SPEED_OF_LIGHT()*1.0D-15/I/I

	    STAT_WT(I)=2.0_LDP*I*I
	    STAT_WT(I)=2.0D0*I*I

	  GION=1.0_LDP
	  GION=1.0D0

	  RGU=LOG(2.07078E-22_LDP)
	  RGU=LOG(2.07078D-22)

	  Y=POPS(N-1)*POPS(N-2)*( POPS(N)**(-1.5_LDP) )/GION
	  Y=POPS(N-1)*POPS(N-2)*( POPS(N)**(-1.5D0) )/GION

	      CMAT(I,N)=CMAT(I,N)-(1.5_LDP+HDKT*EDGE(J)/POPS(N))*CMAT(I,J)
	      CMAT(I,N)=CMAT(I,N)-(1.5D0+HDKT*EDGE(J)/POPS(N))*CMAT(I,J)

	RHS=0.0_LDP
	RHS=0.0D0

	LARGEST_VAL=1.0E-42_LDP
	LARGEST_VAL=1.0D-42

	T1=0.0_LDP
	T1=0.0D0

	  DI_NEW=POPS(N-2)*(1.0_LDP-STEQ(N-2))
	  DI_NEW=POPS(N-2)*(1.0D0-STEQ(N-2))

	  ED_NEW=POPS(N-1)*(1.0_LDP-STEQ(N-1))
	  ED_NEW=POPS(N-1)*(1.0D0-STEQ(N-1))

	  T_NEW=POPS(N)*(1.0_LDP-STEQ(N))
	  T_NEW=POPS(N)*(1.0D0-STEQ(N))

	  RGU=LOG(2.07078E-22_LDP)
	  RGU=LOG(2.07078D-22)

	  Y=ED_NEW*DI_NEW*( T_NEW**(-1.5_LDP) )/GION
	  Y=ED_NEW*DI_NEW*( T_NEW**(-1.5D0) )/GION

	    NEW_POPS(I)=(POPS(I)/PLTE(I))*(1.0_LDP-STEQ(I))*NEW_LTE(I)
	    NEW_POPS(I)=(POPS(I)/PLTE(I))*(1.0-STEQ(I))*NEW_LTE(I)

	  POP_SOLS(J,1)=POPS(J)*(1.0_LDP-STEQ(J))
	  POP_SOLS(J,1)=POPS(J)*(1.0D0-STEQ(J))

	I=164; T2=0.0_LDP
	I=164; T2=0.0D0

	RHS=0.0_LDP
	RHS=0.0D0

	LARGEST_VAL=1.0E-42_LDP
	LARGEST_VAL=1.0D-42

	  POP_SOLS(J,2)=POPS(J)*(1.0_LDP-STEQ(J))
	  POP_SOLS(J,2)=POPS(J)*(1.0D0-STEQ(J))

	  OLD_SOL(I)=MAX(1.0_LDP,ABS(STEQ(I)))
	  OLD_SOL(I)=MAX(1.0D0,ABS(STEQ(I)))

	  POP_SOLS(J,3)=POPS(J)*(1.0_LDP-STEQ(J))
	  POP_SOLS(J,3)=POPS(J)*(1.0D0-STEQ(J))

	RHS=0.0_LDP
	RHS=0.0D0

	LARGEST_VAL=1.0E-42_LDP
	LARGEST_VAL=1.0D-42

	   CMAT(:,N-1)=0.0_LDP
	   CMAT(:,N-1)=0.0D0

	   CMAT(:,N)=0.0_LDP
	   CMAT(:,N)=0.0D0

	   CMAT(N-1,N-1)=1.0_LDP;
	   CMAT(N-1,N-1)=1.0;

	   CMAT(N,N)=1.0_LDP;
	   CMAT(N,N)=1.0;

	   CMAT(:,N-1)=0.0_LDP
	   CMAT(:,N-1)=0.0D0

	   CMAT(:,N)=0.0_LDP
	   CMAT(:,N)=0.0D0

	   CMAT(N-1,N-1)=1.0_LDP;
	   CMAT(N-1,N-1)=1.0;

	   CMAT(N,N)=1.0_LDP;
	   CMAT(N,N)=1.0;

	COL_SF=0.0_LDP
	COL_SF=0.0D0


tst_char_v2.f

	C_KMS=1.0E-05_LDP*SPEED_OF_LIGHT()
	C_KMS=1.0D-05*SPEED_OF_LIGHT()

	R(1)=20.0_LDP
	R(1)=20.0D0

	R(ND)=2.0_LDP
	R(ND)=2.0D0

	VDOP_VEC(1:ND)=100.0_LDP
	VDOP_VEC(1:ND)=100.0D0

	VMIN=10000.0_LDP
	VMIN=10000.0D0

	  SIGMA(I)=0.0_LDP
	  SIGMA(I)=0.0D0

            HQW_AT_RMAX(IP)=2.0_LDP*HQW_P(1,IP)
            HQW_AT_RMAX(IP)=2.0D0*HQW_P(1,IP)

	  Y(1:N)=RAY(I)%R_RAY(1:N)*SQRT(1.0_LDP-RAY(I)%MU_M(1:N)*RAY(I)%MU_M(1:N))
	  Y(1:N)=RAY(I)%R_RAY(1:N)*SQRT(1.0D0-RAY(I)%MU_M(1:N)*RAY(I)%MU_M(1:N))

	  Y(N+1:2*N)=RAY(I)%R_RAY(N:1:-1)*SQRT(1.0_LDP-RAY(I)%MU_P(N:1:-1)*RAY(I)%MU_P(N:1:-1))
	  Y(N+1:2*N)=RAY(I)%R_RAY(N:1:-1)*SQRT(1.0D0-RAY(I)%MU_P(N:1:-1)*RAY(I)%MU_P(N:1:-1))


update_pg_filename.f


wr_f_to_s.f

	CHIBF=2.815E-06_LDP
	CHIBF=2.815E-06

	CHIFF=3.69E-29_LDP
	CHIFF=3.69E-29

	HDKT=4.7994145_LDP
	HDKT=4.7994145

	TWOHCSQ=0.0147452575_LDP
	TWOHCSQ=0.0147452575

	OPLIN=2.6540081E+08_LDP
	OPLIN=2.6540081E+08

	EMLIN=5.27296E-03_LDP
	EMLIN=5.27296E-03

	OPLIN=2.6540081E+08_LDP
	OPLIN=2.6540081E+08

	EMLIN=5.27296E-03_LDP
	EMLIN=5.27296E-03

          G_SUM(:)=0.0_LDP
          G_SUM(:)=0.0D0

          EDGE_SUM(:)=0.0_LDP
          EDGE_SUM(:)=0.0D0

	    IF(EDGE_SUM(I) .NE. -999999.0_LDP)THEN
	    IF(EDGE_SUM(I) .NE. -999999.0D0)THEN

	      EDGE_SUM(I)=-999999.0_LDP
	      EDGE_SUM(I)=-999999.0D0

	  LS_EMIN(:)=1.0E+36_LDP
	  LS_EMIN(:)=1.0E+36

	  LS_EMAX(:)=-1.0E+36_LDP
	  LS_EMAX(:)=-1.0E+36

	    LS_EMID(I)=0.5_LDP*(LS_EMIN(I)+LS_EMAX(I))
	    LS_EMID(I)=0.5D0*(LS_EMIN(I)+LS_EMAX(I))

	  FRAC_DEL_E=0.01_LDP*FRAC_DEL_E
	  FRAC_DEL_E=0.01D0*FRAC_DEL_E

	        T1=0.5_LDP*(DC(J,1)+DC(I,1))
	        T1=0.5D0*(DC(J,1)+DC(I,1))

	        IF( ABS(DC(J,1)-DC(I,1))/T1 .LT. 0.01_LDP*ACC .AND.
	        IF( ABS(DC(J,1)-DC(I,1))/T1 .LT. 0.01*ACC .AND.

	        LAM_EDGE(I)=1.0E+08_LDP/(ION_EN-ENERGY(I))
	        LAM_EDGE(I)=1.0D+08/(ION_EN-ENERGY(I))

	        LAM_EDGE(I)=1.0E+08_LDP/(ION_EN-ENERGY(I))
	        LAM_EDGE(I)=1.0D+08/(ION_EN-ENERGY(I))

	        LAM_EDGE(I)=1.0E+08_LDP/(ION_EN-ENERGY(I))
	        LAM_EDGE(I)=1.0D+08/(ION_EN-ENERGY(I))

	    LAM_EDGE(I)=1.0E+08_LDP/(ION_EN-ENERGY(I))
	    LAM_EDGE(I)=1.0D+08/(ION_EN-ENERGY(I))

	      LAM_EDGE(I)=1.0E+08_LDP/(ION_EN-ENERGY(I))
	      LAM_EDGE(I)=1.0D+08/(ION_EN-ENERGY(I))

	      T1=2.07078E-22_LDP*ED(1)*(G_GS/G_ION)*EXP(HDKT*FEDGE(1)/T_EXCITE)/(T_EXCITE**1.50_LDP)
	      T1=2.07078D-22*ED(1)*(G_GS/G_ION)*EXP(HDKT*FEDGE(1)/T_EXCITE)/(T_EXCITE**1.50)

	      T1=EXP( HDKT*FEDGE(I)*(1.0_LDP/T_EXCITE-1.0_LDP/TEMP(1)) )
	      T1=EXP( HDKT*FEDGE(I)*(1.0D0/T_EXCITE-1.0D0/TEMP(1)) )

	      T2=(TEMP(1)/T_EXCITE)**1.5_LDP
	      T2=(TEMP(1)/T_EXCITE)**1.5D0


write_osc_v2.f

	NU_TO_EV=1.0_LDP/0.241798836_LDP		!Conversion factor from 10^15 Hz to eV
	NU_TO_EV=1.0D0/0.241798836		!Conversion factor from 10^15 Hz to eV

	NEW_ARAD(:)=0.0_LDP
	NEW_ARAD(:)=0.0D0

	      T1=100.0_LDP*(ARAD(I)/NEW_ARAD(I)-1.0_LDP)
	      T1=100.0D0*(ARAD(I)/NEW_ARAD(I)-1.0D0)

	    IF(ACIV(I,J) .NE. 0.0_LDP)THEN
	    IF(ACIV(I,J) .NE. 0.0D0)THEN

	    IF(ACIV(I,J) .NE. 0.0_LDP)THEN
	    IF(ACIV(I,J) .NE. 0.0D0)THEN

              IF(ABS(T1) .LT. 100000.0_LDP)THEN
              IF(ABS(T1) .LT. 100000.0)THEN

	    IF(ACIV(J,I) .NE. 0.0_LDP)THEN
	    IF(ACIV(J,I) .NE. 0.0D0)THEN

              IF(ABS(T1) .LT. 100000.0_LDP)THEN
              IF(ABS(T1) .LT. 100000.0)THEN

