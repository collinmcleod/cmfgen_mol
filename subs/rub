Index: gen_omega_rd_v2.f
===================================================================
RCS file: /export/home/jdh/cvs/cmfsource/subs/gen_omega_rd_v2.f,v
retrieving revision 1.1.1.1
diff -r1.1.1.1 gen_omega_rd_v2.f
19a20,21
> ! Altered 20-Dec-2004 : Eror message now output if error occurs reading
> !                         the actual collison values.
370c372,379
< 	  READ(STRING,*)(COL_VEC(I),I=1,NUM_TVALS)
---
> 	  READ(STRING,*,IOSTAT=IOS)(COL_VEC(I),I=1,NUM_TVALS)
> 	  IF(IOS .NE. 0)THEN
> 	    WRITE(LUER,*)'Error in GEN_OMEGA_RD_V2'  
> 	    WRITE(LUER,*)'Error reading collisional data from',FILE_NAME
> 	    WRITE(LUER,*)TRIM(STRING)
> 	    WRITE(LUER,*)'IOS=',IOS
> 	    STOP
> 	  END IF
Index: genosc_v6.f
===================================================================
RCS file: /export/home/jdh/cvs/cmfsource/subs/genosc_v6.f,v
retrieving revision 1.1.1.1
diff -r1.1.1.1 genosc_v6.f
14a15,16
> C Altered 21-Dec-2004 - Check on ENERGY level ordering, and name matching when
> C                          reading in transitions included.
43c45,46
< 	CHARACTER*30 LOCNAME(N)
---
> 	CHARACTER*40 LOCNAME(N)
> 	CHARACTER*40 LOW_NAME,UP_NAME
213c216
< 	1             'Error eading in Level Names from '//FILNAME
---
> 	1             'Error reading in Level Names from '//FILNAME
218a222,232
> ! Check the energy levels are in order.
> !
> 	  DO I=2,N
> 	    IF(FEDGE(I) .GT. FEDGE(I-1))THEN
> 	      WRITE(LUER,*)'Error reading in Level Names from '//FILNAME
> 	      WRITE(LUER,*)'Energy levels are out of order'
> 	      WRITE(LUER,*)'Levels are:',I-1,I
> 	      STOP
> 	    END IF
> 	  END DO
> !
257c271,272
< 	  STRING(1:)=STRING(L1:)
---
> 	  LOW_NAME=ADJUSTL(STRING(1:L1-1))
> 	  STRING(1:)=STRING(L1+1:)
258a274
> 	  UP_NAME=ADJUSTL(STRING(1:L1-1))
271c287,296
< 	  IF(I .LE. N .AND. J .LE. N)EINA(I,J)=T1
---
> 	  IF(I .LE. N .AND. J .LE. N)THEN
> 	    EINA(I,J)=T1
> 	    IF(LOW_NAME .NE. LEVNAME(I) .OR. 
> 	1       UP_NAME .NE. LEVNAME(J) .OR. I .GE. J)THEN
> 	      WRITE(LUER,*)'Invalid transition format in '//FILNAME
> 	      WRITE(LUER,*)'Indices and level names don''t match'
> 	      WRITE(LUER,*)'I,J=',I,J
> 	      STOP
> 	    END IF
> 	  END IF
Index: newpertjd.f
===================================================================
RCS file: /export/home/jdh/cvs/cmfsource/subs/newpertjd.f,v
retrieving revision 1.1.1.1
diff -r1.1.1.1 newpertjd.f
6,7c6
< C temperature. Note that F2DA , FC and FA must be stored sequentially
< C for the guassian elimination routine.
---
> C temperature. 
13a13,15
> C Altered 08-Dec-04  Introduce CONTIG array. Thus F2DA , FC and FA no longer
> C                      have to be stored sequentially for the guassian 
> C                      elimination routine.
48c50
< 	INTEGER*4 I,J,KS,NI,LS
---
> 	REAL*8 CONTIG(ND,2*ND+1)
49a52
> 	INTEGER*4 I,J,KS,NI,LS
55a59
> 	FA(:)=0.0D0
170a175,176
> C CONTIG is used as a dummary array, as otherwise F2DA, FC and
> C FA would have to occupy a contiguous are of memory.
171a178,181
> 	CONTIG(1:ND,1:ND)=F2DA
> 	CONTIG(1:ND,ND+1:2*ND)=FC
> 	CONTIG(1:ND,2*ND+1)=FA
> !
173c183,187
< 	CALL GAUSEL(FB,F2DA,TA,ND,I,KS)
---
> 	CALL GAUSEL(FB,CONTIG,TA,ND,I,KS)
> !
> 	F2DA=CONTIG(1:ND,1:ND)
> 	FC=CONTIG(1:ND,ND+1:2*ND)
> 	FA=CONTIG(1:ND,2*ND+1)
Index: rub
===================================================================
RCS file: /export/home/jdh/cvs/cmfsource/subs/rub,v
retrieving revision 1.1.1.1
diff -r1.1.1.1 rub
1c1,106
< scale_grey.f
---
> Index: gen_omega_rd_v2.f
> ===================================================================
> RCS file: /export/home/jdh/cvs/cmfsource/subs/gen_omega_rd_v2.f,v
> retrieving revision 1.1.1.1
> diff -r1.1.1.1 gen_omega_rd_v2.f
> 19a20,21
> > ! Altered 20-Dec-2004 : Eror message now output if error occurs reading
> > !                         the actual collison values.
> 370c372,379
> < 	  READ(STRING,*)(COL_VEC(I),I=1,NUM_TVALS)
> ---
> > 	  READ(STRING,*,IOSTAT=IOS)(COL_VEC(I),I=1,NUM_TVALS)
> > 	  IF(IOS .NE. 0)THEN
> > 	    WRITE(LUER,*)'Error in GEN_OMEGA_RD_V2'  
> > 	    WRITE(LUER,*)'Error reading collisional data from',FILE_NAME
> > 	    WRITE(LUER,*)TRIM(STRING)
> > 	    WRITE(LUER,*)'IOS=',IOS
> > 	    STOP
> > 	  END IF
> Index: genosc_v6.f
> ===================================================================
> RCS file: /export/home/jdh/cvs/cmfsource/subs/genosc_v6.f,v
> retrieving revision 1.1.1.1
> diff -r1.1.1.1 genosc_v6.f
> 14a15,16
> > C Altered 21-Dec-2004 - Check on ENERGY level ordering, and name matching when
> > C                          reading in transitions included.
> 43c45,46
> < 	CHARACTER*30 LOCNAME(N)
> ---
> > 	CHARACTER*40 LOCNAME(N)
> > 	CHARACTER*40 LOW_NAME,UP_NAME
> 213c216
> < 	1             'Error eading in Level Names from '//FILNAME
> ---
> > 	1             'Error reading in Level Names from '//FILNAME
> 218a222,232
> > ! Check the energy levels are in order.
> > !
> > 	  DO I=2,N
> > 	    IF(FEDGE(I) .GT. FEDGE(I-1))THEN
> > 	      WRITE(LUER,*)'Error reading in Level Names from '//FILNAME
> > 	      WRITE(LUER,*)'Energy levels are out of order'
> > 	      WRITE(LUER,*)'Levels are:',I-1,I
> > 	      STOP
> > 	    END IF
> > 	  END DO
> > !
> 257c271,272
> < 	  STRING(1:)=STRING(L1:)
> ---
> > 	  LOW_NAME=ADJUSTL(STRING(1:L1-1))
> > 	  STRING(1:)=STRING(L1+1:)
> 258a274
> > 	  UP_NAME=ADJUSTL(STRING(1:L1-1))
> 271c287,296
> < 	  IF(I .LE. N .AND. J .LE. N)EINA(I,J)=T1
> ---
> > 	  IF(I .LE. N .AND. J .LE. N)THEN
> > 	    EINA(I,J)=T1
> > 	    IF(LOW_NAME .NE. LEVNAME(I) .OR. 
> > 	1       UP_NAME .NE. LEVNAME(J) .OR. I .GE. J)THEN
> > 	      WRITE(LUER,*)'Invalid transition format in '//FILNAME
> > 	      WRITE(LUER,*)'Indices and level names don''t match'
> > 	      WRITE(LUER,*)'I,J=',I,J
> > 	      STOP
> > 	    END IF
> > 	  END IF
> Index: newpertjd.f
> ===================================================================
> RCS file: /export/home/jdh/cvs/cmfsource/subs/newpertjd.f,v
> retrieving revision 1.1.1.1
> diff -r1.1.1.1 newpertjd.f
> 6,7c6
> < C temperature. Note that F2DA , FC and FA must be stored sequentially
> < C for the guassian elimination routine.
> ---
> > C temperature. 
> 13a13,15
> > C Altered 08-Dec-04  Introduce CONTIG array. Thus F2DA , FC and FA no longer
> > C                      have to be stored sequentially for the guassian 
> > C                      elimination routine.
> 48c50
> < 	INTEGER*4 I,J,KS,NI,LS
> ---
> > 	REAL*8 CONTIG(ND,2*ND+1)
> 49a52
> > 	INTEGER*4 I,J,KS,NI,LS
> 55a59
> > 	FA(:)=0.0D0
> 170a175,176
> > C CONTIG is used as a dummary array, as otherwise F2DA, FC and
> > C FA would have to occupy a contiguous are of memory.
> 171a178,181
> > 	CONTIG(1:ND,1:ND)=F2DA
> > 	CONTIG(1:ND,ND+1:2*ND)=FC
> > 	CONTIG(1:ND,2*ND+1)=FA
> > !
> 173c183,187
> < 	CALL GAUSEL(FB,F2DA,TA,ND,I,KS)
> ---
> > 	CALL GAUSEL(FB,CONTIG,TA,ND,I,KS)
> > !
> > 	F2DA=CONTIG(1:ND,1:ND)
> > 	FC=CONTIG(1:ND,ND+1:2*ND)
> > 	FA=CONTIG(1:ND,2*ND+1)
Index: scale_grey.f
===================================================================
RCS file: /export/home/jdh/cvs/cmfsource/subs/scale_grey.f,v
retrieving revision 1.2
diff -r1.2 scale_grey.f
5c5
< 	SUBROUTINE SCALE_GREY(TGREY,TAUROSS,LUIN,ND)
---
> 	SUBROUTINE SCALE_GREY(TGREY,TAUROSS,IOS,LUIN,ND)
7a8
> ! Altered 21-Dec-2004: Call changed. Routine now returns IOS is successful.
11,12c12,14
< 	INTEGER*4 ND
< 	INTEGER*4 LUIN 
---
> 	INTEGER ND
> 	INTEGER LUIN 
> 	INTEGER IOS
27d28
< 	INTEGER*4 IOS
29a31
> 	IOS=0
33c35
< 	   WRITE(LU_ER,*)'Unable to open file GREY_SCL_FAC_IN'
---
> 	   WRITE(LU_ER,*)'Warning: unable to open file GREY_SCL_FAC_IN'
38c40
< 	     WRITE(LU_ER,*)'Unable to open file GREY_SCL_FAC'
---
> 	     WRITE(LU_ER,*)'Warning: unable to open file GREY_SCL_FAC'
50c52,57
< 	  READ(LUIN,'(A)')STRING
---
> 	  READ(LUIN,'(A)',IOSTAT=IOS)STRING
> 	  IF(IOS .NE. 0)THEN
> 	    LU_ER=ERROR_LU()
> 	    WRITE(LU_ER,*)'Error reading GREY_SCL_FAC_IN: IOSTAT=',IOS
> 	    RETURN
> 	  END IF
60c67,72
< 	   READ(LUIN,*)OLD_TAU(I),OLD_SCALE_FAC(I)
---
> 	  READ(LUIN,*)OLD_TAU(I),OLD_SCALE_FAC(I)
> 	  IF(IOS .NE. 0)THEN
> 	    LU_ER=ERROR_LU()
> 	    WRITE(LU_ER,*)'Error reading Tau & T from GREY_SCL_FAC_IN: IOSTAT=',IOS
> 	    RETURN
> 	  END IF 
Index: starpcyg_v3.f
===================================================================
RCS file: /export/home/jdh/cvs/cmfsource/subs/starpcyg_v3.f,v
retrieving revision 1.1.1.1
diff -r1.1.1.1 starpcyg_v3.f
14c14
< 	1                 SCLHT,VCORE,VPHOT,VINF1,BETA1,EPS1,
---
> 	1                 SCLHT_ON_RP,VCORE,VPHOT,VINF1,BETA1,EPS1,
19a20,21
> C Altered 20-Dec-2004 - SCLHT_ON_RP is unchanged by this routine. Previusly
> C                         SCLHT(_ON_RP) was multipled by RP.
36c38
< 	REAL*8 SCLHT
---
> 	REAL*8 SCLHT_ON_RP
51a54
> 	REAL*8 SCLHT
63c66
< 	SCLHT=RP*SCLHT
---
> 	SCLHT=RP*SCLHT_ON_RP
Index: torscl.f
===================================================================
RCS file: /export/home/jdh/cvs/cmfsource/subs/torscl.f,v
retrieving revision 1.1.1.1
diff -r1.1.1.1 torscl.f
1,4c1,4
< C
< C Routine to compute the radial optical depth scale. DTAU and dCHI_dR
< C are work vectors.
< C
---
> !
> ! Routine to compute the radial optical depth scale. DTAU and dCHI_dR
> ! are work vectors.
> !
7,18c7,22
< C
< C Altered 02-Jul-1998 : Length of TYPE_ATM checked to avoid bounds problem
< C                        when TYPE_ATM is passed as a single (blank) character.
< C Altered 28-May-1996 : Removed for [jdh.disp]SETVEC routine.
< C                       DOUBLE PRECISION declarations removed.
< C                       ERROR_LU installed.
< C
< C Altered 11-Nov-88 - TYPE_ATM store as option. Alows better
< C                     estimate of optical depth to infinity.
< C
< 	INTEGER*4 ND,I
< 	REAL*8 TOR(ND),CHI(ND),R(ND),DTAU(ND),dCHI_dR(ND),T1
---
> !
> ! Altered 21-Dec-2004 : Bug fix. For TYPE_ATM .NE. 'EXP', the routine was always
> !                         returning TAU(1) = CHI(1)*R(1). Routine now computes
> !                         optical depth over depth indices 1 to 5, and limits the
> !                         power law variation (CHI propto r^{-n}) to n > 1.5.
> ! Altered 02-Jul-1998 : Length of TYPE_ATM checked to avoid bounds problem
> !                        when TYPE_ATM is passed as a single (blank) character.
> ! Altered 28-May-1996 : Removed for [jdh.disp]SETVEC routine.
> !                       DOUBLE PRECISION declarations removed.
> !                       ERROR_LU installed.
> !
> ! Altered 11-Nov-88 - TYPE_ATM store as option. Alows better
> !                     estimate of optical depth to infinity.
> !
> 	INTEGER ND
> 	REAL*8 TOR(ND),CHI(ND),R(ND),DTAU(ND),dCHI_dR(ND)
20,21c24,29
< C
< 	INTEGER*4 ERROR_LU,LUER
---
> !
> 	INTEGER I
> 	INTEGER INDX
> 	REAL*8 T1
> !
> 	INTEGER ERROR_LU,LUER
23c31
< C
---
> !
26,28c34,38
< C
< C Determine optical depth from outer boundary to infinity. 
< C
---
> !
> ! Determine optical depth from outer boundary to infinity. 
> ! For the extrapolations, we use depths 1 & 5 (=INDX).
> !
> 	INDX=5
31,32c41,42
< 	  IF(CHI(1) .GT. 0 .AND. CHI(3) .GT. CHI(1))THEN
< 	   TOR(1)=CHI(1)*(R(1)-R(3))/LOG(CHI(3)/CHI(1))
---
> 	  IF(CHI(1) .GT. 0 .AND. CHI(INDX) .GT. CHI(1))THEN
> 	   TOR(1)=CHI(1)*(R(1)-R(INDX))/LOG(CHI(INDX)/CHI(1))
35c45
< 	    WRITE(LUER,*)'Warning - optical depth at boundary set to 10^{-5}'
---
> 	    WRITE(LUER,*)'Warning - optical depth at boundary set to 10^{-5} in TORSCL'
37,39c47,49
< 	ELSE IF (CHI(1) .GT. 0 .AND. CHI(3) .GT. CHI(1))THEN
< 	  T1=DLOG(CHI(1)/CHI(3))/DLOG(R(1)/R(3))
< 	  IF(T1 .GT. 1)THEN
---
> 	ELSE IF (CHI(1) .GT. 0 .AND. CHI(INDX) .GT. CHI(1))THEN
> 	  T1=DLOG(CHI(1)/CHI(INDX))/DLOG(R(INDX)/R(1))
> 	  IF(T1 .GT. 1.5D0)THEN
43c53
< 	    WRITE(LUER,*)'Warning - opacity assumed to be r**(-2) '
---
> 	    WRITE(LUER,*)'Warning - opacity assumed to be r**(-2) in TORSCL'
47c57
< 	  WRITE(LUER,*)'Warning - opacity assumed to be r**(-2) '
---
> 	  WRITE(LUER,*)'Warning - opacity assumed to be r**(-2) in TORSCL'
49c59
< C
---
> !
53c63
< C
---
> !
